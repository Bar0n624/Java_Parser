
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACCESS ASSIGN BREAK CASE CATCH CHAR CLASS COLON COMMA DEFAULT DIVIDE ELSE FALSE FINALLY FOR IDENTIFIER IF LBRACE LBRACKET LOGICAL LPAREN MINUS NEW NUMBER PASS PLUS RBRACE RBRACKET RETURN RETURNTYPE RPAREN SEMICOLON SOP STATIC STRING SWITCH THIS TIMES TRUE TRY WHILEprograms : program\n    | program programsprogram : class\n    | statementclass : ACCESS CLASS IDENTIFIER LBRACE stats RBRACEthis_assign : THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLONstats : stat\n    | stat statsstat : constructor\n    | statementconstructor : ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE\n    | ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACEfunction : RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE\n    | RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE\n    | ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE\n    | ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE\n    | STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE\n    | STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE\n    | ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE\n    | ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACEparameters : parameter\n    | parameter COMMA parametersparameter : RETURNTYPE IDENTIFIER\n    | RETURNTYPE LBRACKET RBRACKET IDENTIFIERstatements : statement\n    | statement statementsfunction_call : IDENTIFIER LPAREN params RPAREN SEMICOLON\n    | IDENTIFIER LPAREN RPAREN SEMICOLONstatement : assignment_statement\n    | class_statement\n    | print_statement\n    | this_assign\n    | switch\n    | return\n    | while\n    | for\n    | try_catch\n    | PASS SEMICOLON\n    | ACCESS assignment_statement\n    | function\n    | function_call\n    | ifblock\n    | BREAK SEMICOLONswitch : SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACEcases : case\n    | case casescase : CASE NUMBER COLON statements\n    | DEFAULT COLON statementswhile : WHILE LPAREN params RPAREN LBRACE statements RBRACEparams : param\n    | param LOGICAL paramsparam : increment\n    | expressionclass_statement : IDENTIFIER IDENTIFIER SEMICOLON\n    | IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON\n    | IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON\n    | IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON\n    | IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLONarrays : LBRACKET RBRACKET\n    | LBRACKET RBRACKET arrays\n    | LBRACKET expression RBRACKET arrays\n    | LBRACKET expression RBRACKETbool : TRUE\n    | FALSEassignment_statement : RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON\n    | RETURNTYPE IDENTIFIER SEMICOLON\n    | RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON\n    | RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON\n    | RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON\n    | RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON\n    | RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON\n    | IDENTIFIER ASSIGN expression SEMICOLON\n    | IDENTIFIER PLUS ASSIGN expression SEMICOLON\n    | IDENTIFIER MINUS ASSIGN expression SEMICOLON\n    | IDENTIFIER TIMES ASSIGN expression SEMICOLON\n    | IDENTIFIER DIVIDE ASSIGN expression SEMICOLON\n    | IDENTIFIER arrays PLUS PLUS SEMICOLON\n    | increment SEMICOLON\n    | IDENTIFIER arrays MINUS MINUS SEMICOLON\n    | PLUS PLUS IDENTIFIER arrays SEMICOLON\n    | MINUS MINUS IDENTIFIER arrays SEMICOLON\n    | RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON\n    | RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON\n    | IDENTIFIER arrays ASSIGN expression SEMICOLON\n    | IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON\n    | RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON\n    | RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLONprint_statement : SOP LPAREN expression RPAREN SEMICOLON\n    | SOP LPAREN RPAREN SEMICOLONarray_access : IDENTIFIER arraysexpression : IDENTIFIER\n    | NUMBER\n    | array_access\n    | expression PLUS\n    | expression MINUS\n    | expression PLUS expression\n    | expression MINUS expression\n    | expression TIMES expression\n    | expression DIVIDE expression\n    | STRING\n    | CHAR\n    | boolreturn : RETURN IDENTIFIER SEMICOLON\n    | RETURN SEMICOLON\n    | RETURN expression SEMICOLONitems : item\n    | item COMMA itemsitem : NUMBER\n    | CHARifblock : if\n    | if else\n    | if else_ifif : IF LPAREN params RPAREN LBRACE statements RBRACEelse : ELSE LBRACE statements RBRACEelse_if : ELSE if\n    | ELSE if else_if\n    | ELSE if elsefor : FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACEincrement : PLUS PLUS IDENTIFIER\n    | MINUS MINUS IDENTIFIER\n    | IDENTIFIER PLUS PLUS\n    | IDENTIFIER MINUS MINUStry_catch : TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE\n    | TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE'
    
_lr_action_items = {'ACCESS':([0,2,3,4,7,8,9,10,11,12,13,14,15,17,18,19,33,38,50,51,56,61,72,74,75,81,105,119,121,130,133,134,136,140,152,173,188,189,193,194,195,200,201,202,203,204,205,206,211,216,217,227,231,232,233,234,236,241,242,244,247,254,255,256,257,261,275,278,281,286,292,295,298,299,302,304,308,309,311,313,315,316,317,318,319,320,322,325,327,328,330,331,332,336,337,339,340,341,343,345,346,348,350,],[5,5,-3,-4,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-110,-39,-38,-43,-78,-104,131,-111,-112,-54,-66,-103,-105,131,131,-115,191,-72,-28,-89,-116,-117,191,-9,-10,-73,-74,-75,-76,-77,-79,-84,-27,-65,-71,131,-80,-81,-88,-6,131,-114,131,-5,131,-67,-68,-69,-70,131,131,131,131,-85,-14,-44,131,-49,131,-113,-16,131,-55,-56,-82,-86,-13,-83,-87,131,131,-18,131,-15,-20,-57,-58,-17,131,-19,-118,131,-12,-11,-123,131,-124,]),'PASS':([0,2,3,4,7,8,9,10,11,12,13,14,15,17,18,19,33,38,50,51,56,61,72,74,75,81,105,119,121,130,133,134,136,140,152,173,188,189,193,194,195,200,201,202,203,204,205,206,211,216,217,227,231,232,233,234,236,241,242,244,247,254,255,256,257,261,275,278,281,286,292,295,298,299,302,304,308,309,311,313,315,316,317,318,319,320,322,325,327,328,330,331,332,336,337,339,340,341,343,345,346,348,350,],[16,16,-3,-4,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-110,-39,-38,-43,-78,-104,16,-111,-112,-54,-66,-103,-105,16,16,-115,16,-72,-28,-89,-116,-117,16,-9,-10,-73,-74,-75,-76,-77,-79,-84,-27,-65,-71,16,-80,-81,-88,-6,16,-114,16,-5,16,-67,-68,-69,-70,16,16,16,16,-85,-14,-44,16,-49,16,-113,-16,16,-55,-56,-82,-86,-13,-83,-87,16,16,-18,16,-15,-20,-57,-58,-17,16,-19,-118,16,-12,-11,-123,16,-124,]),'BREAK':([0,2,3,4,7,8,9,10,11,12,13,14,15,17,18,19,33,38,50,51,56,61,72,74,75,81,105,119,121,130,133,134,136,140,152,173,188,189,193,194,195,200,201,202,203,204,205,206,211,216,217,227,231,232,233,234,236,241,242,244,247,254,255,256,257,261,275,278,281,286,292,295,298,299,302,304,308,309,311,313,315,316,317,318,319,320,322,325,327,328,330,331,332,336,337,339,340,341,343,345,346,348,350,],[20,20,-3,-4,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-110,-39,-38,-43,-78,-104,20,-111,-112,-54,-66,-103,-105,20,20,-115,20,-72,-28,-89,-116,-117,20,-9,-10,-73,-74,-75,-76,-77,-79,-84,-27,-65,-71,20,-80,-81,-88,-6,20,-114,20,-5,20,-67,-68,-69,-70,20,20,20,20,-85,-14,-44,20,-49,20,-113,-16,20,-55,-56,-82,-86,-13,-83,-87,20,20,-18,20,-15,-20,-57,-58,-17,20,-19,-118,20,-12,-11,-123,20,-124,]),'RETURNTYPE':([0,2,3,4,5,7,8,9,10,11,12,13,14,15,17,18,19,32,33,38,40,50,51,56,61,71,72,74,75,81,105,111,119,121,130,131,133,134,136,137,140,152,173,185,188,189,191,193,194,195,198,200,201,202,203,204,205,206,211,216,217,223,227,228,230,231,232,233,234,236,241,242,244,247,254,255,256,257,261,275,277,278,281,286,292,295,298,299,302,304,308,309,311,313,315,316,317,318,319,320,322,325,327,328,330,331,332,336,337,339,340,341,343,345,346,348,350,],[21,21,-3,-4,39,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,73,-110,-39,80,-38,-43,-78,-104,128,21,-111,-112,-54,-66,165,-103,-105,21,39,21,-115,21,165,-72,-28,-89,165,-116,-117,39,21,-9,-10,165,-73,-74,-75,-76,-77,-79,-84,-27,-65,-71,259,21,165,265,-80,-81,-88,-6,21,-114,21,-5,21,-67,-68,-69,-70,21,21,165,21,21,-85,-14,-44,21,-49,21,-113,-16,21,-55,-56,-82,-86,-13,-83,-87,21,21,-18,21,-15,-20,-57,-58,-17,21,-19,-118,21,-12,-11,-123,21,-124,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,21,26,28,33,36,38,39,42,48,49,50,51,53,54,55,56,57,59,61,70,71,72,73,74,75,77,80,81,86,88,89,90,93,102,104,105,117,119,121,122,123,124,125,127,128,130,131,133,134,136,139,140,152,153,154,155,156,157,160,161,162,163,165,173,188,189,191,193,194,195,200,201,202,203,204,205,206,211,215,216,217,227,231,232,233,234,236,237,241,242,244,247,250,254,255,256,257,260,261,273,275,278,281,286,292,295,298,299,301,302,304,308,309,311,313,315,316,317,318,319,320,322,325,327,328,330,331,332,336,337,339,340,341,343,345,346,348,350,],[6,6,-3,-4,37,41,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,52,58,60,-110,78,-39,79,83,94,83,-38,-43,112,113,114,-78,83,118,-104,94,37,6,132,-111,-112,94,138,-54,83,83,83,83,83,-59,83,-66,174,-103,-105,83,83,83,83,94,182,6,37,6,-115,6,199,-72,-28,94,213,214,-60,-62,83,83,83,83,224,-89,-116,-117,243,6,-9,-10,-73,-74,-75,-76,-77,-79,-84,-27,-61,-65,-71,6,-80,-81,-88,-6,6,272,-114,6,-5,6,94,-67,-68,-69,-70,290,6,301,6,6,6,-85,-14,-44,6,-49,323,6,-113,-16,6,-55,-56,-82,-86,-13,-83,-87,6,6,-18,6,-15,-20,-57,-58,-17,6,-19,-118,6,-12,-11,-123,6,-124,]),'PLUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,22,33,37,38,43,47,48,50,51,52,56,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,79,81,83,84,91,94,99,100,102,103,105,106,115,119,120,121,122,123,127,130,131,133,134,136,140,141,142,143,144,147,149,152,153,156,157,158,173,176,177,178,179,182,188,189,191,193,194,195,200,201,202,203,204,205,206,211,215,216,217,218,219,220,221,227,231,232,233,234,236,237,241,242,243,244,247,250,254,255,256,257,261,272,275,278,281,286,292,295,298,299,302,304,308,309,311,313,315,316,317,318,319,320,322,325,327,328,330,331,332,336,337,339,340,341,343,345,346,348,350,],[22,22,-3,-4,22,43,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,54,-110,43,-39,85,91,100,-38,-43,106,-78,-91,-104,122,-92,-93,-100,-101,-102,-63,-64,100,22,22,-111,-112,100,106,-54,-91,122,145,149,122,154,-59,122,-66,159,122,-103,-90,-105,-94,-95,100,22,22,22,-115,22,-72,122,122,122,122,122,85,-28,100,-60,-62,122,-89,122,122,122,122,106,-116,-117,22,22,-9,-10,-73,-74,-75,-76,-77,-79,-84,-27,-61,-65,-71,122,122,122,122,22,-80,-81,-88,-6,22,100,-114,22,43,-5,22,100,-67,-68,-69,-70,22,149,22,22,22,-85,-14,-44,22,-49,22,-113,-16,22,-55,-56,-82,-86,-13,-83,-87,22,22,-18,22,-15,-20,-57,-58,-17,22,-19,-118,22,-12,-11,-123,22,-124,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,23,33,37,38,44,47,48,50,51,52,56,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,79,81,83,84,92,94,99,101,102,103,105,115,119,120,121,122,123,127,130,131,133,134,136,140,141,142,143,144,147,150,152,153,156,157,158,173,176,177,178,179,182,188,189,191,193,194,195,200,201,202,203,204,205,206,211,215,216,217,218,219,220,221,227,231,232,233,234,236,237,241,242,243,244,247,250,254,255,256,257,261,272,275,278,281,286,292,295,298,299,302,304,308,309,311,313,315,316,317,318,319,320,322,325,327,328,330,331,332,336,337,339,340,341,343,345,346,348,350,],[23,23,-3,-4,23,44,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,55,-110,44,-39,87,92,101,-38,-43,107,-78,-91,-104,123,-92,-93,-100,-101,-102,-63,-64,101,23,23,-111,-112,101,107,-54,-91,123,146,150,123,155,-59,123,-66,123,-103,-90,-105,-94,-95,101,23,23,23,-115,23,-72,123,123,123,123,123,87,-28,101,-60,-62,123,-89,123,123,123,123,107,-116,-117,23,23,-9,-10,-73,-74,-75,-76,-77,-79,-84,-27,-61,-65,-71,123,123,123,123,23,-80,-81,-88,-6,23,101,-114,23,44,-5,23,101,-67,-68,-69,-70,23,150,23,23,23,-85,-14,-44,23,-49,23,-113,-16,23,-55,-56,-82,-86,-13,-83,-87,23,23,-18,23,-15,-20,-57,-58,-17,23,-19,-118,23,-12,-11,-123,23,-124,]),'SOP':([0,2,3,4,7,8,9,10,11,12,13,14,15,17,18,19,33,38,50,51,56,61,72,74,75,81,105,119,121,130,133,134,136,140,152,173,188,189,193,194,195,200,201,202,203,204,205,206,211,216,217,227,231,232,233,234,236,241,242,244,247,254,255,256,257,261,275,278,281,286,292,295,298,299,302,304,308,309,311,313,315,316,317,318,319,320,322,325,327,328,330,331,332,336,337,339,340,341,343,345,346,348,350,],[25,25,-3,-4,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-110,-39,-38,-43,-78,-104,25,-111,-112,-54,-66,-103,-105,25,25,-115,25,-72,-28,-89,-116,-117,25,-9,-10,-73,-74,-75,-76,-77,-79,-84,-27,-65,-71,25,-80,-81,-88,-6,25,-114,25,-5,25,-67,-68,-69,-70,25,25,25,25,-85,-14,-44,25,-49,25,-113,-16,25,-55,-56,-82,-86,-13,-83,-87,25,25,-18,25,-15,-20,-57,-58,-17,25,-19,-118,25,-12,-11,-123,25,-124,]),'THIS':([0,2,3,4,7,8,9,10,11,12,13,14,15,17,18,19,33,38,50,51,56,61,72,74,75,81,105,119,121,130,133,134,136,140,152,173,188,189,193,194,195,200,201,202,203,204,205,206,211,216,217,227,231,232,233,234,236,241,242,244,247,254,255,256,257,261,275,278,281,286,292,295,298,299,302,304,308,309,311,313,315,316,317,318,319,320,322,325,327,328,330,331,332,336,337,339,340,341,343,345,346,348,350,],[26,26,-3,-4,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-110,-39,-38,-43,-78,-104,26,-111,-112,-54,-66,-103,-105,26,26,-115,26,-72,-28,-89,-116,-117,26,-9,-10,-73,-74,-75,-76,-77,-79,-84,-27,-65,-71,26,-80,-81,-88,-6,26,-114,26,-5,26,-67,-68,-69,-70,26,26,26,26,-85,-14,-44,26,-49,26,-113,-16,26,-55,-56,-82,-86,-13,-83,-87,26,26,-18,26,-15,-20,-57,-58,-17,26,-19,-118,26,-12,-11,-123,26,-124,]),'SWITCH':([0,2,3,4,7,8,9,10,11,12,13,14,15,17,18,19,33,38,50,51,56,61,72,74,75,81,105,119,121,130,133,134,136,140,152,173,188,189,193,194,195,200,201,202,203,204,205,206,211,216,217,227,231,232,233,234,236,241,242,244,247,254,255,256,257,261,275,278,281,286,292,295,298,299,302,304,308,309,311,313,315,316,317,318,319,320,322,325,327,328,330,331,332,336,337,339,340,341,343,345,346,348,350,],[27,27,-3,-4,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-110,-39,-38,-43,-78,-104,27,-111,-112,-54,-66,-103,-105,27,27,-115,27,-72,-28,-89,-116,-117,27,-9,-10,-73,-74,-75,-76,-77,-79,-84,-27,-65,-71,27,-80,-81,-88,-6,27,-114,27,-5,27,-67,-68,-69,-70,27,27,27,27,-85,-14,-44,27,-49,27,-113,-16,27,-55,-56,-82,-86,-13,-83,-87,27,27,-18,27,-15,-20,-57,-58,-17,27,-19,-118,27,-12,-11,-123,27,-124,]),'RETURN':([0,2,3,4,7,8,9,10,11,12,13,14,15,17,18,19,33,38,50,51,56,61,72,74,75,81,105,119,121,130,133,134,136,140,152,173,188,189,193,194,195,200,201,202,203,204,205,206,211,216,217,227,231,232,233,234,236,241,242,244,247,254,255,256,257,261,275,278,281,286,292,295,298,299,302,304,308,309,311,313,315,316,317,318,319,320,322,325,327,328,330,331,332,336,337,339,340,341,343,345,346,348,350,],[28,28,-3,-4,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-110,-39,-38,-43,-78,-104,28,-111,-112,-54,-66,-103,-105,28,28,-115,28,-72,-28,-89,-116,-117,28,-9,-10,-73,-74,-75,-76,-77,-79,-84,-27,-65,-71,28,-80,-81,-88,-6,28,-114,28,-5,28,-67,-68,-69,-70,28,28,28,28,-85,-14,-44,28,-49,28,-113,-16,28,-55,-56,-82,-86,-13,-83,-87,28,28,-18,28,-15,-20,-57,-58,-17,28,-19,-118,28,-12,-11,-123,28,-124,]),'WHILE':([0,2,3,4,7,8,9,10,11,12,13,14,15,17,18,19,33,38,50,51,56,61,72,74,75,81,105,119,121,130,133,134,136,140,152,173,188,189,193,194,195,200,201,202,203,204,205,206,211,216,217,227,231,232,233,234,236,241,242,244,247,254,255,256,257,261,275,278,281,286,292,295,298,299,302,304,308,309,311,313,315,316,317,318,319,320,322,325,327,328,330,331,332,336,337,339,340,341,343,345,346,348,350,],[29,29,-3,-4,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-110,-39,-38,-43,-78,-104,29,-111,-112,-54,-66,-103,-105,29,29,-115,29,-72,-28,-89,-116,-117,29,-9,-10,-73,-74,-75,-76,-77,-79,-84,-27,-65,-71,29,-80,-81,-88,-6,29,-114,29,-5,29,-67,-68,-69,-70,29,29,29,29,-85,-14,-44,29,-49,29,-113,-16,29,-55,-56,-82,-86,-13,-83,-87,29,29,-18,29,-15,-20,-57,-58,-17,29,-19,-118,29,-12,-11,-123,29,-124,]),'FOR':([0,2,3,4,7,8,9,10,11,12,13,14,15,17,18,19,33,38,50,51,56,61,72,74,75,81,105,119,121,130,133,134,136,140,152,173,188,189,193,194,195,200,201,202,203,204,205,206,211,216,217,227,231,232,233,234,236,241,242,244,247,254,255,256,257,261,275,278,281,286,292,295,298,299,302,304,308,309,311,313,315,316,317,318,319,320,322,325,327,328,330,331,332,336,337,339,340,341,343,345,346,348,350,],[30,30,-3,-4,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-110,-39,-38,-43,-78,-104,30,-111,-112,-54,-66,-103,-105,30,30,-115,30,-72,-28,-89,-116,-117,30,-9,-10,-73,-74,-75,-76,-77,-79,-84,-27,-65,-71,30,-80,-81,-88,-6,30,-114,30,-5,30,-67,-68,-69,-70,30,30,30,30,-85,-14,-44,30,-49,30,-113,-16,30,-55,-56,-82,-86,-13,-83,-87,30,30,-18,30,-15,-20,-57,-58,-17,30,-19,-118,30,-12,-11,-123,30,-124,]),'TRY':([0,2,3,4,7,8,9,10,11,12,13,14,15,17,18,19,33,38,50,51,56,61,72,74,75,81,105,119,121,130,133,134,136,140,152,173,188,189,193,194,195,200,201,202,203,204,205,206,211,216,217,227,231,232,233,234,236,241,242,244,247,254,255,256,257,261,275,278,281,286,292,295,298,299,302,304,308,309,311,313,315,316,317,318,319,320,322,325,327,328,330,331,332,336,337,339,340,341,343,345,346,348,350,],[31,31,-3,-4,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-110,-39,-38,-43,-78,-104,31,-111,-112,-54,-66,-103,-105,31,31,-115,31,-72,-28,-89,-116,-117,31,-9,-10,-73,-74,-75,-76,-77,-79,-84,-27,-65,-71,31,-80,-81,-88,-6,31,-114,31,-5,31,-67,-68,-69,-70,31,31,31,31,-85,-14,-44,31,-49,31,-113,-16,31,-55,-56,-82,-86,-13,-83,-87,31,31,-18,31,-15,-20,-57,-58,-17,31,-19,-118,31,-12,-11,-123,31,-124,]),'STATIC':([0,2,3,4,5,7,8,9,10,11,12,13,14,15,17,18,19,33,38,50,51,56,61,72,74,75,81,105,119,121,130,131,133,134,136,140,152,173,188,189,191,193,194,195,200,201,202,203,204,205,206,211,216,217,227,231,232,233,234,236,241,242,244,247,254,255,256,257,261,275,278,281,286,292,295,298,299,302,304,308,309,311,313,315,316,317,318,319,320,322,325,327,328,330,331,332,336,337,339,340,341,343,345,346,348,350,],[32,32,-3,-4,40,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-110,-39,-38,-43,-78,-104,32,-111,-112,-54,-66,-103,-105,32,40,32,-115,32,-72,-28,-89,-116,-117,40,32,-9,-10,-73,-74,-75,-76,-77,-79,-84,-27,-65,-71,32,-80,-81,-88,-6,32,-114,32,-5,32,-67,-68,-69,-70,32,32,32,32,-85,-14,-44,32,-49,32,-113,-16,32,-55,-56,-82,-86,-13,-83,-87,32,32,-18,32,-15,-20,-57,-58,-17,32,-19,-118,32,-12,-11,-123,32,-124,]),'IF':([0,2,3,4,7,8,9,10,11,12,13,14,15,17,18,19,33,38,50,51,56,61,72,74,75,76,81,105,119,121,130,133,134,136,140,152,173,187,188,189,193,194,195,200,201,202,203,204,205,206,211,216,217,227,231,232,233,234,236,241,242,244,247,254,255,256,257,261,275,278,281,286,292,295,298,299,302,304,308,309,311,313,315,316,317,318,319,320,322,325,327,328,330,331,332,336,337,339,340,341,343,345,346,348,350,],[34,34,-3,-4,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-110,-39,-38,-43,-78,-104,34,-111,-112,34,-54,-66,-103,-105,34,34,-115,34,-72,-28,-89,34,-116,-117,34,-9,-10,-73,-74,-75,-76,-77,-79,-84,-27,-65,-71,34,-80,-81,-88,-6,34,-114,34,-5,34,-67,-68,-69,-70,34,34,34,34,-85,-14,-44,34,-49,34,-113,-16,34,-55,-56,-82,-86,-13,-83,-87,34,34,-18,34,-15,-20,-57,-58,-17,34,-19,-118,34,-12,-11,-123,34,-124,]),'$end':([1,2,3,4,7,8,9,10,11,12,13,14,15,17,18,19,33,35,38,50,51,56,61,74,75,81,105,119,121,134,140,152,173,188,189,200,201,202,203,204,205,206,211,216,217,231,232,233,234,241,244,254,255,256,257,286,292,295,299,304,308,311,313,315,316,317,318,319,325,328,330,331,332,336,339,340,346,350,],[0,-1,-3,-4,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-110,-2,-39,-38,-43,-78,-104,-111,-112,-54,-66,-103,-105,-115,-72,-28,-89,-116,-117,-73,-74,-75,-76,-77,-79,-84,-27,-65,-71,-80,-81,-88,-6,-114,-5,-67,-68,-69,-70,-85,-14,-44,-49,-113,-16,-55,-56,-82,-86,-13,-83,-87,-18,-15,-20,-57,-58,-17,-19,-118,-123,-124,]),'CLASS':([5,],[36,]),'ASSIGN':([6,37,41,43,44,45,46,47,52,58,79,102,106,107,108,109,110,112,156,157,182,215,243,],[42,42,82,86,88,89,90,93,104,117,104,-59,160,161,162,163,164,169,-60,-62,104,-61,42,]),'TIMES':([6,37,52,60,62,63,64,65,66,67,68,69,79,83,84,94,99,102,103,115,120,122,123,141,142,143,144,147,156,157,158,176,177,178,179,182,215,218,219,220,221,243,],[45,45,108,-91,124,-92,-93,-100,-101,-102,-63,-64,108,-91,124,-91,124,-59,124,124,-90,-94,-95,124,124,124,124,124,-60,-62,124,124,124,124,124,108,-61,124,124,124,124,45,]),'DIVIDE':([6,37,52,60,62,63,64,65,66,67,68,69,79,83,84,94,99,102,103,115,120,122,123,141,142,143,144,147,156,157,158,176,177,178,179,182,215,218,219,220,221,243,],[46,46,109,-91,125,-92,-93,-100,-101,-102,-63,-64,109,-91,125,-91,125,-59,125,125,-90,-94,-95,125,125,125,125,125,-60,-62,125,125,125,125,125,109,-61,125,125,125,125,46,]),'LPAREN':([6,25,27,29,30,34,52,79,132,138,199,238,243,],[48,57,59,70,71,77,111,137,185,198,250,273,277,]),'LBRACKET':([6,21,37,39,52,60,79,83,94,102,113,114,128,157,165,182,199,243,259,265,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,225,49,251,49,49,49,]),'RBRACE':([7,8,9,10,11,12,13,14,15,17,18,19,33,38,50,51,56,61,74,75,81,105,119,121,129,130,134,140,152,173,184,186,188,189,192,193,194,195,200,201,202,203,204,205,206,207,208,209,210,211,216,217,231,232,233,234,241,245,254,255,256,257,258,262,264,266,267,270,276,279,286,287,291,292,295,296,299,303,304,307,308,310,311,313,315,316,317,318,319,321,324,325,328,329,330,331,332,333,334,336,338,339,340,342,343,344,345,346,349,350,],[-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-110,-39,-38,-43,-78,-104,-111,-112,-54,-66,-103,-105,183,-25,-115,-72,-28,-89,-26,241,-116,-117,244,-7,-9,-10,-73,-74,-75,-76,-77,-79,-84,252,-106,-108,-109,-27,-65,-71,-80,-81,-88,-6,-114,-8,-67,-68,-69,-70,288,292,293,295,-45,299,304,308,-85,-107,317,-14,-44,-46,-49,325,-113,328,-16,330,-55,-56,-82,-86,-13,-83,-87,-48,336,-18,-15,339,-20,-57,-58,-47,340,-17,343,-19,-118,345,-12,346,-11,-123,350,-124,]),'CASE':([7,8,9,10,11,12,13,14,15,17,18,19,33,38,50,51,56,61,74,75,81,105,119,121,130,134,140,152,173,184,188,189,200,201,202,203,204,205,206,211,216,217,231,232,233,234,235,241,254,255,256,257,267,286,292,295,299,304,308,311,313,315,316,317,318,319,321,325,328,330,331,332,333,336,339,340,346,350,],[-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-110,-39,-38,-43,-78,-104,-111,-112,-54,-66,-103,-105,-25,-115,-72,-28,-89,-26,-116,-117,-73,-74,-75,-76,-77,-79,-84,-27,-65,-71,-80,-81,-88,-6,268,-114,-67,-68,-69,-70,268,-85,-14,-44,-49,-113,-16,-55,-56,-82,-86,-13,-83,-87,-48,-18,-15,-20,-57,-58,-47,-17,-19,-118,-123,-124,]),'DEFAULT':([7,8,9,10,11,12,13,14,15,17,18,19,33,38,50,51,56,61,74,75,81,105,119,121,130,134,140,152,173,184,188,189,200,201,202,203,204,205,206,211,216,217,231,232,233,234,235,241,254,255,256,257,267,286,292,295,299,304,308,311,313,315,316,317,318,319,321,325,328,330,331,332,333,336,339,340,346,350,],[-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-110,-39,-38,-43,-78,-104,-111,-112,-54,-66,-103,-105,-25,-115,-72,-28,-89,-26,-116,-117,-73,-74,-75,-76,-77,-79,-84,-27,-65,-71,-80,-81,-88,-6,269,-114,-67,-68,-69,-70,269,-85,-14,-44,-49,-113,-16,-55,-56,-82,-86,-13,-83,-87,-48,-18,-15,-20,-57,-58,-47,-17,-19,-118,-123,-124,]),'SEMICOLON':([16,20,24,28,41,52,60,62,63,64,65,66,67,68,69,79,83,84,85,87,94,96,97,98,99,102,113,114,116,120,122,123,141,142,143,144,145,146,147,151,156,157,158,159,170,171,172,174,176,177,178,179,181,182,212,213,214,215,218,219,220,221,252,282,284,288,289,293,294,312,314,],[50,51,56,61,81,105,119,121,-92,-93,-100,-101,-102,-63,-64,105,-91,140,-121,-122,-91,152,-50,-52,-53,-59,-119,-120,173,-90,-94,-95,200,201,202,203,204,205,206,211,-60,-62,216,217,231,232,233,234,-96,-97,-98,-99,237,105,-51,-119,-120,-61,254,255,256,257,286,311,313,315,316,318,319,331,332,]),'NUMBER':([28,42,48,49,56,57,70,77,86,88,89,90,93,104,105,122,123,124,125,127,140,148,153,160,161,162,163,200,201,202,203,204,205,206,216,217,222,229,231,232,250,251,253,254,255,256,257,268,286,315,316,318,319,],[63,63,63,63,-78,63,63,63,63,63,63,63,63,63,-66,63,63,63,63,63,-72,209,63,63,63,63,63,-73,-74,-75,-76,-77,-79,-84,-65,-71,209,209,-80,-81,63,285,209,-67,-68,-69,-70,297,-85,-82,-86,-83,-87,]),'STRING':([28,42,48,49,56,57,70,77,86,88,89,90,93,104,105,122,123,124,125,127,140,153,160,161,162,163,200,201,202,203,204,205,206,216,217,231,232,250,254,255,256,257,286,315,316,318,319,],[65,65,65,65,-78,65,65,65,65,65,65,65,65,65,-66,65,65,65,65,65,-72,65,65,65,65,65,-73,-74,-75,-76,-77,-79,-84,-65,-71,-80,-81,65,-67,-68,-69,-70,-85,-82,-86,-83,-87,]),'CHAR':([28,42,48,49,56,57,70,77,86,88,89,90,93,104,105,122,123,124,125,127,140,148,153,160,161,162,163,200,201,202,203,204,205,206,216,217,222,229,231,232,250,253,254,255,256,257,286,315,316,318,319,],[66,66,66,66,-78,66,66,66,66,66,66,66,66,66,-66,66,66,66,66,66,-72,210,66,66,66,66,66,-73,-74,-75,-76,-77,-79,-84,-65,-71,210,210,-80,-81,66,210,-67,-68,-69,-70,-85,-82,-86,-83,-87,]),'TRUE':([28,42,48,49,56,57,70,77,86,88,89,90,93,104,105,122,123,124,125,127,140,153,160,161,162,163,200,201,202,203,204,205,206,216,217,231,232,250,254,255,256,257,286,315,316,318,319,],[68,68,68,68,-78,68,68,68,68,68,68,68,68,68,-66,68,68,68,68,68,-72,68,68,68,68,68,-73,-74,-75,-76,-77,-79,-84,-65,-71,-80,-81,68,-67,-68,-69,-70,-85,-82,-86,-83,-87,]),'FALSE':([28,42,48,49,56,57,70,77,86,88,89,90,93,104,105,122,123,124,125,127,140,153,160,161,162,163,200,201,202,203,204,205,206,216,217,231,232,250,254,255,256,257,286,315,316,318,319,],[69,69,69,69,-78,69,69,69,69,69,69,69,69,69,-66,69,69,69,69,69,-72,69,69,69,69,69,-73,-74,-75,-76,-77,-79,-84,-65,-71,-80,-81,69,-67,-68,-69,-70,-85,-82,-86,-83,-87,]),'LBRACE':([31,76,78,93,164,167,169,175,180,187,190,197,226,240,246,249,274,280,300,306,326,335,347,],[72,133,136,148,222,227,229,235,236,133,242,247,261,275,278,281,302,309,322,327,337,341,348,]),'ELSE':([33,134,304,],[76,187,-113,]),'RPAREN':([48,57,63,64,65,66,67,68,69,83,85,87,94,95,97,98,99,102,111,115,118,120,122,123,126,135,137,156,157,166,168,176,177,178,179,185,196,198,212,213,214,215,224,239,248,250,263,271,277,283,290,305,323,],[96,116,-92,-93,-100,-101,-102,-63,-64,-91,-121,-122,-91,151,-50,-52,-53,-59,167,172,175,-90,-94,-95,180,190,197,-60,-62,226,-21,-96,-97,-98,-99,240,246,249,-51,-119,-120,-61,-23,274,280,282,-22,300,306,312,-24,326,335,]),'RBRACKET':([49,63,64,65,66,67,68,69,83,102,103,120,122,123,156,157,176,177,178,179,215,225,251,285,],[102,-92,-93,-100,-101,-102,-63,-64,-91,-59,157,-90,-94,-95,-60,-62,-96,-97,-98,-99,-61,260,284,314,]),'LOGICAL':([63,64,65,66,67,68,69,83,85,87,94,97,98,99,102,120,122,123,156,157,176,177,178,179,213,214,215,],[-92,-93,-100,-101,-102,-63,-64,-91,-121,-122,-91,153,-52,-53,-59,-90,-94,-95,-60,-62,-96,-97,-98,-99,-119,-120,-61,]),'NEW':([82,164,169,],[139,223,230,]),'COMMA':([168,208,209,210,224,290,],[228,253,-108,-109,-23,-24,]),'CATCH':([183,],[238,]),'COLON':([269,297,],[298,320,]),'FINALLY':([346,],[347,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programs':([0,2,],[1,35,]),'program':([0,2,],[2,2,]),'class':([0,2,],[3,3,]),'statement':([0,2,72,130,133,136,193,227,236,242,247,261,275,278,281,298,302,309,320,322,327,337,341,348,],[4,4,130,130,130,195,195,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'assignment_statement':([0,2,5,71,72,130,131,133,136,191,193,227,236,242,247,261,275,278,281,298,302,309,320,322,327,337,341,348,],[7,7,38,127,7,7,38,7,7,38,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'class_statement':([0,2,72,130,133,136,193,227,236,242,247,261,275,278,281,298,302,309,320,322,327,337,341,348,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'print_statement':([0,2,72,130,133,136,193,227,236,242,247,261,275,278,281,298,302,309,320,322,327,337,341,348,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'this_assign':([0,2,72,130,133,136,193,227,236,242,247,261,275,278,281,298,302,309,320,322,327,337,341,348,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'switch':([0,2,72,130,133,136,193,227,236,242,247,261,275,278,281,298,302,309,320,322,327,337,341,348,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'return':([0,2,72,130,133,136,193,227,236,242,247,261,275,278,281,298,302,309,320,322,327,337,341,348,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'while':([0,2,72,130,133,136,193,227,236,242,247,261,275,278,281,298,302,309,320,322,327,337,341,348,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'for':([0,2,72,130,133,136,193,227,236,242,247,261,275,278,281,298,302,309,320,322,327,337,341,348,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'try_catch':([0,2,72,130,133,136,193,227,236,242,247,261,275,278,281,298,302,309,320,322,327,337,341,348,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'function':([0,2,72,130,133,136,193,227,236,242,247,261,275,278,281,298,302,309,320,322,327,337,341,348,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'function_call':([0,2,72,130,133,136,193,227,236,242,247,261,275,278,281,298,302,309,320,322,327,337,341,348,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'ifblock':([0,2,72,130,133,136,193,227,236,242,247,261,275,278,281,298,302,309,320,322,327,337,341,348,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'increment':([0,2,5,48,70,71,72,77,127,130,131,133,136,153,191,193,227,236,237,242,247,250,261,275,278,281,298,302,309,320,322,327,337,341,348,],[24,24,24,98,98,24,24,98,98,24,24,24,24,98,24,24,24,24,271,24,24,98,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'if':([0,2,72,76,130,133,136,187,193,227,236,242,247,261,275,278,281,298,302,309,320,322,327,337,341,348,],[33,33,33,134,33,33,33,134,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'arrays':([6,21,37,39,52,60,79,83,94,102,113,114,128,157,182,243,259,265,],[47,53,47,53,110,120,110,120,120,156,170,171,53,215,110,47,289,294,]),'expression':([28,42,48,49,57,70,77,86,88,89,90,93,104,122,123,124,125,127,153,160,161,162,163,250,],[62,84,99,103,115,99,99,141,142,143,144,147,158,176,177,178,179,99,99,218,219,220,221,99,]),'array_access':([28,42,48,49,57,70,77,86,88,89,90,93,104,122,123,124,125,127,153,160,161,162,163,250,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'bool':([28,42,48,49,57,70,77,86,88,89,90,93,104,122,123,124,125,127,153,160,161,162,163,250,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'else':([33,134,],[74,189,]),'else_if':([33,134,],[75,188,]),'params':([48,70,77,127,153,250,],[95,126,135,181,212,283,]),'param':([48,70,77,127,153,250,],[97,97,97,97,97,97,]),'statements':([72,130,133,227,236,242,247,261,275,278,281,298,302,309,320,322,327,337,341,348,],[129,184,186,262,270,276,279,291,303,307,310,321,324,329,333,334,338,342,344,349,]),'parameters':([111,137,185,198,228,277,],[166,196,239,248,263,305,]),'parameter':([111,137,185,198,228,277,],[168,168,168,168,168,168,]),'stats':([136,193,],[192,245,]),'stat':([136,193,],[193,193,]),'constructor':([136,193,],[194,194,]),'items':([148,222,229,253,],[207,258,264,287,]),'item':([148,222,229,253,],[208,208,208,208,]),'cases':([235,267,],[266,296,]),'case':([235,267,],[267,267,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programs","S'",1,None,None,None),
  ('programs -> program','programs',1,'p_programs','yacc_java.py',9),
  ('programs -> program programs','programs',2,'p_programs','yacc_java.py',10),
  ('program -> class','program',1,'p_program','yacc_java.py',15),
  ('program -> statement','program',1,'p_program','yacc_java.py',16),
  ('class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE','class',6,'p_class','yacc_java.py',21),
  ('this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON','this_assign',5,'p_this_assign','yacc_java.py',26),
  ('stats -> stat','stats',1,'p_stats','yacc_java.py',31),
  ('stats -> stat stats','stats',2,'p_stats','yacc_java.py',32),
  ('stat -> constructor','stat',1,'p_stat','yacc_java.py',37),
  ('stat -> statement','stat',1,'p_stat','yacc_java.py',38),
  ('constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE','constructor',8,'p_constructor','yacc_java.py',43),
  ('constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE','constructor',7,'p_constructor','yacc_java.py',44),
  ('function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE','function',8,'p_function','yacc_java.py',49),
  ('function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE','function',7,'p_function','yacc_java.py',50),
  ('function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE','function',9,'p_function','yacc_java.py',51),
  ('function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE','function',8,'p_function','yacc_java.py',52),
  ('function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE','function',9,'p_function','yacc_java.py',53),
  ('function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE','function',8,'p_function','yacc_java.py',54),
  ('function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE','function',10,'p_function','yacc_java.py',55),
  ('function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE','function',9,'p_function','yacc_java.py',56),
  ('parameters -> parameter','parameters',1,'p_parameters','yacc_java.py',61),
  ('parameters -> parameter COMMA parameters','parameters',3,'p_parameters','yacc_java.py',62),
  ('parameter -> RETURNTYPE IDENTIFIER','parameter',2,'p_parameter','yacc_java.py',67),
  ('parameter -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER','parameter',4,'p_parameter','yacc_java.py',68),
  ('statements -> statement','statements',1,'p_statements','yacc_java.py',73),
  ('statements -> statement statements','statements',2,'p_statements','yacc_java.py',74),
  ('function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON','function_call',5,'p_function_call','yacc_java.py',79),
  ('function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON','function_call',4,'p_function_call','yacc_java.py',80),
  ('statement -> assignment_statement','statement',1,'p_statement','yacc_java.py',85),
  ('statement -> class_statement','statement',1,'p_statement','yacc_java.py',86),
  ('statement -> print_statement','statement',1,'p_statement','yacc_java.py',87),
  ('statement -> this_assign','statement',1,'p_statement','yacc_java.py',88),
  ('statement -> switch','statement',1,'p_statement','yacc_java.py',89),
  ('statement -> return','statement',1,'p_statement','yacc_java.py',90),
  ('statement -> while','statement',1,'p_statement','yacc_java.py',91),
  ('statement -> for','statement',1,'p_statement','yacc_java.py',92),
  ('statement -> try_catch','statement',1,'p_statement','yacc_java.py',93),
  ('statement -> PASS SEMICOLON','statement',2,'p_statement','yacc_java.py',94),
  ('statement -> ACCESS assignment_statement','statement',2,'p_statement','yacc_java.py',95),
  ('statement -> function','statement',1,'p_statement','yacc_java.py',96),
  ('statement -> function_call','statement',1,'p_statement','yacc_java.py',97),
  ('statement -> ifblock','statement',1,'p_statement','yacc_java.py',98),
  ('statement -> BREAK SEMICOLON','statement',2,'p_statement','yacc_java.py',99),
  ('switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE','switch',7,'p_switch','yacc_java.py',104),
  ('cases -> case','cases',1,'p_cases','yacc_java.py',109),
  ('cases -> case cases','cases',2,'p_cases','yacc_java.py',110),
  ('case -> CASE NUMBER COLON statements','case',4,'p_case','yacc_java.py',115),
  ('case -> DEFAULT COLON statements','case',3,'p_case','yacc_java.py',116),
  ('while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE','while',7,'p_while','yacc_java.py',121),
  ('params -> param','params',1,'p_params','yacc_java.py',126),
  ('params -> param LOGICAL params','params',3,'p_params','yacc_java.py',127),
  ('param -> increment','param',1,'p_param','yacc_java.py',132),
  ('param -> expression','param',1,'p_param','yacc_java.py',133),
  ('class_statement -> IDENTIFIER IDENTIFIER SEMICOLON','class_statement',3,'p_class_statement','yacc_java.py',138),
  ('class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON','class_statement',8,'p_class_statement','yacc_java.py',139),
  ('class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON','class_statement',8,'p_class_statement','yacc_java.py',140),
  ('class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON','class_statement',9,'p_class_statement','yacc_java.py',141),
  ('class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON','class_statement',9,'p_class_statement','yacc_java.py',142),
  ('arrays -> LBRACKET RBRACKET','arrays',2,'p_arrays','yacc_java.py',147),
  ('arrays -> LBRACKET RBRACKET arrays','arrays',3,'p_arrays','yacc_java.py',148),
  ('arrays -> LBRACKET expression RBRACKET arrays','arrays',4,'p_arrays','yacc_java.py',149),
  ('arrays -> LBRACKET expression RBRACKET','arrays',3,'p_arrays','yacc_java.py',150),
  ('bool -> TRUE','bool',1,'p_bool','yacc_java.py',155),
  ('bool -> FALSE','bool',1,'p_bool','yacc_java.py',156),
  ('assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON','assignment_statement',5,'p_assignment_statement','yacc_java.py',161),
  ('assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON','assignment_statement',3,'p_assignment_statement','yacc_java.py',162),
  ('assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON','assignment_statement',6,'p_assignment_statement','yacc_java.py',163),
  ('assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON','assignment_statement',6,'p_assignment_statement','yacc_java.py',164),
  ('assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON','assignment_statement',6,'p_assignment_statement','yacc_java.py',165),
  ('assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON','assignment_statement',6,'p_assignment_statement','yacc_java.py',166),
  ('assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON','assignment_statement',5,'p_assignment_statement','yacc_java.py',167),
  ('assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON','assignment_statement',4,'p_assignment_statement','yacc_java.py',168),
  ('assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON','assignment_statement',5,'p_assignment_statement','yacc_java.py',169),
  ('assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON','assignment_statement',5,'p_assignment_statement','yacc_java.py',170),
  ('assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON','assignment_statement',5,'p_assignment_statement','yacc_java.py',171),
  ('assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON','assignment_statement',5,'p_assignment_statement','yacc_java.py',172),
  ('assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON','assignment_statement',5,'p_assignment_statement','yacc_java.py',173),
  ('assignment_statement -> increment SEMICOLON','assignment_statement',2,'p_assignment_statement','yacc_java.py',174),
  ('assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON','assignment_statement',5,'p_assignment_statement','yacc_java.py',175),
  ('assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON','assignment_statement',5,'p_assignment_statement','yacc_java.py',176),
  ('assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON','assignment_statement',5,'p_assignment_statement','yacc_java.py',177),
  ('assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON','assignment_statement',8,'p_assignment_statement','yacc_java.py',178),
  ('assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON','assignment_statement',8,'p_assignment_statement','yacc_java.py',179),
  ('assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON','assignment_statement',5,'p_assignment_statement','yacc_java.py',180),
  ('assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON','assignment_statement',7,'p_assignment_statement','yacc_java.py',181),
  ('assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON','assignment_statement',8,'p_assignment_statement','yacc_java.py',182),
  ('assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON','assignment_statement',8,'p_assignment_statement','yacc_java.py',183),
  ('print_statement -> SOP LPAREN expression RPAREN SEMICOLON','print_statement',5,'p_print_statement','yacc_java.py',189),
  ('print_statement -> SOP LPAREN RPAREN SEMICOLON','print_statement',4,'p_print_statement','yacc_java.py',190),
  ('array_access -> IDENTIFIER arrays','array_access',2,'p_array_access','yacc_java.py',195),
  ('expression -> IDENTIFIER','expression',1,'p_expression','yacc_java.py',200),
  ('expression -> NUMBER','expression',1,'p_expression','yacc_java.py',201),
  ('expression -> array_access','expression',1,'p_expression','yacc_java.py',202),
  ('expression -> expression PLUS','expression',2,'p_expression','yacc_java.py',203),
  ('expression -> expression MINUS','expression',2,'p_expression','yacc_java.py',204),
  ('expression -> expression PLUS expression','expression',3,'p_expression','yacc_java.py',205),
  ('expression -> expression MINUS expression','expression',3,'p_expression','yacc_java.py',206),
  ('expression -> expression TIMES expression','expression',3,'p_expression','yacc_java.py',207),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','yacc_java.py',208),
  ('expression -> STRING','expression',1,'p_expression','yacc_java.py',209),
  ('expression -> CHAR','expression',1,'p_expression','yacc_java.py',210),
  ('expression -> bool','expression',1,'p_expression','yacc_java.py',211),
  ('return -> RETURN IDENTIFIER SEMICOLON','return',3,'p_return','yacc_java.py',216),
  ('return -> RETURN SEMICOLON','return',2,'p_return','yacc_java.py',217),
  ('return -> RETURN expression SEMICOLON','return',3,'p_return','yacc_java.py',218),
  ('items -> item','items',1,'p_items','yacc_java.py',223),
  ('items -> item COMMA items','items',3,'p_items','yacc_java.py',224),
  ('item -> NUMBER','item',1,'p_item','yacc_java.py',229),
  ('item -> CHAR','item',1,'p_item','yacc_java.py',230),
  ('ifblock -> if','ifblock',1,'p_ifblock','yacc_java.py',235),
  ('ifblock -> if else','ifblock',2,'p_ifblock','yacc_java.py',236),
  ('ifblock -> if else_if','ifblock',2,'p_ifblock','yacc_java.py',237),
  ('if -> IF LPAREN params RPAREN LBRACE statements RBRACE','if',7,'p_if','yacc_java.py',242),
  ('else -> ELSE LBRACE statements RBRACE','else',4,'p_else','yacc_java.py',247),
  ('else_if -> ELSE if','else_if',2,'p_else_if','yacc_java.py',252),
  ('else_if -> ELSE if else_if','else_if',3,'p_else_if','yacc_java.py',253),
  ('else_if -> ELSE if else','else_if',3,'p_else_if','yacc_java.py',254),
  ('for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE','for',10,'p_for','yacc_java.py',259),
  ('increment -> PLUS PLUS IDENTIFIER','increment',3,'p_increment','yacc_java.py',264),
  ('increment -> MINUS MINUS IDENTIFIER','increment',3,'p_increment','yacc_java.py',265),
  ('increment -> IDENTIFIER PLUS PLUS','increment',3,'p_increment','yacc_java.py',266),
  ('increment -> IDENTIFIER MINUS MINUS','increment',3,'p_increment','yacc_java.py',267),
  ('try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE','try_catch',12,'p_try_catch','yacc_java.py',272),
  ('try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE','try_catch',16,'p_try_catch','yacc_java.py',273),
]
