Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> programs
Rule 1     programs -> program
Rule 2     programs -> program programs
Rule 3     program -> class
Rule 4     program -> statement
Rule 5     class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE
Rule 6     class -> CLASS IDENTIFIER LBRACE stats RBRACE
Rule 7     this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
Rule 8     stats -> stat
Rule 9     stats -> stat stats
Rule 10    stat -> constructor
Rule 11    stat -> statement
Rule 12    constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 13    constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
Rule 14    function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 15    function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
Rule 16    function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 17    function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
Rule 18    function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 19    function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
Rule 20    function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 21    function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
Rule 22    parameters -> parameter
Rule 23    parameters -> parameter COMMA parameters
Rule 24    parameter -> RETURNTYPE IDENTIFIER
Rule 25    parameter -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER
Rule 26    statements -> statement
Rule 27    statements -> statement statements
Rule 28    function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON
Rule 29    function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON
Rule 30    statement -> assignment_statement
Rule 31    statement -> class_statement
Rule 32    statement -> print_statement
Rule 33    statement -> this_assign
Rule 34    statement -> switch
Rule 35    statement -> return
Rule 36    statement -> while
Rule 37    statement -> for
Rule 38    statement -> try_catch
Rule 39    statement -> PASS SEMICOLON
Rule 40    statement -> ACCESS assignment_statement
Rule 41    statement -> function
Rule 42    statement -> function_call
Rule 43    statement -> ifblock
Rule 44    statement -> BREAK SEMICOLON
Rule 45    switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
Rule 46    cases -> case
Rule 47    cases -> case cases
Rule 48    case -> CASE NUMBER COLON statements
Rule 49    case -> DEFAULT COLON statements
Rule 50    while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE
Rule 51    params -> param
Rule 52    params -> param LOGICAL params
Rule 53    param -> increment
Rule 54    param -> expression
Rule 55    values -> expression
Rule 56    values -> expression COMMA values
Rule 57    class_statement -> IDENTIFIER IDENTIFIER SEMICOLON
Rule 58    class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
Rule 59    class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
Rule 60    class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
Rule 61    class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
Rule 62    arrays -> LBRACKET RBRACKET
Rule 63    arrays -> LBRACKET RBRACKET arrays
Rule 64    arrays -> LBRACKET expression RBRACKET arrays
Rule 65    arrays -> LBRACKET expression RBRACKET
Rule 66    bool -> TRUE
Rule 67    bool -> FALSE
Rule 68    assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
Rule 69    assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON
Rule 70    assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
Rule 71    assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
Rule 72    assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
Rule 73    assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
Rule 74    assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
Rule 75    assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON
Rule 76    assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON
Rule 77    assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON
Rule 78    assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON
Rule 79    assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
Rule 80    assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON
Rule 81    assignment_statement -> increment SEMICOLON
Rule 82    assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON
Rule 83    assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON
Rule 84    assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON
Rule 85    assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
Rule 86    assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
Rule 87    assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON
Rule 88    assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
Rule 89    assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
Rule 90    assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
Rule 91    print_statement -> SOP LPAREN expression RPAREN SEMICOLON
Rule 92    print_statement -> SOP LPAREN RPAREN SEMICOLON
Rule 93    array_access -> IDENTIFIER arrays
Rule 94    expression -> IDENTIFIER
Rule 95    expression -> IDENTIFIER LPAREN RPAREN
Rule 96    expression -> LPAREN expression RPAREN
Rule 97    expression -> IDENTIFIER LPAREN values RPAREN
Rule 98    expression -> NUMBER
Rule 99    expression -> array_access
Rule 100   expression -> expression PLUS
Rule 101   expression -> expression MINUS
Rule 102   expression -> expression PLUS expression
Rule 103   expression -> expression MINUS expression
Rule 104   expression -> expression TIMES expression
Rule 105   expression -> expression DIVIDE expression
Rule 106   expression -> STRING
Rule 107   expression -> CHAR
Rule 108   expression -> bool
Rule 109   return -> RETURN IDENTIFIER SEMICOLON
Rule 110   return -> RETURN SEMICOLON
Rule 111   return -> RETURN expression SEMICOLON
Rule 112   items -> item
Rule 113   items -> item COMMA items
Rule 114   item -> NUMBER
Rule 115   item -> CHAR
Rule 116   ifblock -> if
Rule 117   ifblock -> if else
Rule 118   ifblock -> if else_if
Rule 119   if -> IF LPAREN params RPAREN LBRACE statements RBRACE
Rule 120   else -> ELSE LBRACE statements RBRACE
Rule 121   else_if -> ELSE if
Rule 122   else_if -> ELSE if else_if
Rule 123   else_if -> ELSE if else
Rule 124   for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
Rule 125   increment -> PLUS PLUS IDENTIFIER
Rule 126   increment -> MINUS MINUS IDENTIFIER
Rule 127   increment -> IDENTIFIER PLUS PLUS
Rule 128   increment -> IDENTIFIER MINUS MINUS
Rule 129   try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
Rule 130   try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

Terminals, with rules where they appear

ACCESS               : 5 12 13 16 17 20 21 40
ASSIGN               : 7 58 59 60 61 68 70 71 72 73 75 76 77 78 79 85 86 87 88 89 90
BREAK                : 44
CASE                 : 48
CATCH                : 129 130
CHAR                 : 107 115
CLASS                : 5 6
COLON                : 48 49
COMMA                : 23 56 113
COMMENT              : 
DEFAULT              : 49
DIVIDE               : 73 79 105
ELSE                 : 120 121 122 123
FALSE                : 67
FINALLY              : 130
FOR                  : 124
IDENTIFIER           : 5 6 7 7 12 13 14 15 16 17 18 19 20 21 24 25 28 29 45 57 57 58 58 58 59 59 59 60 60 60 61 61 61 68 69 70 71 72 73 74 75 76 77 78 79 80 82 83 84 85 86 87 88 89 90 93 94 95 97 109 125 126 127 128 129 129 130 130
IF                   : 119
LBRACE               : 5 6 12 13 14 15 16 17 18 19 20 21 45 50 85 86 88 119 120 124 129 129 130 130 130
LBRACKET             : 25 59 61 62 63 64 65
LOGICAL              : 52
LPAREN               : 12 13 14 15 16 17 18 19 20 21 28 29 45 50 58 60 91 92 95 96 97 119 124 129 130
MINUS                : 71 77 82 82 84 84 101 103 126 126 128 128
NEW                  : 58 59 60 61 89 90
NUMBER               : 48 61 98 114
PASS                 : 39
PLUS                 : 70 74 74 76 80 80 83 83 100 102 125 125 127 127
RBRACE               : 5 6 12 13 14 15 16 17 18 19 20 21 45 50 85 86 88 119 120 124 129 129 130 130 130
RBRACKET             : 25 59 61 62 63 64 65
RETURN               : 109 110 111
RETURNTYPE           : 14 15 16 17 18 19 20 21 24 25 68 69 70 71 72 73 74 85 86 89 89 90 90
RPAREN               : 12 13 14 15 16 17 18 19 20 21 28 29 45 50 58 60 91 92 95 96 97 119 124 129 130
SEMICOLON            : 7 28 29 39 44 57 58 59 60 61 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 109 110 111 124
SOP                  : 91 92
STATIC               : 18 19 20 21
STRING               : 106
SWITCH               : 45
THIS                 : 7
TIMES                : 72 78 104
TRUE                 : 66
TRY                  : 129 130
WHILE                : 50
error                : 

Nonterminals, with rules where they appear

array_access         : 99
arrays               : 63 64 80 82 83 84 85 86 87 88 89 89 90 90 93
assignment_statement : 30 40 124
bool                 : 108
case                 : 46 47
cases                : 45 47
class                : 3
class_statement      : 31
constructor          : 10
else                 : 117 123
else_if              : 118 122
expression           : 54 55 56 64 65 68 70 71 72 73 75 76 77 78 79 87 91 96 100 101 102 102 103 103 104 104 105 105 111
for                  : 37
function             : 41
function_call        : 42
if                   : 116 117 118 121 122 123
ifblock              : 43
increment            : 53 81 124
item                 : 112 113
items                : 85 86 88 113
param                : 51 52
parameter            : 22 23
parameters           : 12 14 16 18 20 23
params               : 28 50 52 119 124
print_statement      : 32
program              : 1 2
programs             : 2 0
return               : 35
stat                 : 8 9
statement            : 4 11 26 27
statements           : 12 13 14 15 16 17 18 19 20 21 27 48 49 50 119 120 124 129 129 130 130 130
stats                : 5 6 9
switch               : 34
this_assign          : 33
try_catch            : 38
values               : 56 60 97
while                : 36

Parsing method: LALR

state 0

    (0) S' -> . programs
    (1) programs -> . program
    (2) programs -> . program programs
    (3) program -> . class
    (4) program -> . statement
    (5) class -> . ACCESS CLASS IDENTIFIER LBRACE stats RBRACE
    (6) class -> . CLASS IDENTIFIER LBRACE stats RBRACE
    (30) statement -> . assignment_statement
    (31) statement -> . class_statement
    (32) statement -> . print_statement
    (33) statement -> . this_assign
    (34) statement -> . switch
    (35) statement -> . return
    (36) statement -> . while
    (37) statement -> . for
    (38) statement -> . try_catch
    (39) statement -> . PASS SEMICOLON
    (40) statement -> . ACCESS assignment_statement
    (41) statement -> . function
    (42) statement -> . function_call
    (43) statement -> . ifblock
    (44) statement -> . BREAK SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (91) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (7) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (45) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (109) return -> . RETURN IDENTIFIER SEMICOLON
    (110) return -> . RETURN SEMICOLON
    (111) return -> . RETURN expression SEMICOLON
    (50) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (124) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (129) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (28) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (29) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (116) ifblock -> . if
    (117) ifblock -> . if else
    (118) ifblock -> . if else_if
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    ACCESS          shift and go to state 5
    CLASS           shift and go to state 6
    PASS            shift and go to state 17
    BREAK           shift and go to state 21
    RETURNTYPE      shift and go to state 22
    IDENTIFIER      shift and go to state 7
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    SOP             shift and go to state 26
    THIS            shift and go to state 27
    SWITCH          shift and go to state 28
    RETURN          shift and go to state 29
    WHILE           shift and go to state 30
    FOR             shift and go to state 31
    TRY             shift and go to state 32
    STATIC          shift and go to state 33
    IF              shift and go to state 35

    programs                       shift and go to state 1
    program                        shift and go to state 2
    class                          shift and go to state 3
    statement                      shift and go to state 4
    assignment_statement           shift and go to state 8
    class_statement                shift and go to state 9
    print_statement                shift and go to state 10
    this_assign                    shift and go to state 11
    switch                         shift and go to state 12
    return                         shift and go to state 13
    while                          shift and go to state 14
    for                            shift and go to state 15
    try_catch                      shift and go to state 16
    function                       shift and go to state 18
    function_call                  shift and go to state 19
    ifblock                        shift and go to state 20
    increment                      shift and go to state 25
    if                             shift and go to state 34

state 1

    (0) S' -> programs .



state 2

    (1) programs -> program .
    (2) programs -> program . programs
    (1) programs -> . program
    (2) programs -> . program programs
    (3) program -> . class
    (4) program -> . statement
    (5) class -> . ACCESS CLASS IDENTIFIER LBRACE stats RBRACE
    (6) class -> . CLASS IDENTIFIER LBRACE stats RBRACE
    (30) statement -> . assignment_statement
    (31) statement -> . class_statement
    (32) statement -> . print_statement
    (33) statement -> . this_assign
    (34) statement -> . switch
    (35) statement -> . return
    (36) statement -> . while
    (37) statement -> . for
    (38) statement -> . try_catch
    (39) statement -> . PASS SEMICOLON
    (40) statement -> . ACCESS assignment_statement
    (41) statement -> . function
    (42) statement -> . function_call
    (43) statement -> . ifblock
    (44) statement -> . BREAK SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (91) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (7) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (45) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (109) return -> . RETURN IDENTIFIER SEMICOLON
    (110) return -> . RETURN SEMICOLON
    (111) return -> . RETURN expression SEMICOLON
    (50) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (124) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (129) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (28) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (29) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (116) ifblock -> . if
    (117) ifblock -> . if else
    (118) ifblock -> . if else_if
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    $end            reduce using rule 1 (programs -> program .)
    ACCESS          shift and go to state 5
    CLASS           shift and go to state 6
    PASS            shift and go to state 17
    BREAK           shift and go to state 21
    RETURNTYPE      shift and go to state 22
    IDENTIFIER      shift and go to state 7
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    SOP             shift and go to state 26
    THIS            shift and go to state 27
    SWITCH          shift and go to state 28
    RETURN          shift and go to state 29
    WHILE           shift and go to state 30
    FOR             shift and go to state 31
    TRY             shift and go to state 32
    STATIC          shift and go to state 33
    IF              shift and go to state 35

    program                        shift and go to state 2
    programs                       shift and go to state 36
    class                          shift and go to state 3
    statement                      shift and go to state 4
    assignment_statement           shift and go to state 8
    class_statement                shift and go to state 9
    print_statement                shift and go to state 10
    this_assign                    shift and go to state 11
    switch                         shift and go to state 12
    return                         shift and go to state 13
    while                          shift and go to state 14
    for                            shift and go to state 15
    try_catch                      shift and go to state 16
    function                       shift and go to state 18
    function_call                  shift and go to state 19
    ifblock                        shift and go to state 20
    increment                      shift and go to state 25
    if                             shift and go to state 34

state 3

    (3) program -> class .

    ACCESS          reduce using rule 3 (program -> class .)
    CLASS           reduce using rule 3 (program -> class .)
    PASS            reduce using rule 3 (program -> class .)
    BREAK           reduce using rule 3 (program -> class .)
    RETURNTYPE      reduce using rule 3 (program -> class .)
    IDENTIFIER      reduce using rule 3 (program -> class .)
    PLUS            reduce using rule 3 (program -> class .)
    MINUS           reduce using rule 3 (program -> class .)
    SOP             reduce using rule 3 (program -> class .)
    THIS            reduce using rule 3 (program -> class .)
    SWITCH          reduce using rule 3 (program -> class .)
    RETURN          reduce using rule 3 (program -> class .)
    WHILE           reduce using rule 3 (program -> class .)
    FOR             reduce using rule 3 (program -> class .)
    TRY             reduce using rule 3 (program -> class .)
    STATIC          reduce using rule 3 (program -> class .)
    IF              reduce using rule 3 (program -> class .)
    $end            reduce using rule 3 (program -> class .)


state 4

    (4) program -> statement .

    ACCESS          reduce using rule 4 (program -> statement .)
    CLASS           reduce using rule 4 (program -> statement .)
    PASS            reduce using rule 4 (program -> statement .)
    BREAK           reduce using rule 4 (program -> statement .)
    RETURNTYPE      reduce using rule 4 (program -> statement .)
    IDENTIFIER      reduce using rule 4 (program -> statement .)
    PLUS            reduce using rule 4 (program -> statement .)
    MINUS           reduce using rule 4 (program -> statement .)
    SOP             reduce using rule 4 (program -> statement .)
    THIS            reduce using rule 4 (program -> statement .)
    SWITCH          reduce using rule 4 (program -> statement .)
    RETURN          reduce using rule 4 (program -> statement .)
    WHILE           reduce using rule 4 (program -> statement .)
    FOR             reduce using rule 4 (program -> statement .)
    TRY             reduce using rule 4 (program -> statement .)
    STATIC          reduce using rule 4 (program -> statement .)
    IF              reduce using rule 4 (program -> statement .)
    $end            reduce using rule 4 (program -> statement .)


state 5

    (5) class -> ACCESS . CLASS IDENTIFIER LBRACE stats RBRACE
    (40) statement -> ACCESS . assignment_statement
    (16) function -> ACCESS . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> ACCESS . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> ACCESS . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> ACCESS . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS

    CLASS           shift and go to state 37
    RETURNTYPE      shift and go to state 40
    STATIC          shift and go to state 41
    IDENTIFIER      shift and go to state 38
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24

    assignment_statement           shift and go to state 39
    increment                      shift and go to state 25

state 6

    (6) class -> CLASS . IDENTIFIER LBRACE stats RBRACE

    IDENTIFIER      shift and go to state 42


state 7

    (75) assignment_statement -> IDENTIFIER . ASSIGN expression SEMICOLON
    (76) assignment_statement -> IDENTIFIER . PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> IDENTIFIER . MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> IDENTIFIER . TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> IDENTIFIER . DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> IDENTIFIER . arrays PLUS PLUS SEMICOLON
    (82) assignment_statement -> IDENTIFIER . arrays MINUS MINUS SEMICOLON
    (87) assignment_statement -> IDENTIFIER . arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> IDENTIFIER . arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (57) class_statement -> IDENTIFIER . IDENTIFIER SEMICOLON
    (58) class_statement -> IDENTIFIER . IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> IDENTIFIER . IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> IDENTIFIER . IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> IDENTIFIER . IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (28) function_call -> IDENTIFIER . LPAREN params RPAREN SEMICOLON
    (29) function_call -> IDENTIFIER . LPAREN RPAREN SEMICOLON
    (127) increment -> IDENTIFIER . PLUS PLUS
    (128) increment -> IDENTIFIER . MINUS MINUS
    (62) arrays -> . LBRACKET RBRACKET
    (63) arrays -> . LBRACKET RBRACKET arrays
    (64) arrays -> . LBRACKET expression RBRACKET arrays
    (65) arrays -> . LBRACKET expression RBRACKET

    ASSIGN          shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 50
    LBRACKET        shift and go to state 51

    arrays                         shift and go to state 49

state 8

    (30) statement -> assignment_statement .

    ACCESS          reduce using rule 30 (statement -> assignment_statement .)
    CLASS           reduce using rule 30 (statement -> assignment_statement .)
    PASS            reduce using rule 30 (statement -> assignment_statement .)
    BREAK           reduce using rule 30 (statement -> assignment_statement .)
    RETURNTYPE      reduce using rule 30 (statement -> assignment_statement .)
    IDENTIFIER      reduce using rule 30 (statement -> assignment_statement .)
    PLUS            reduce using rule 30 (statement -> assignment_statement .)
    MINUS           reduce using rule 30 (statement -> assignment_statement .)
    SOP             reduce using rule 30 (statement -> assignment_statement .)
    THIS            reduce using rule 30 (statement -> assignment_statement .)
    SWITCH          reduce using rule 30 (statement -> assignment_statement .)
    RETURN          reduce using rule 30 (statement -> assignment_statement .)
    WHILE           reduce using rule 30 (statement -> assignment_statement .)
    FOR             reduce using rule 30 (statement -> assignment_statement .)
    TRY             reduce using rule 30 (statement -> assignment_statement .)
    STATIC          reduce using rule 30 (statement -> assignment_statement .)
    IF              reduce using rule 30 (statement -> assignment_statement .)
    $end            reduce using rule 30 (statement -> assignment_statement .)
    RBRACE          reduce using rule 30 (statement -> assignment_statement .)
    CASE            reduce using rule 30 (statement -> assignment_statement .)
    DEFAULT         reduce using rule 30 (statement -> assignment_statement .)


state 9

    (31) statement -> class_statement .

    ACCESS          reduce using rule 31 (statement -> class_statement .)
    CLASS           reduce using rule 31 (statement -> class_statement .)
    PASS            reduce using rule 31 (statement -> class_statement .)
    BREAK           reduce using rule 31 (statement -> class_statement .)
    RETURNTYPE      reduce using rule 31 (statement -> class_statement .)
    IDENTIFIER      reduce using rule 31 (statement -> class_statement .)
    PLUS            reduce using rule 31 (statement -> class_statement .)
    MINUS           reduce using rule 31 (statement -> class_statement .)
    SOP             reduce using rule 31 (statement -> class_statement .)
    THIS            reduce using rule 31 (statement -> class_statement .)
    SWITCH          reduce using rule 31 (statement -> class_statement .)
    RETURN          reduce using rule 31 (statement -> class_statement .)
    WHILE           reduce using rule 31 (statement -> class_statement .)
    FOR             reduce using rule 31 (statement -> class_statement .)
    TRY             reduce using rule 31 (statement -> class_statement .)
    STATIC          reduce using rule 31 (statement -> class_statement .)
    IF              reduce using rule 31 (statement -> class_statement .)
    $end            reduce using rule 31 (statement -> class_statement .)
    RBRACE          reduce using rule 31 (statement -> class_statement .)
    CASE            reduce using rule 31 (statement -> class_statement .)
    DEFAULT         reduce using rule 31 (statement -> class_statement .)


state 10

    (32) statement -> print_statement .

    ACCESS          reduce using rule 32 (statement -> print_statement .)
    CLASS           reduce using rule 32 (statement -> print_statement .)
    PASS            reduce using rule 32 (statement -> print_statement .)
    BREAK           reduce using rule 32 (statement -> print_statement .)
    RETURNTYPE      reduce using rule 32 (statement -> print_statement .)
    IDENTIFIER      reduce using rule 32 (statement -> print_statement .)
    PLUS            reduce using rule 32 (statement -> print_statement .)
    MINUS           reduce using rule 32 (statement -> print_statement .)
    SOP             reduce using rule 32 (statement -> print_statement .)
    THIS            reduce using rule 32 (statement -> print_statement .)
    SWITCH          reduce using rule 32 (statement -> print_statement .)
    RETURN          reduce using rule 32 (statement -> print_statement .)
    WHILE           reduce using rule 32 (statement -> print_statement .)
    FOR             reduce using rule 32 (statement -> print_statement .)
    TRY             reduce using rule 32 (statement -> print_statement .)
    STATIC          reduce using rule 32 (statement -> print_statement .)
    IF              reduce using rule 32 (statement -> print_statement .)
    $end            reduce using rule 32 (statement -> print_statement .)
    RBRACE          reduce using rule 32 (statement -> print_statement .)
    CASE            reduce using rule 32 (statement -> print_statement .)
    DEFAULT         reduce using rule 32 (statement -> print_statement .)


state 11

    (33) statement -> this_assign .

    ACCESS          reduce using rule 33 (statement -> this_assign .)
    CLASS           reduce using rule 33 (statement -> this_assign .)
    PASS            reduce using rule 33 (statement -> this_assign .)
    BREAK           reduce using rule 33 (statement -> this_assign .)
    RETURNTYPE      reduce using rule 33 (statement -> this_assign .)
    IDENTIFIER      reduce using rule 33 (statement -> this_assign .)
    PLUS            reduce using rule 33 (statement -> this_assign .)
    MINUS           reduce using rule 33 (statement -> this_assign .)
    SOP             reduce using rule 33 (statement -> this_assign .)
    THIS            reduce using rule 33 (statement -> this_assign .)
    SWITCH          reduce using rule 33 (statement -> this_assign .)
    RETURN          reduce using rule 33 (statement -> this_assign .)
    WHILE           reduce using rule 33 (statement -> this_assign .)
    FOR             reduce using rule 33 (statement -> this_assign .)
    TRY             reduce using rule 33 (statement -> this_assign .)
    STATIC          reduce using rule 33 (statement -> this_assign .)
    IF              reduce using rule 33 (statement -> this_assign .)
    $end            reduce using rule 33 (statement -> this_assign .)
    RBRACE          reduce using rule 33 (statement -> this_assign .)
    CASE            reduce using rule 33 (statement -> this_assign .)
    DEFAULT         reduce using rule 33 (statement -> this_assign .)


state 12

    (34) statement -> switch .

    ACCESS          reduce using rule 34 (statement -> switch .)
    CLASS           reduce using rule 34 (statement -> switch .)
    PASS            reduce using rule 34 (statement -> switch .)
    BREAK           reduce using rule 34 (statement -> switch .)
    RETURNTYPE      reduce using rule 34 (statement -> switch .)
    IDENTIFIER      reduce using rule 34 (statement -> switch .)
    PLUS            reduce using rule 34 (statement -> switch .)
    MINUS           reduce using rule 34 (statement -> switch .)
    SOP             reduce using rule 34 (statement -> switch .)
    THIS            reduce using rule 34 (statement -> switch .)
    SWITCH          reduce using rule 34 (statement -> switch .)
    RETURN          reduce using rule 34 (statement -> switch .)
    WHILE           reduce using rule 34 (statement -> switch .)
    FOR             reduce using rule 34 (statement -> switch .)
    TRY             reduce using rule 34 (statement -> switch .)
    STATIC          reduce using rule 34 (statement -> switch .)
    IF              reduce using rule 34 (statement -> switch .)
    $end            reduce using rule 34 (statement -> switch .)
    RBRACE          reduce using rule 34 (statement -> switch .)
    CASE            reduce using rule 34 (statement -> switch .)
    DEFAULT         reduce using rule 34 (statement -> switch .)


state 13

    (35) statement -> return .

    ACCESS          reduce using rule 35 (statement -> return .)
    CLASS           reduce using rule 35 (statement -> return .)
    PASS            reduce using rule 35 (statement -> return .)
    BREAK           reduce using rule 35 (statement -> return .)
    RETURNTYPE      reduce using rule 35 (statement -> return .)
    IDENTIFIER      reduce using rule 35 (statement -> return .)
    PLUS            reduce using rule 35 (statement -> return .)
    MINUS           reduce using rule 35 (statement -> return .)
    SOP             reduce using rule 35 (statement -> return .)
    THIS            reduce using rule 35 (statement -> return .)
    SWITCH          reduce using rule 35 (statement -> return .)
    RETURN          reduce using rule 35 (statement -> return .)
    WHILE           reduce using rule 35 (statement -> return .)
    FOR             reduce using rule 35 (statement -> return .)
    TRY             reduce using rule 35 (statement -> return .)
    STATIC          reduce using rule 35 (statement -> return .)
    IF              reduce using rule 35 (statement -> return .)
    $end            reduce using rule 35 (statement -> return .)
    RBRACE          reduce using rule 35 (statement -> return .)
    CASE            reduce using rule 35 (statement -> return .)
    DEFAULT         reduce using rule 35 (statement -> return .)


state 14

    (36) statement -> while .

    ACCESS          reduce using rule 36 (statement -> while .)
    CLASS           reduce using rule 36 (statement -> while .)
    PASS            reduce using rule 36 (statement -> while .)
    BREAK           reduce using rule 36 (statement -> while .)
    RETURNTYPE      reduce using rule 36 (statement -> while .)
    IDENTIFIER      reduce using rule 36 (statement -> while .)
    PLUS            reduce using rule 36 (statement -> while .)
    MINUS           reduce using rule 36 (statement -> while .)
    SOP             reduce using rule 36 (statement -> while .)
    THIS            reduce using rule 36 (statement -> while .)
    SWITCH          reduce using rule 36 (statement -> while .)
    RETURN          reduce using rule 36 (statement -> while .)
    WHILE           reduce using rule 36 (statement -> while .)
    FOR             reduce using rule 36 (statement -> while .)
    TRY             reduce using rule 36 (statement -> while .)
    STATIC          reduce using rule 36 (statement -> while .)
    IF              reduce using rule 36 (statement -> while .)
    $end            reduce using rule 36 (statement -> while .)
    RBRACE          reduce using rule 36 (statement -> while .)
    CASE            reduce using rule 36 (statement -> while .)
    DEFAULT         reduce using rule 36 (statement -> while .)


state 15

    (37) statement -> for .

    ACCESS          reduce using rule 37 (statement -> for .)
    CLASS           reduce using rule 37 (statement -> for .)
    PASS            reduce using rule 37 (statement -> for .)
    BREAK           reduce using rule 37 (statement -> for .)
    RETURNTYPE      reduce using rule 37 (statement -> for .)
    IDENTIFIER      reduce using rule 37 (statement -> for .)
    PLUS            reduce using rule 37 (statement -> for .)
    MINUS           reduce using rule 37 (statement -> for .)
    SOP             reduce using rule 37 (statement -> for .)
    THIS            reduce using rule 37 (statement -> for .)
    SWITCH          reduce using rule 37 (statement -> for .)
    RETURN          reduce using rule 37 (statement -> for .)
    WHILE           reduce using rule 37 (statement -> for .)
    FOR             reduce using rule 37 (statement -> for .)
    TRY             reduce using rule 37 (statement -> for .)
    STATIC          reduce using rule 37 (statement -> for .)
    IF              reduce using rule 37 (statement -> for .)
    $end            reduce using rule 37 (statement -> for .)
    RBRACE          reduce using rule 37 (statement -> for .)
    CASE            reduce using rule 37 (statement -> for .)
    DEFAULT         reduce using rule 37 (statement -> for .)


state 16

    (38) statement -> try_catch .

    ACCESS          reduce using rule 38 (statement -> try_catch .)
    CLASS           reduce using rule 38 (statement -> try_catch .)
    PASS            reduce using rule 38 (statement -> try_catch .)
    BREAK           reduce using rule 38 (statement -> try_catch .)
    RETURNTYPE      reduce using rule 38 (statement -> try_catch .)
    IDENTIFIER      reduce using rule 38 (statement -> try_catch .)
    PLUS            reduce using rule 38 (statement -> try_catch .)
    MINUS           reduce using rule 38 (statement -> try_catch .)
    SOP             reduce using rule 38 (statement -> try_catch .)
    THIS            reduce using rule 38 (statement -> try_catch .)
    SWITCH          reduce using rule 38 (statement -> try_catch .)
    RETURN          reduce using rule 38 (statement -> try_catch .)
    WHILE           reduce using rule 38 (statement -> try_catch .)
    FOR             reduce using rule 38 (statement -> try_catch .)
    TRY             reduce using rule 38 (statement -> try_catch .)
    STATIC          reduce using rule 38 (statement -> try_catch .)
    IF              reduce using rule 38 (statement -> try_catch .)
    $end            reduce using rule 38 (statement -> try_catch .)
    RBRACE          reduce using rule 38 (statement -> try_catch .)
    CASE            reduce using rule 38 (statement -> try_catch .)
    DEFAULT         reduce using rule 38 (statement -> try_catch .)


state 17

    (39) statement -> PASS . SEMICOLON

    SEMICOLON       shift and go to state 52


state 18

    (41) statement -> function .

    ACCESS          reduce using rule 41 (statement -> function .)
    CLASS           reduce using rule 41 (statement -> function .)
    PASS            reduce using rule 41 (statement -> function .)
    BREAK           reduce using rule 41 (statement -> function .)
    RETURNTYPE      reduce using rule 41 (statement -> function .)
    IDENTIFIER      reduce using rule 41 (statement -> function .)
    PLUS            reduce using rule 41 (statement -> function .)
    MINUS           reduce using rule 41 (statement -> function .)
    SOP             reduce using rule 41 (statement -> function .)
    THIS            reduce using rule 41 (statement -> function .)
    SWITCH          reduce using rule 41 (statement -> function .)
    RETURN          reduce using rule 41 (statement -> function .)
    WHILE           reduce using rule 41 (statement -> function .)
    FOR             reduce using rule 41 (statement -> function .)
    TRY             reduce using rule 41 (statement -> function .)
    STATIC          reduce using rule 41 (statement -> function .)
    IF              reduce using rule 41 (statement -> function .)
    $end            reduce using rule 41 (statement -> function .)
    RBRACE          reduce using rule 41 (statement -> function .)
    CASE            reduce using rule 41 (statement -> function .)
    DEFAULT         reduce using rule 41 (statement -> function .)


state 19

    (42) statement -> function_call .

    ACCESS          reduce using rule 42 (statement -> function_call .)
    CLASS           reduce using rule 42 (statement -> function_call .)
    PASS            reduce using rule 42 (statement -> function_call .)
    BREAK           reduce using rule 42 (statement -> function_call .)
    RETURNTYPE      reduce using rule 42 (statement -> function_call .)
    IDENTIFIER      reduce using rule 42 (statement -> function_call .)
    PLUS            reduce using rule 42 (statement -> function_call .)
    MINUS           reduce using rule 42 (statement -> function_call .)
    SOP             reduce using rule 42 (statement -> function_call .)
    THIS            reduce using rule 42 (statement -> function_call .)
    SWITCH          reduce using rule 42 (statement -> function_call .)
    RETURN          reduce using rule 42 (statement -> function_call .)
    WHILE           reduce using rule 42 (statement -> function_call .)
    FOR             reduce using rule 42 (statement -> function_call .)
    TRY             reduce using rule 42 (statement -> function_call .)
    STATIC          reduce using rule 42 (statement -> function_call .)
    IF              reduce using rule 42 (statement -> function_call .)
    $end            reduce using rule 42 (statement -> function_call .)
    RBRACE          reduce using rule 42 (statement -> function_call .)
    CASE            reduce using rule 42 (statement -> function_call .)
    DEFAULT         reduce using rule 42 (statement -> function_call .)


state 20

    (43) statement -> ifblock .

    ACCESS          reduce using rule 43 (statement -> ifblock .)
    CLASS           reduce using rule 43 (statement -> ifblock .)
    PASS            reduce using rule 43 (statement -> ifblock .)
    BREAK           reduce using rule 43 (statement -> ifblock .)
    RETURNTYPE      reduce using rule 43 (statement -> ifblock .)
    IDENTIFIER      reduce using rule 43 (statement -> ifblock .)
    PLUS            reduce using rule 43 (statement -> ifblock .)
    MINUS           reduce using rule 43 (statement -> ifblock .)
    SOP             reduce using rule 43 (statement -> ifblock .)
    THIS            reduce using rule 43 (statement -> ifblock .)
    SWITCH          reduce using rule 43 (statement -> ifblock .)
    RETURN          reduce using rule 43 (statement -> ifblock .)
    WHILE           reduce using rule 43 (statement -> ifblock .)
    FOR             reduce using rule 43 (statement -> ifblock .)
    TRY             reduce using rule 43 (statement -> ifblock .)
    STATIC          reduce using rule 43 (statement -> ifblock .)
    IF              reduce using rule 43 (statement -> ifblock .)
    $end            reduce using rule 43 (statement -> ifblock .)
    RBRACE          reduce using rule 43 (statement -> ifblock .)
    CASE            reduce using rule 43 (statement -> ifblock .)
    DEFAULT         reduce using rule 43 (statement -> ifblock .)


state 21

    (44) statement -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 53


state 22

    (68) assignment_statement -> RETURNTYPE . IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> RETURNTYPE . IDENTIFIER SEMICOLON
    (70) assignment_statement -> RETURNTYPE . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> RETURNTYPE . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> RETURNTYPE . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> RETURNTYPE . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> RETURNTYPE . IDENTIFIER PLUS PLUS SEMICOLON
    (85) assignment_statement -> RETURNTYPE . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> RETURNTYPE . arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> RETURNTYPE . IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> RETURNTYPE . arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (14) function -> RETURNTYPE . IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> RETURNTYPE . IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (62) arrays -> . LBRACKET RBRACKET
    (63) arrays -> . LBRACKET RBRACKET arrays
    (64) arrays -> . LBRACKET expression RBRACKET arrays
    (65) arrays -> . LBRACKET expression RBRACKET

    IDENTIFIER      shift and go to state 54
    LBRACKET        shift and go to state 51

    arrays                         shift and go to state 55

state 23

    (83) assignment_statement -> PLUS . PLUS IDENTIFIER arrays SEMICOLON
    (125) increment -> PLUS . PLUS IDENTIFIER

    PLUS            shift and go to state 56


state 24

    (84) assignment_statement -> MINUS . MINUS IDENTIFIER arrays SEMICOLON
    (126) increment -> MINUS . MINUS IDENTIFIER

    MINUS           shift and go to state 57


state 25

    (81) assignment_statement -> increment . SEMICOLON

    SEMICOLON       shift and go to state 58


state 26

    (91) print_statement -> SOP . LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> SOP . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 59


state 27

    (7) this_assign -> THIS . IDENTIFIER ASSIGN IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 60


state 28

    (45) switch -> SWITCH . LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE

    LPAREN          shift and go to state 61


state 29

    (109) return -> RETURN . IDENTIFIER SEMICOLON
    (110) return -> RETURN . SEMICOLON
    (111) return -> RETURN . expression SEMICOLON
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    IDENTIFIER      shift and go to state 62
    SEMICOLON       shift and go to state 63
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expression                     shift and go to state 64
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 30

    (50) while -> WHILE . LPAREN params RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 73


state 31

    (124) for -> FOR . LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 74


state 32

    (129) try_catch -> TRY . LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> TRY . LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

    LBRACE          shift and go to state 75


state 33

    (18) function -> STATIC . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> STATIC . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE

    RETURNTYPE      shift and go to state 76


state 34

    (116) ifblock -> if .
    (117) ifblock -> if . else
    (118) ifblock -> if . else_if
    (120) else -> . ELSE LBRACE statements RBRACE
    (121) else_if -> . ELSE if
    (122) else_if -> . ELSE if else_if
    (123) else_if -> . ELSE if else

    ACCESS          reduce using rule 116 (ifblock -> if .)
    CLASS           reduce using rule 116 (ifblock -> if .)
    PASS            reduce using rule 116 (ifblock -> if .)
    BREAK           reduce using rule 116 (ifblock -> if .)
    RETURNTYPE      reduce using rule 116 (ifblock -> if .)
    IDENTIFIER      reduce using rule 116 (ifblock -> if .)
    PLUS            reduce using rule 116 (ifblock -> if .)
    MINUS           reduce using rule 116 (ifblock -> if .)
    SOP             reduce using rule 116 (ifblock -> if .)
    THIS            reduce using rule 116 (ifblock -> if .)
    SWITCH          reduce using rule 116 (ifblock -> if .)
    RETURN          reduce using rule 116 (ifblock -> if .)
    WHILE           reduce using rule 116 (ifblock -> if .)
    FOR             reduce using rule 116 (ifblock -> if .)
    TRY             reduce using rule 116 (ifblock -> if .)
    STATIC          reduce using rule 116 (ifblock -> if .)
    IF              reduce using rule 116 (ifblock -> if .)
    $end            reduce using rule 116 (ifblock -> if .)
    RBRACE          reduce using rule 116 (ifblock -> if .)
    CASE            reduce using rule 116 (ifblock -> if .)
    DEFAULT         reduce using rule 116 (ifblock -> if .)
    ELSE            shift and go to state 79

    else                           shift and go to state 77
    else_if                        shift and go to state 78

state 35

    (119) if -> IF . LPAREN params RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 80


state 36

    (2) programs -> program programs .

    $end            reduce using rule 2 (programs -> program programs .)


state 37

    (5) class -> ACCESS CLASS . IDENTIFIER LBRACE stats RBRACE

    IDENTIFIER      shift and go to state 81


state 38

    (75) assignment_statement -> IDENTIFIER . ASSIGN expression SEMICOLON
    (76) assignment_statement -> IDENTIFIER . PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> IDENTIFIER . MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> IDENTIFIER . TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> IDENTIFIER . DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> IDENTIFIER . arrays PLUS PLUS SEMICOLON
    (82) assignment_statement -> IDENTIFIER . arrays MINUS MINUS SEMICOLON
    (87) assignment_statement -> IDENTIFIER . arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> IDENTIFIER . arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (127) increment -> IDENTIFIER . PLUS PLUS
    (128) increment -> IDENTIFIER . MINUS MINUS
    (62) arrays -> . LBRACKET RBRACKET
    (63) arrays -> . LBRACKET RBRACKET arrays
    (64) arrays -> . LBRACKET expression RBRACKET arrays
    (65) arrays -> . LBRACKET expression RBRACKET

    ASSIGN          shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LBRACKET        shift and go to state 51

    arrays                         shift and go to state 49

state 39

    (40) statement -> ACCESS assignment_statement .

    ACCESS          reduce using rule 40 (statement -> ACCESS assignment_statement .)
    CLASS           reduce using rule 40 (statement -> ACCESS assignment_statement .)
    PASS            reduce using rule 40 (statement -> ACCESS assignment_statement .)
    BREAK           reduce using rule 40 (statement -> ACCESS assignment_statement .)
    RETURNTYPE      reduce using rule 40 (statement -> ACCESS assignment_statement .)
    IDENTIFIER      reduce using rule 40 (statement -> ACCESS assignment_statement .)
    PLUS            reduce using rule 40 (statement -> ACCESS assignment_statement .)
    MINUS           reduce using rule 40 (statement -> ACCESS assignment_statement .)
    SOP             reduce using rule 40 (statement -> ACCESS assignment_statement .)
    THIS            reduce using rule 40 (statement -> ACCESS assignment_statement .)
    SWITCH          reduce using rule 40 (statement -> ACCESS assignment_statement .)
    RETURN          reduce using rule 40 (statement -> ACCESS assignment_statement .)
    WHILE           reduce using rule 40 (statement -> ACCESS assignment_statement .)
    FOR             reduce using rule 40 (statement -> ACCESS assignment_statement .)
    TRY             reduce using rule 40 (statement -> ACCESS assignment_statement .)
    STATIC          reduce using rule 40 (statement -> ACCESS assignment_statement .)
    IF              reduce using rule 40 (statement -> ACCESS assignment_statement .)
    $end            reduce using rule 40 (statement -> ACCESS assignment_statement .)
    RBRACE          reduce using rule 40 (statement -> ACCESS assignment_statement .)
    CASE            reduce using rule 40 (statement -> ACCESS assignment_statement .)
    DEFAULT         reduce using rule 40 (statement -> ACCESS assignment_statement .)


state 40

    (16) function -> ACCESS RETURNTYPE . IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> ACCESS RETURNTYPE . IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (68) assignment_statement -> RETURNTYPE . IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> RETURNTYPE . IDENTIFIER SEMICOLON
    (70) assignment_statement -> RETURNTYPE . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> RETURNTYPE . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> RETURNTYPE . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> RETURNTYPE . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> RETURNTYPE . IDENTIFIER PLUS PLUS SEMICOLON
    (85) assignment_statement -> RETURNTYPE . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> RETURNTYPE . arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> RETURNTYPE . IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> RETURNTYPE . arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (62) arrays -> . LBRACKET RBRACKET
    (63) arrays -> . LBRACKET RBRACKET arrays
    (64) arrays -> . LBRACKET expression RBRACKET arrays
    (65) arrays -> . LBRACKET expression RBRACKET

    IDENTIFIER      shift and go to state 82
    LBRACKET        shift and go to state 51

    arrays                         shift and go to state 55

state 41

    (20) function -> ACCESS STATIC . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> ACCESS STATIC . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE

    RETURNTYPE      shift and go to state 83


state 42

    (6) class -> CLASS IDENTIFIER . LBRACE stats RBRACE

    LBRACE          shift and go to state 84


state 43

    (57) class_statement -> IDENTIFIER IDENTIFIER . SEMICOLON
    (58) class_statement -> IDENTIFIER IDENTIFIER . ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> IDENTIFIER IDENTIFIER . ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> IDENTIFIER IDENTIFIER . ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> IDENTIFIER IDENTIFIER . ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON

    SEMICOLON       shift and go to state 85
    ASSIGN          shift and go to state 86


state 44

    (75) assignment_statement -> IDENTIFIER ASSIGN . expression SEMICOLON
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    IDENTIFIER      shift and go to state 87
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expression                     shift and go to state 88
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 45

    (76) assignment_statement -> IDENTIFIER PLUS . ASSIGN expression SEMICOLON
    (127) increment -> IDENTIFIER PLUS . PLUS

    ASSIGN          shift and go to state 90
    PLUS            shift and go to state 89


state 46

    (77) assignment_statement -> IDENTIFIER MINUS . ASSIGN expression SEMICOLON
    (128) increment -> IDENTIFIER MINUS . MINUS

    ASSIGN          shift and go to state 92
    MINUS           shift and go to state 91


state 47

    (78) assignment_statement -> IDENTIFIER TIMES . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 93


state 48

    (79) assignment_statement -> IDENTIFIER DIVIDE . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 94


state 49

    (80) assignment_statement -> IDENTIFIER arrays . PLUS PLUS SEMICOLON
    (82) assignment_statement -> IDENTIFIER arrays . MINUS MINUS SEMICOLON
    (87) assignment_statement -> IDENTIFIER arrays . ASSIGN expression SEMICOLON
    (88) assignment_statement -> IDENTIFIER arrays . ASSIGN LBRACE items RBRACE SEMICOLON

    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    ASSIGN          shift and go to state 97


state 50

    (28) function_call -> IDENTIFIER LPAREN . params RPAREN SEMICOLON
    (29) function_call -> IDENTIFIER LPAREN . RPAREN SEMICOLON
    (51) params -> . param
    (52) params -> . param LOGICAL params
    (53) param -> . increment
    (54) param -> . expression
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    RPAREN          shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    IDENTIFIER      shift and go to state 98
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    params                         shift and go to state 99
    param                          shift and go to state 101
    increment                      shift and go to state 102
    expression                     shift and go to state 103
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 51

    (62) arrays -> LBRACKET . RBRACKET
    (63) arrays -> LBRACKET . RBRACKET arrays
    (64) arrays -> LBRACKET . expression RBRACKET arrays
    (65) arrays -> LBRACKET . expression RBRACKET
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    RBRACKET        shift and go to state 106
    IDENTIFIER      shift and go to state 87
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expression                     shift and go to state 107
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 52

    (39) statement -> PASS SEMICOLON .

    ACCESS          reduce using rule 39 (statement -> PASS SEMICOLON .)
    CLASS           reduce using rule 39 (statement -> PASS SEMICOLON .)
    PASS            reduce using rule 39 (statement -> PASS SEMICOLON .)
    BREAK           reduce using rule 39 (statement -> PASS SEMICOLON .)
    RETURNTYPE      reduce using rule 39 (statement -> PASS SEMICOLON .)
    IDENTIFIER      reduce using rule 39 (statement -> PASS SEMICOLON .)
    PLUS            reduce using rule 39 (statement -> PASS SEMICOLON .)
    MINUS           reduce using rule 39 (statement -> PASS SEMICOLON .)
    SOP             reduce using rule 39 (statement -> PASS SEMICOLON .)
    THIS            reduce using rule 39 (statement -> PASS SEMICOLON .)
    SWITCH          reduce using rule 39 (statement -> PASS SEMICOLON .)
    RETURN          reduce using rule 39 (statement -> PASS SEMICOLON .)
    WHILE           reduce using rule 39 (statement -> PASS SEMICOLON .)
    FOR             reduce using rule 39 (statement -> PASS SEMICOLON .)
    TRY             reduce using rule 39 (statement -> PASS SEMICOLON .)
    STATIC          reduce using rule 39 (statement -> PASS SEMICOLON .)
    IF              reduce using rule 39 (statement -> PASS SEMICOLON .)
    $end            reduce using rule 39 (statement -> PASS SEMICOLON .)
    RBRACE          reduce using rule 39 (statement -> PASS SEMICOLON .)
    CASE            reduce using rule 39 (statement -> PASS SEMICOLON .)
    DEFAULT         reduce using rule 39 (statement -> PASS SEMICOLON .)


state 53

    (44) statement -> BREAK SEMICOLON .

    ACCESS          reduce using rule 44 (statement -> BREAK SEMICOLON .)
    CLASS           reduce using rule 44 (statement -> BREAK SEMICOLON .)
    PASS            reduce using rule 44 (statement -> BREAK SEMICOLON .)
    BREAK           reduce using rule 44 (statement -> BREAK SEMICOLON .)
    RETURNTYPE      reduce using rule 44 (statement -> BREAK SEMICOLON .)
    IDENTIFIER      reduce using rule 44 (statement -> BREAK SEMICOLON .)
    PLUS            reduce using rule 44 (statement -> BREAK SEMICOLON .)
    MINUS           reduce using rule 44 (statement -> BREAK SEMICOLON .)
    SOP             reduce using rule 44 (statement -> BREAK SEMICOLON .)
    THIS            reduce using rule 44 (statement -> BREAK SEMICOLON .)
    SWITCH          reduce using rule 44 (statement -> BREAK SEMICOLON .)
    RETURN          reduce using rule 44 (statement -> BREAK SEMICOLON .)
    WHILE           reduce using rule 44 (statement -> BREAK SEMICOLON .)
    FOR             reduce using rule 44 (statement -> BREAK SEMICOLON .)
    TRY             reduce using rule 44 (statement -> BREAK SEMICOLON .)
    STATIC          reduce using rule 44 (statement -> BREAK SEMICOLON .)
    IF              reduce using rule 44 (statement -> BREAK SEMICOLON .)
    $end            reduce using rule 44 (statement -> BREAK SEMICOLON .)
    RBRACE          reduce using rule 44 (statement -> BREAK SEMICOLON .)
    CASE            reduce using rule 44 (statement -> BREAK SEMICOLON .)
    DEFAULT         reduce using rule 44 (statement -> BREAK SEMICOLON .)


state 54

    (68) assignment_statement -> RETURNTYPE IDENTIFIER . ASSIGN expression SEMICOLON
    (69) assignment_statement -> RETURNTYPE IDENTIFIER . SEMICOLON
    (70) assignment_statement -> RETURNTYPE IDENTIFIER . PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> RETURNTYPE IDENTIFIER . MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> RETURNTYPE IDENTIFIER . TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> RETURNTYPE IDENTIFIER . DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> RETURNTYPE IDENTIFIER . PLUS PLUS SEMICOLON
    (85) assignment_statement -> RETURNTYPE IDENTIFIER . arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> RETURNTYPE IDENTIFIER . arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (14) function -> RETURNTYPE IDENTIFIER . LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> RETURNTYPE IDENTIFIER . LPAREN RPAREN LBRACE statements RBRACE
    (62) arrays -> . LBRACKET RBRACKET
    (63) arrays -> . LBRACKET RBRACKET arrays
    (64) arrays -> . LBRACKET expression RBRACKET arrays
    (65) arrays -> . LBRACKET expression RBRACKET

    ASSIGN          shift and go to state 108
    SEMICOLON       shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    TIMES           shift and go to state 112
    DIVIDE          shift and go to state 113
    LPAREN          shift and go to state 115
    LBRACKET        shift and go to state 51

    arrays                         shift and go to state 114

state 55

    (86) assignment_statement -> RETURNTYPE arrays . IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (90) assignment_statement -> RETURNTYPE arrays . IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON

    IDENTIFIER      shift and go to state 116


state 56

    (83) assignment_statement -> PLUS PLUS . IDENTIFIER arrays SEMICOLON
    (125) increment -> PLUS PLUS . IDENTIFIER

    IDENTIFIER      shift and go to state 117


state 57

    (84) assignment_statement -> MINUS MINUS . IDENTIFIER arrays SEMICOLON
    (126) increment -> MINUS MINUS . IDENTIFIER

    IDENTIFIER      shift and go to state 118


state 58

    (81) assignment_statement -> increment SEMICOLON .

    ACCESS          reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    CLASS           reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    PASS            reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    BREAK           reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    RETURNTYPE      reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    IDENTIFIER      reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    PLUS            reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    MINUS           reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    SOP             reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    THIS            reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    SWITCH          reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    RETURN          reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    WHILE           reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    FOR             reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    TRY             reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    STATIC          reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    IF              reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    $end            reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    LPAREN          reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    NUMBER          reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    STRING          reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    CHAR            reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    TRUE            reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    FALSE           reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    RBRACE          reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    CASE            reduce using rule 81 (assignment_statement -> increment SEMICOLON .)
    DEFAULT         reduce using rule 81 (assignment_statement -> increment SEMICOLON .)


state 59

    (91) print_statement -> SOP LPAREN . expression RPAREN SEMICOLON
    (92) print_statement -> SOP LPAREN . RPAREN SEMICOLON
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    RPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 87
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expression                     shift and go to state 119
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 60

    (7) this_assign -> THIS IDENTIFIER . ASSIGN IDENTIFIER SEMICOLON

    ASSIGN          shift and go to state 121


state 61

    (45) switch -> SWITCH LPAREN . IDENTIFIER RPAREN LBRACE cases RBRACE

    IDENTIFIER      shift and go to state 122


state 62

    (109) return -> RETURN IDENTIFIER . SEMICOLON
    (94) expression -> IDENTIFIER .
    (95) expression -> IDENTIFIER . LPAREN RPAREN
    (97) expression -> IDENTIFIER . LPAREN values RPAREN
    (93) array_access -> IDENTIFIER . arrays
    (62) arrays -> . LBRACKET RBRACKET
    (63) arrays -> . LBRACKET RBRACKET arrays
    (64) arrays -> . LBRACKET expression RBRACKET arrays
    (65) arrays -> . LBRACKET expression RBRACKET

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 123
    PLUS            reduce using rule 94 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 94 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 94 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 94 (expression -> IDENTIFIER .)
    LPAREN          shift and go to state 124
    LBRACKET        shift and go to state 51

  ! SEMICOLON       [ reduce using rule 94 (expression -> IDENTIFIER .) ]

    arrays                         shift and go to state 125

state 63

    (110) return -> RETURN SEMICOLON .

    ACCESS          reduce using rule 110 (return -> RETURN SEMICOLON .)
    CLASS           reduce using rule 110 (return -> RETURN SEMICOLON .)
    PASS            reduce using rule 110 (return -> RETURN SEMICOLON .)
    BREAK           reduce using rule 110 (return -> RETURN SEMICOLON .)
    RETURNTYPE      reduce using rule 110 (return -> RETURN SEMICOLON .)
    IDENTIFIER      reduce using rule 110 (return -> RETURN SEMICOLON .)
    PLUS            reduce using rule 110 (return -> RETURN SEMICOLON .)
    MINUS           reduce using rule 110 (return -> RETURN SEMICOLON .)
    SOP             reduce using rule 110 (return -> RETURN SEMICOLON .)
    THIS            reduce using rule 110 (return -> RETURN SEMICOLON .)
    SWITCH          reduce using rule 110 (return -> RETURN SEMICOLON .)
    RETURN          reduce using rule 110 (return -> RETURN SEMICOLON .)
    WHILE           reduce using rule 110 (return -> RETURN SEMICOLON .)
    FOR             reduce using rule 110 (return -> RETURN SEMICOLON .)
    TRY             reduce using rule 110 (return -> RETURN SEMICOLON .)
    STATIC          reduce using rule 110 (return -> RETURN SEMICOLON .)
    IF              reduce using rule 110 (return -> RETURN SEMICOLON .)
    $end            reduce using rule 110 (return -> RETURN SEMICOLON .)
    RBRACE          reduce using rule 110 (return -> RETURN SEMICOLON .)
    CASE            reduce using rule 110 (return -> RETURN SEMICOLON .)
    DEFAULT         reduce using rule 110 (return -> RETURN SEMICOLON .)


state 64

    (111) return -> RETURN expression . SEMICOLON
    (100) expression -> expression . PLUS
    (101) expression -> expression . MINUS
    (102) expression -> expression . PLUS expression
    (103) expression -> expression . MINUS expression
    (104) expression -> expression . TIMES expression
    (105) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 126
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    TIMES           shift and go to state 129
    DIVIDE          shift and go to state 130


state 65

    (96) expression -> LPAREN . expression RPAREN
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    IDENTIFIER      shift and go to state 87
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expression                     shift and go to state 131
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 66

    (98) expression -> NUMBER .

    SEMICOLON       reduce using rule 98 (expression -> NUMBER .)
    PLUS            reduce using rule 98 (expression -> NUMBER .)
    MINUS           reduce using rule 98 (expression -> NUMBER .)
    TIMES           reduce using rule 98 (expression -> NUMBER .)
    DIVIDE          reduce using rule 98 (expression -> NUMBER .)
    LOGICAL         reduce using rule 98 (expression -> NUMBER .)
    RPAREN          reduce using rule 98 (expression -> NUMBER .)
    RBRACKET        reduce using rule 98 (expression -> NUMBER .)
    COMMA           reduce using rule 98 (expression -> NUMBER .)


state 67

    (99) expression -> array_access .

    SEMICOLON       reduce using rule 99 (expression -> array_access .)
    PLUS            reduce using rule 99 (expression -> array_access .)
    MINUS           reduce using rule 99 (expression -> array_access .)
    TIMES           reduce using rule 99 (expression -> array_access .)
    DIVIDE          reduce using rule 99 (expression -> array_access .)
    LOGICAL         reduce using rule 99 (expression -> array_access .)
    RPAREN          reduce using rule 99 (expression -> array_access .)
    RBRACKET        reduce using rule 99 (expression -> array_access .)
    COMMA           reduce using rule 99 (expression -> array_access .)


state 68

    (106) expression -> STRING .

    SEMICOLON       reduce using rule 106 (expression -> STRING .)
    PLUS            reduce using rule 106 (expression -> STRING .)
    MINUS           reduce using rule 106 (expression -> STRING .)
    TIMES           reduce using rule 106 (expression -> STRING .)
    DIVIDE          reduce using rule 106 (expression -> STRING .)
    LOGICAL         reduce using rule 106 (expression -> STRING .)
    RPAREN          reduce using rule 106 (expression -> STRING .)
    RBRACKET        reduce using rule 106 (expression -> STRING .)
    COMMA           reduce using rule 106 (expression -> STRING .)


state 69

    (107) expression -> CHAR .

    SEMICOLON       reduce using rule 107 (expression -> CHAR .)
    PLUS            reduce using rule 107 (expression -> CHAR .)
    MINUS           reduce using rule 107 (expression -> CHAR .)
    TIMES           reduce using rule 107 (expression -> CHAR .)
    DIVIDE          reduce using rule 107 (expression -> CHAR .)
    LOGICAL         reduce using rule 107 (expression -> CHAR .)
    RPAREN          reduce using rule 107 (expression -> CHAR .)
    RBRACKET        reduce using rule 107 (expression -> CHAR .)
    COMMA           reduce using rule 107 (expression -> CHAR .)


state 70

    (108) expression -> bool .

    SEMICOLON       reduce using rule 108 (expression -> bool .)
    PLUS            reduce using rule 108 (expression -> bool .)
    MINUS           reduce using rule 108 (expression -> bool .)
    TIMES           reduce using rule 108 (expression -> bool .)
    DIVIDE          reduce using rule 108 (expression -> bool .)
    LOGICAL         reduce using rule 108 (expression -> bool .)
    RPAREN          reduce using rule 108 (expression -> bool .)
    RBRACKET        reduce using rule 108 (expression -> bool .)
    COMMA           reduce using rule 108 (expression -> bool .)


state 71

    (66) bool -> TRUE .

    SEMICOLON       reduce using rule 66 (bool -> TRUE .)
    PLUS            reduce using rule 66 (bool -> TRUE .)
    MINUS           reduce using rule 66 (bool -> TRUE .)
    TIMES           reduce using rule 66 (bool -> TRUE .)
    DIVIDE          reduce using rule 66 (bool -> TRUE .)
    LOGICAL         reduce using rule 66 (bool -> TRUE .)
    RPAREN          reduce using rule 66 (bool -> TRUE .)
    RBRACKET        reduce using rule 66 (bool -> TRUE .)
    COMMA           reduce using rule 66 (bool -> TRUE .)


state 72

    (67) bool -> FALSE .

    SEMICOLON       reduce using rule 67 (bool -> FALSE .)
    PLUS            reduce using rule 67 (bool -> FALSE .)
    MINUS           reduce using rule 67 (bool -> FALSE .)
    TIMES           reduce using rule 67 (bool -> FALSE .)
    DIVIDE          reduce using rule 67 (bool -> FALSE .)
    LOGICAL         reduce using rule 67 (bool -> FALSE .)
    RPAREN          reduce using rule 67 (bool -> FALSE .)
    RBRACKET        reduce using rule 67 (bool -> FALSE .)
    COMMA           reduce using rule 67 (bool -> FALSE .)


state 73

    (50) while -> WHILE LPAREN . params RPAREN LBRACE statements RBRACE
    (51) params -> . param
    (52) params -> . param LOGICAL params
    (53) param -> . increment
    (54) param -> . expression
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    IDENTIFIER      shift and go to state 98
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    params                         shift and go to state 132
    param                          shift and go to state 101
    increment                      shift and go to state 102
    expression                     shift and go to state 103
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 74

    (124) for -> FOR LPAREN . assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS

    RETURNTYPE      shift and go to state 134
    IDENTIFIER      shift and go to state 38
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24

    assignment_statement           shift and go to state 133
    increment                      shift and go to state 25

state 75

    (129) try_catch -> TRY LBRACE . statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> TRY LBRACE . statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (26) statements -> . statement
    (27) statements -> . statement statements
    (30) statement -> . assignment_statement
    (31) statement -> . class_statement
    (32) statement -> . print_statement
    (33) statement -> . this_assign
    (34) statement -> . switch
    (35) statement -> . return
    (36) statement -> . while
    (37) statement -> . for
    (38) statement -> . try_catch
    (39) statement -> . PASS SEMICOLON
    (40) statement -> . ACCESS assignment_statement
    (41) statement -> . function
    (42) statement -> . function_call
    (43) statement -> . ifblock
    (44) statement -> . BREAK SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (91) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (7) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (45) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (109) return -> . RETURN IDENTIFIER SEMICOLON
    (110) return -> . RETURN SEMICOLON
    (111) return -> . RETURN expression SEMICOLON
    (50) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (124) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (129) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (28) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (29) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (116) ifblock -> . if
    (117) ifblock -> . if else
    (118) ifblock -> . if else_if
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 17
    ACCESS          shift and go to state 137
    BREAK           shift and go to state 21
    RETURNTYPE      shift and go to state 22
    IDENTIFIER      shift and go to state 7
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    SOP             shift and go to state 26
    THIS            shift and go to state 27
    SWITCH          shift and go to state 28
    RETURN          shift and go to state 29
    WHILE           shift and go to state 30
    FOR             shift and go to state 31
    TRY             shift and go to state 32
    STATIC          shift and go to state 33
    IF              shift and go to state 35

    statements                     shift and go to state 135
    statement                      shift and go to state 136
    assignment_statement           shift and go to state 8
    class_statement                shift and go to state 9
    print_statement                shift and go to state 10
    this_assign                    shift and go to state 11
    switch                         shift and go to state 12
    return                         shift and go to state 13
    while                          shift and go to state 14
    for                            shift and go to state 15
    try_catch                      shift and go to state 16
    function                       shift and go to state 18
    function_call                  shift and go to state 19
    ifblock                        shift and go to state 20
    increment                      shift and go to state 25
    if                             shift and go to state 34

state 76

    (18) function -> STATIC RETURNTYPE . IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> STATIC RETURNTYPE . IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE

    IDENTIFIER      shift and go to state 138


state 77

    (117) ifblock -> if else .

    ACCESS          reduce using rule 117 (ifblock -> if else .)
    CLASS           reduce using rule 117 (ifblock -> if else .)
    PASS            reduce using rule 117 (ifblock -> if else .)
    BREAK           reduce using rule 117 (ifblock -> if else .)
    RETURNTYPE      reduce using rule 117 (ifblock -> if else .)
    IDENTIFIER      reduce using rule 117 (ifblock -> if else .)
    PLUS            reduce using rule 117 (ifblock -> if else .)
    MINUS           reduce using rule 117 (ifblock -> if else .)
    SOP             reduce using rule 117 (ifblock -> if else .)
    THIS            reduce using rule 117 (ifblock -> if else .)
    SWITCH          reduce using rule 117 (ifblock -> if else .)
    RETURN          reduce using rule 117 (ifblock -> if else .)
    WHILE           reduce using rule 117 (ifblock -> if else .)
    FOR             reduce using rule 117 (ifblock -> if else .)
    TRY             reduce using rule 117 (ifblock -> if else .)
    STATIC          reduce using rule 117 (ifblock -> if else .)
    IF              reduce using rule 117 (ifblock -> if else .)
    $end            reduce using rule 117 (ifblock -> if else .)
    RBRACE          reduce using rule 117 (ifblock -> if else .)
    CASE            reduce using rule 117 (ifblock -> if else .)
    DEFAULT         reduce using rule 117 (ifblock -> if else .)


state 78

    (118) ifblock -> if else_if .

    ACCESS          reduce using rule 118 (ifblock -> if else_if .)
    CLASS           reduce using rule 118 (ifblock -> if else_if .)
    PASS            reduce using rule 118 (ifblock -> if else_if .)
    BREAK           reduce using rule 118 (ifblock -> if else_if .)
    RETURNTYPE      reduce using rule 118 (ifblock -> if else_if .)
    IDENTIFIER      reduce using rule 118 (ifblock -> if else_if .)
    PLUS            reduce using rule 118 (ifblock -> if else_if .)
    MINUS           reduce using rule 118 (ifblock -> if else_if .)
    SOP             reduce using rule 118 (ifblock -> if else_if .)
    THIS            reduce using rule 118 (ifblock -> if else_if .)
    SWITCH          reduce using rule 118 (ifblock -> if else_if .)
    RETURN          reduce using rule 118 (ifblock -> if else_if .)
    WHILE           reduce using rule 118 (ifblock -> if else_if .)
    FOR             reduce using rule 118 (ifblock -> if else_if .)
    TRY             reduce using rule 118 (ifblock -> if else_if .)
    STATIC          reduce using rule 118 (ifblock -> if else_if .)
    IF              reduce using rule 118 (ifblock -> if else_if .)
    $end            reduce using rule 118 (ifblock -> if else_if .)
    RBRACE          reduce using rule 118 (ifblock -> if else_if .)
    CASE            reduce using rule 118 (ifblock -> if else_if .)
    DEFAULT         reduce using rule 118 (ifblock -> if else_if .)


state 79

    (120) else -> ELSE . LBRACE statements RBRACE
    (121) else_if -> ELSE . if
    (122) else_if -> ELSE . if else_if
    (123) else_if -> ELSE . if else
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    LBRACE          shift and go to state 139
    IF              shift and go to state 35

    if                             shift and go to state 140

state 80

    (119) if -> IF LPAREN . params RPAREN LBRACE statements RBRACE
    (51) params -> . param
    (52) params -> . param LOGICAL params
    (53) param -> . increment
    (54) param -> . expression
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    IDENTIFIER      shift and go to state 98
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    params                         shift and go to state 141
    param                          shift and go to state 101
    increment                      shift and go to state 102
    expression                     shift and go to state 103
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 81

    (5) class -> ACCESS CLASS IDENTIFIER . LBRACE stats RBRACE

    LBRACE          shift and go to state 142


state 82

    (16) function -> ACCESS RETURNTYPE IDENTIFIER . LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> ACCESS RETURNTYPE IDENTIFIER . LPAREN RPAREN LBRACE statements RBRACE
    (68) assignment_statement -> RETURNTYPE IDENTIFIER . ASSIGN expression SEMICOLON
    (69) assignment_statement -> RETURNTYPE IDENTIFIER . SEMICOLON
    (70) assignment_statement -> RETURNTYPE IDENTIFIER . PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> RETURNTYPE IDENTIFIER . MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> RETURNTYPE IDENTIFIER . TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> RETURNTYPE IDENTIFIER . DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> RETURNTYPE IDENTIFIER . PLUS PLUS SEMICOLON
    (85) assignment_statement -> RETURNTYPE IDENTIFIER . arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> RETURNTYPE IDENTIFIER . arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (62) arrays -> . LBRACKET RBRACKET
    (63) arrays -> . LBRACKET RBRACKET arrays
    (64) arrays -> . LBRACKET expression RBRACKET arrays
    (65) arrays -> . LBRACKET expression RBRACKET

    LPAREN          shift and go to state 143
    ASSIGN          shift and go to state 108
    SEMICOLON       shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    TIMES           shift and go to state 112
    DIVIDE          shift and go to state 113
    LBRACKET        shift and go to state 51

    arrays                         shift and go to state 114

state 83

    (20) function -> ACCESS STATIC RETURNTYPE . IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> ACCESS STATIC RETURNTYPE . IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE

    IDENTIFIER      shift and go to state 144


state 84

    (6) class -> CLASS IDENTIFIER LBRACE . stats RBRACE
    (8) stats -> . stat
    (9) stats -> . stat stats
    (10) stat -> . constructor
    (11) stat -> . statement
    (12) constructor -> . ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (13) constructor -> . ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (30) statement -> . assignment_statement
    (31) statement -> . class_statement
    (32) statement -> . print_statement
    (33) statement -> . this_assign
    (34) statement -> . switch
    (35) statement -> . return
    (36) statement -> . while
    (37) statement -> . for
    (38) statement -> . try_catch
    (39) statement -> . PASS SEMICOLON
    (40) statement -> . ACCESS assignment_statement
    (41) statement -> . function
    (42) statement -> . function_call
    (43) statement -> . ifblock
    (44) statement -> . BREAK SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (91) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (7) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (45) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (109) return -> . RETURN IDENTIFIER SEMICOLON
    (110) return -> . RETURN SEMICOLON
    (111) return -> . RETURN expression SEMICOLON
    (50) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (124) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (129) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (28) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (29) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (116) ifblock -> . if
    (117) ifblock -> . if else
    (118) ifblock -> . if else_if
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    ACCESS          shift and go to state 149
    PASS            shift and go to state 17
    BREAK           shift and go to state 21
    RETURNTYPE      shift and go to state 22
    IDENTIFIER      shift and go to state 7
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    SOP             shift and go to state 26
    THIS            shift and go to state 27
    SWITCH          shift and go to state 28
    RETURN          shift and go to state 29
    WHILE           shift and go to state 30
    FOR             shift and go to state 31
    TRY             shift and go to state 32
    STATIC          shift and go to state 33
    IF              shift and go to state 35

    stats                          shift and go to state 145
    stat                           shift and go to state 146
    constructor                    shift and go to state 147
    statement                      shift and go to state 148
    assignment_statement           shift and go to state 8
    class_statement                shift and go to state 9
    print_statement                shift and go to state 10
    this_assign                    shift and go to state 11
    switch                         shift and go to state 12
    return                         shift and go to state 13
    while                          shift and go to state 14
    for                            shift and go to state 15
    try_catch                      shift and go to state 16
    function                       shift and go to state 18
    function_call                  shift and go to state 19
    ifblock                        shift and go to state 20
    increment                      shift and go to state 25
    if                             shift and go to state 34

state 85

    (57) class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .

    ACCESS          reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    CLASS           reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    PASS            reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    BREAK           reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    RETURNTYPE      reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    PLUS            reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    MINUS           reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    SOP             reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    THIS            reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    SWITCH          reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    TRY             reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    STATIC          reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    IF              reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    $end            reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    CASE            reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    DEFAULT         reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)


state 86

    (58) class_statement -> IDENTIFIER IDENTIFIER ASSIGN . NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> IDENTIFIER IDENTIFIER ASSIGN . NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> IDENTIFIER IDENTIFIER ASSIGN . NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> IDENTIFIER IDENTIFIER ASSIGN . NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON

    NEW             shift and go to state 150


state 87

    (94) expression -> IDENTIFIER .
    (95) expression -> IDENTIFIER . LPAREN RPAREN
    (97) expression -> IDENTIFIER . LPAREN values RPAREN
    (93) array_access -> IDENTIFIER . arrays
    (62) arrays -> . LBRACKET RBRACKET
    (63) arrays -> . LBRACKET RBRACKET arrays
    (64) arrays -> . LBRACKET expression RBRACKET arrays
    (65) arrays -> . LBRACKET expression RBRACKET

    SEMICOLON       reduce using rule 94 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 94 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 94 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 94 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 94 (expression -> IDENTIFIER .)
    RBRACKET        reduce using rule 94 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 94 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 94 (expression -> IDENTIFIER .)
    LOGICAL         reduce using rule 94 (expression -> IDENTIFIER .)
    LPAREN          shift and go to state 124
    LBRACKET        shift and go to state 51

    arrays                         shift and go to state 125

state 88

    (75) assignment_statement -> IDENTIFIER ASSIGN expression . SEMICOLON
    (100) expression -> expression . PLUS
    (101) expression -> expression . MINUS
    (102) expression -> expression . PLUS expression
    (103) expression -> expression . MINUS expression
    (104) expression -> expression . TIMES expression
    (105) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 151
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    TIMES           shift and go to state 129
    DIVIDE          shift and go to state 130


state 89

    (127) increment -> IDENTIFIER PLUS PLUS .

    SEMICOLON       reduce using rule 127 (increment -> IDENTIFIER PLUS PLUS .)
    LOGICAL         reduce using rule 127 (increment -> IDENTIFIER PLUS PLUS .)
    RPAREN          reduce using rule 127 (increment -> IDENTIFIER PLUS PLUS .)


state 90

    (76) assignment_statement -> IDENTIFIER PLUS ASSIGN . expression SEMICOLON
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    IDENTIFIER      shift and go to state 87
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expression                     shift and go to state 152
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 91

    (128) increment -> IDENTIFIER MINUS MINUS .

    SEMICOLON       reduce using rule 128 (increment -> IDENTIFIER MINUS MINUS .)
    LOGICAL         reduce using rule 128 (increment -> IDENTIFIER MINUS MINUS .)
    RPAREN          reduce using rule 128 (increment -> IDENTIFIER MINUS MINUS .)


state 92

    (77) assignment_statement -> IDENTIFIER MINUS ASSIGN . expression SEMICOLON
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    IDENTIFIER      shift and go to state 87
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expression                     shift and go to state 153
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 93

    (78) assignment_statement -> IDENTIFIER TIMES ASSIGN . expression SEMICOLON
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    IDENTIFIER      shift and go to state 87
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expression                     shift and go to state 154
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 94

    (79) assignment_statement -> IDENTIFIER DIVIDE ASSIGN . expression SEMICOLON
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    IDENTIFIER      shift and go to state 87
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expression                     shift and go to state 155
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 95

    (80) assignment_statement -> IDENTIFIER arrays PLUS . PLUS SEMICOLON

    PLUS            shift and go to state 156


state 96

    (82) assignment_statement -> IDENTIFIER arrays MINUS . MINUS SEMICOLON

    MINUS           shift and go to state 157


state 97

    (87) assignment_statement -> IDENTIFIER arrays ASSIGN . expression SEMICOLON
    (88) assignment_statement -> IDENTIFIER arrays ASSIGN . LBRACE items RBRACE SEMICOLON
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    LBRACE          shift and go to state 159
    IDENTIFIER      shift and go to state 87
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expression                     shift and go to state 158
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 98

    (127) increment -> IDENTIFIER . PLUS PLUS
    (128) increment -> IDENTIFIER . MINUS MINUS
    (94) expression -> IDENTIFIER .
    (95) expression -> IDENTIFIER . LPAREN RPAREN
    (97) expression -> IDENTIFIER . LPAREN values RPAREN
    (93) array_access -> IDENTIFIER . arrays
    (62) arrays -> . LBRACKET RBRACKET
    (63) arrays -> . LBRACKET RBRACKET arrays
    (64) arrays -> . LBRACKET expression RBRACKET arrays
    (65) arrays -> . LBRACKET expression RBRACKET

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    PLUS            shift and go to state 160
    MINUS           shift and go to state 161
    TIMES           reduce using rule 94 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 94 (expression -> IDENTIFIER .)
    LOGICAL         reduce using rule 94 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 94 (expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 94 (expression -> IDENTIFIER .)
    LPAREN          shift and go to state 124
    LBRACKET        shift and go to state 51

  ! PLUS            [ reduce using rule 94 (expression -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 94 (expression -> IDENTIFIER .) ]

    arrays                         shift and go to state 125

state 99

    (28) function_call -> IDENTIFIER LPAREN params . RPAREN SEMICOLON

    RPAREN          shift and go to state 162


state 100

    (29) function_call -> IDENTIFIER LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 163


state 101

    (51) params -> param .
    (52) params -> param . LOGICAL params

    RPAREN          reduce using rule 51 (params -> param .)
    SEMICOLON       reduce using rule 51 (params -> param .)
    LOGICAL         shift and go to state 164


state 102

    (53) param -> increment .

    LOGICAL         reduce using rule 53 (param -> increment .)
    RPAREN          reduce using rule 53 (param -> increment .)
    SEMICOLON       reduce using rule 53 (param -> increment .)


state 103

    (54) param -> expression .
    (100) expression -> expression . PLUS
    (101) expression -> expression . MINUS
    (102) expression -> expression . PLUS expression
    (103) expression -> expression . MINUS expression
    (104) expression -> expression . TIMES expression
    (105) expression -> expression . DIVIDE expression

    LOGICAL         reduce using rule 54 (param -> expression .)
    RPAREN          reduce using rule 54 (param -> expression .)
    SEMICOLON       reduce using rule 54 (param -> expression .)
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    TIMES           shift and go to state 129
    DIVIDE          shift and go to state 130


state 104

    (125) increment -> PLUS . PLUS IDENTIFIER

    PLUS            shift and go to state 165


state 105

    (126) increment -> MINUS . MINUS IDENTIFIER

    MINUS           shift and go to state 166


state 106

    (62) arrays -> LBRACKET RBRACKET .
    (63) arrays -> LBRACKET RBRACKET . arrays
    (62) arrays -> . LBRACKET RBRACKET
    (63) arrays -> . LBRACKET RBRACKET arrays
    (64) arrays -> . LBRACKET expression RBRACKET arrays
    (65) arrays -> . LBRACKET expression RBRACKET

    PLUS            reduce using rule 62 (arrays -> LBRACKET RBRACKET .)
    MINUS           reduce using rule 62 (arrays -> LBRACKET RBRACKET .)
    ASSIGN          reduce using rule 62 (arrays -> LBRACKET RBRACKET .)
    IDENTIFIER      reduce using rule 62 (arrays -> LBRACKET RBRACKET .)
    SEMICOLON       reduce using rule 62 (arrays -> LBRACKET RBRACKET .)
    TIMES           reduce using rule 62 (arrays -> LBRACKET RBRACKET .)
    DIVIDE          reduce using rule 62 (arrays -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 62 (arrays -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 62 (arrays -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 62 (arrays -> LBRACKET RBRACKET .)
    LOGICAL         reduce using rule 62 (arrays -> LBRACKET RBRACKET .)
    LBRACKET        shift and go to state 51

    arrays                         shift and go to state 167

state 107

    (64) arrays -> LBRACKET expression . RBRACKET arrays
    (65) arrays -> LBRACKET expression . RBRACKET
    (100) expression -> expression . PLUS
    (101) expression -> expression . MINUS
    (102) expression -> expression . PLUS expression
    (103) expression -> expression . MINUS expression
    (104) expression -> expression . TIMES expression
    (105) expression -> expression . DIVIDE expression

    RBRACKET        shift and go to state 168
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    TIMES           shift and go to state 129
    DIVIDE          shift and go to state 130


state 108

    (68) assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN . expression SEMICOLON
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    IDENTIFIER      shift and go to state 87
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expression                     shift and go to state 169
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 109

    (69) assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .

    ACCESS          reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    CLASS           reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    PASS            reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    BREAK           reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    RETURNTYPE      reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    PLUS            reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    MINUS           reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    SOP             reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    THIS            reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    SWITCH          reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    TRY             reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    STATIC          reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    IF              reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    $end            reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    LPAREN          reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    NUMBER          reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    STRING          reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    CHAR            reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    TRUE            reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    FALSE           reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    CASE            reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    DEFAULT         reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)


state 110

    (70) assignment_statement -> RETURNTYPE IDENTIFIER PLUS . ASSIGN expression SEMICOLON
    (74) assignment_statement -> RETURNTYPE IDENTIFIER PLUS . PLUS SEMICOLON

    ASSIGN          shift and go to state 171
    PLUS            shift and go to state 170


state 111

    (71) assignment_statement -> RETURNTYPE IDENTIFIER MINUS . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 172


state 112

    (72) assignment_statement -> RETURNTYPE IDENTIFIER TIMES . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 173


state 113

    (73) assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 174


state 114

    (85) assignment_statement -> RETURNTYPE IDENTIFIER arrays . ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> RETURNTYPE IDENTIFIER arrays . ASSIGN NEW RETURNTYPE arrays SEMICOLON

    ASSIGN          shift and go to state 175


state 115

    (14) function -> RETURNTYPE IDENTIFIER LPAREN . parameters RPAREN LBRACE statements RBRACE
    (15) function -> RETURNTYPE IDENTIFIER LPAREN . RPAREN LBRACE statements RBRACE
    (22) parameters -> . parameter
    (23) parameters -> . parameter COMMA parameters
    (24) parameter -> . RETURNTYPE IDENTIFIER
    (25) parameter -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER

    RPAREN          shift and go to state 178
    RETURNTYPE      shift and go to state 176

    parameters                     shift and go to state 177
    parameter                      shift and go to state 179

state 116

    (86) assignment_statement -> RETURNTYPE arrays IDENTIFIER . ASSIGN LBRACE items RBRACE SEMICOLON
    (90) assignment_statement -> RETURNTYPE arrays IDENTIFIER . ASSIGN NEW RETURNTYPE arrays SEMICOLON

    ASSIGN          shift and go to state 180


state 117

    (83) assignment_statement -> PLUS PLUS IDENTIFIER . arrays SEMICOLON
    (125) increment -> PLUS PLUS IDENTIFIER .
    (62) arrays -> . LBRACKET RBRACKET
    (63) arrays -> . LBRACKET RBRACKET arrays
    (64) arrays -> . LBRACKET expression RBRACKET arrays
    (65) arrays -> . LBRACKET expression RBRACKET

    SEMICOLON       reduce using rule 125 (increment -> PLUS PLUS IDENTIFIER .)
    LBRACKET        shift and go to state 51

    arrays                         shift and go to state 181

state 118

    (84) assignment_statement -> MINUS MINUS IDENTIFIER . arrays SEMICOLON
    (126) increment -> MINUS MINUS IDENTIFIER .
    (62) arrays -> . LBRACKET RBRACKET
    (63) arrays -> . LBRACKET RBRACKET arrays
    (64) arrays -> . LBRACKET expression RBRACKET arrays
    (65) arrays -> . LBRACKET expression RBRACKET

    SEMICOLON       reduce using rule 126 (increment -> MINUS MINUS IDENTIFIER .)
    LBRACKET        shift and go to state 51

    arrays                         shift and go to state 182

state 119

    (91) print_statement -> SOP LPAREN expression . RPAREN SEMICOLON
    (100) expression -> expression . PLUS
    (101) expression -> expression . MINUS
    (102) expression -> expression . PLUS expression
    (103) expression -> expression . MINUS expression
    (104) expression -> expression . TIMES expression
    (105) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 183
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    TIMES           shift and go to state 129
    DIVIDE          shift and go to state 130


state 120

    (92) print_statement -> SOP LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 184


state 121

    (7) this_assign -> THIS IDENTIFIER ASSIGN . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 185


state 122

    (45) switch -> SWITCH LPAREN IDENTIFIER . RPAREN LBRACE cases RBRACE

    RPAREN          shift and go to state 186


state 123

    (109) return -> RETURN IDENTIFIER SEMICOLON .

    ACCESS          reduce using rule 109 (return -> RETURN IDENTIFIER SEMICOLON .)
    CLASS           reduce using rule 109 (return -> RETURN IDENTIFIER SEMICOLON .)
    PASS            reduce using rule 109 (return -> RETURN IDENTIFIER SEMICOLON .)
    BREAK           reduce using rule 109 (return -> RETURN IDENTIFIER SEMICOLON .)
    RETURNTYPE      reduce using rule 109 (return -> RETURN IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 109 (return -> RETURN IDENTIFIER SEMICOLON .)
    PLUS            reduce using rule 109 (return -> RETURN IDENTIFIER SEMICOLON .)
    MINUS           reduce using rule 109 (return -> RETURN IDENTIFIER SEMICOLON .)
    SOP             reduce using rule 109 (return -> RETURN IDENTIFIER SEMICOLON .)
    THIS            reduce using rule 109 (return -> RETURN IDENTIFIER SEMICOLON .)
    SWITCH          reduce using rule 109 (return -> RETURN IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 109 (return -> RETURN IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 109 (return -> RETURN IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 109 (return -> RETURN IDENTIFIER SEMICOLON .)
    TRY             reduce using rule 109 (return -> RETURN IDENTIFIER SEMICOLON .)
    STATIC          reduce using rule 109 (return -> RETURN IDENTIFIER SEMICOLON .)
    IF              reduce using rule 109 (return -> RETURN IDENTIFIER SEMICOLON .)
    $end            reduce using rule 109 (return -> RETURN IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 109 (return -> RETURN IDENTIFIER SEMICOLON .)
    CASE            reduce using rule 109 (return -> RETURN IDENTIFIER SEMICOLON .)
    DEFAULT         reduce using rule 109 (return -> RETURN IDENTIFIER SEMICOLON .)


state 124

    (95) expression -> IDENTIFIER LPAREN . RPAREN
    (97) expression -> IDENTIFIER LPAREN . values RPAREN
    (55) values -> . expression
    (56) values -> . expression COMMA values
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    RPAREN          shift and go to state 187
    IDENTIFIER      shift and go to state 87
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    values                         shift and go to state 188
    expression                     shift and go to state 189
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 125

    (93) array_access -> IDENTIFIER arrays .

    SEMICOLON       reduce using rule 93 (array_access -> IDENTIFIER arrays .)
    PLUS            reduce using rule 93 (array_access -> IDENTIFIER arrays .)
    MINUS           reduce using rule 93 (array_access -> IDENTIFIER arrays .)
    TIMES           reduce using rule 93 (array_access -> IDENTIFIER arrays .)
    DIVIDE          reduce using rule 93 (array_access -> IDENTIFIER arrays .)
    LOGICAL         reduce using rule 93 (array_access -> IDENTIFIER arrays .)
    RPAREN          reduce using rule 93 (array_access -> IDENTIFIER arrays .)
    RBRACKET        reduce using rule 93 (array_access -> IDENTIFIER arrays .)
    COMMA           reduce using rule 93 (array_access -> IDENTIFIER arrays .)


state 126

    (111) return -> RETURN expression SEMICOLON .

    ACCESS          reduce using rule 111 (return -> RETURN expression SEMICOLON .)
    CLASS           reduce using rule 111 (return -> RETURN expression SEMICOLON .)
    PASS            reduce using rule 111 (return -> RETURN expression SEMICOLON .)
    BREAK           reduce using rule 111 (return -> RETURN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 111 (return -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 111 (return -> RETURN expression SEMICOLON .)
    PLUS            reduce using rule 111 (return -> RETURN expression SEMICOLON .)
    MINUS           reduce using rule 111 (return -> RETURN expression SEMICOLON .)
    SOP             reduce using rule 111 (return -> RETURN expression SEMICOLON .)
    THIS            reduce using rule 111 (return -> RETURN expression SEMICOLON .)
    SWITCH          reduce using rule 111 (return -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 111 (return -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 111 (return -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 111 (return -> RETURN expression SEMICOLON .)
    TRY             reduce using rule 111 (return -> RETURN expression SEMICOLON .)
    STATIC          reduce using rule 111 (return -> RETURN expression SEMICOLON .)
    IF              reduce using rule 111 (return -> RETURN expression SEMICOLON .)
    $end            reduce using rule 111 (return -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 111 (return -> RETURN expression SEMICOLON .)
    CASE            reduce using rule 111 (return -> RETURN expression SEMICOLON .)
    DEFAULT         reduce using rule 111 (return -> RETURN expression SEMICOLON .)


state 127

    (100) expression -> expression PLUS .
    (102) expression -> expression PLUS . expression
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    SEMICOLON       reduce using rule 100 (expression -> expression PLUS .)
    PLUS            reduce using rule 100 (expression -> expression PLUS .)
    MINUS           reduce using rule 100 (expression -> expression PLUS .)
    TIMES           reduce using rule 100 (expression -> expression PLUS .)
    DIVIDE          reduce using rule 100 (expression -> expression PLUS .)
    LOGICAL         reduce using rule 100 (expression -> expression PLUS .)
    RPAREN          reduce using rule 100 (expression -> expression PLUS .)
    RBRACKET        reduce using rule 100 (expression -> expression PLUS .)
    COMMA           reduce using rule 100 (expression -> expression PLUS .)
    IDENTIFIER      shift and go to state 87
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expression                     shift and go to state 190
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 128

    (101) expression -> expression MINUS .
    (103) expression -> expression MINUS . expression
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    SEMICOLON       reduce using rule 101 (expression -> expression MINUS .)
    PLUS            reduce using rule 101 (expression -> expression MINUS .)
    MINUS           reduce using rule 101 (expression -> expression MINUS .)
    TIMES           reduce using rule 101 (expression -> expression MINUS .)
    DIVIDE          reduce using rule 101 (expression -> expression MINUS .)
    LOGICAL         reduce using rule 101 (expression -> expression MINUS .)
    RPAREN          reduce using rule 101 (expression -> expression MINUS .)
    RBRACKET        reduce using rule 101 (expression -> expression MINUS .)
    COMMA           reduce using rule 101 (expression -> expression MINUS .)
    IDENTIFIER      shift and go to state 87
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expression                     shift and go to state 191
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 129

    (104) expression -> expression TIMES . expression
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    IDENTIFIER      shift and go to state 87
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expression                     shift and go to state 192
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 130

    (105) expression -> expression DIVIDE . expression
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    IDENTIFIER      shift and go to state 87
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expression                     shift and go to state 193
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 131

    (96) expression -> LPAREN expression . RPAREN
    (100) expression -> expression . PLUS
    (101) expression -> expression . MINUS
    (102) expression -> expression . PLUS expression
    (103) expression -> expression . MINUS expression
    (104) expression -> expression . TIMES expression
    (105) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 194
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    TIMES           shift and go to state 129
    DIVIDE          shift and go to state 130


state 132

    (50) while -> WHILE LPAREN params . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 195


state 133

    (124) for -> FOR LPAREN assignment_statement . params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (51) params -> . param
    (52) params -> . param LOGICAL params
    (53) param -> . increment
    (54) param -> . expression
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    IDENTIFIER      shift and go to state 98
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    params                         shift and go to state 196
    increment                      shift and go to state 102
    param                          shift and go to state 101
    expression                     shift and go to state 103
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 134

    (68) assignment_statement -> RETURNTYPE . IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> RETURNTYPE . IDENTIFIER SEMICOLON
    (70) assignment_statement -> RETURNTYPE . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> RETURNTYPE . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> RETURNTYPE . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> RETURNTYPE . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> RETURNTYPE . IDENTIFIER PLUS PLUS SEMICOLON
    (85) assignment_statement -> RETURNTYPE . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> RETURNTYPE . arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> RETURNTYPE . IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> RETURNTYPE . arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (62) arrays -> . LBRACKET RBRACKET
    (63) arrays -> . LBRACKET RBRACKET arrays
    (64) arrays -> . LBRACKET expression RBRACKET arrays
    (65) arrays -> . LBRACKET expression RBRACKET

    IDENTIFIER      shift and go to state 197
    LBRACKET        shift and go to state 51

    arrays                         shift and go to state 55

state 135

    (129) try_catch -> TRY LBRACE statements . RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> TRY LBRACE statements . RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

    RBRACE          shift and go to state 198


state 136

    (26) statements -> statement .
    (27) statements -> statement . statements
    (26) statements -> . statement
    (27) statements -> . statement statements
    (30) statement -> . assignment_statement
    (31) statement -> . class_statement
    (32) statement -> . print_statement
    (33) statement -> . this_assign
    (34) statement -> . switch
    (35) statement -> . return
    (36) statement -> . while
    (37) statement -> . for
    (38) statement -> . try_catch
    (39) statement -> . PASS SEMICOLON
    (40) statement -> . ACCESS assignment_statement
    (41) statement -> . function
    (42) statement -> . function_call
    (43) statement -> . ifblock
    (44) statement -> . BREAK SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (91) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (7) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (45) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (109) return -> . RETURN IDENTIFIER SEMICOLON
    (110) return -> . RETURN SEMICOLON
    (111) return -> . RETURN expression SEMICOLON
    (50) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (124) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (129) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (28) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (29) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (116) ifblock -> . if
    (117) ifblock -> . if else
    (118) ifblock -> . if else_if
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    RBRACE          reduce using rule 26 (statements -> statement .)
    CASE            reduce using rule 26 (statements -> statement .)
    DEFAULT         reduce using rule 26 (statements -> statement .)
    PASS            shift and go to state 17
    ACCESS          shift and go to state 137
    BREAK           shift and go to state 21
    RETURNTYPE      shift and go to state 22
    IDENTIFIER      shift and go to state 7
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    SOP             shift and go to state 26
    THIS            shift and go to state 27
    SWITCH          shift and go to state 28
    RETURN          shift and go to state 29
    WHILE           shift and go to state 30
    FOR             shift and go to state 31
    TRY             shift and go to state 32
    STATIC          shift and go to state 33
    IF              shift and go to state 35

    statement                      shift and go to state 136
    statements                     shift and go to state 199
    assignment_statement           shift and go to state 8
    class_statement                shift and go to state 9
    print_statement                shift and go to state 10
    this_assign                    shift and go to state 11
    switch                         shift and go to state 12
    return                         shift and go to state 13
    while                          shift and go to state 14
    for                            shift and go to state 15
    try_catch                      shift and go to state 16
    function                       shift and go to state 18
    function_call                  shift and go to state 19
    ifblock                        shift and go to state 20
    increment                      shift and go to state 25
    if                             shift and go to state 34

state 137

    (40) statement -> ACCESS . assignment_statement
    (16) function -> ACCESS . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> ACCESS . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> ACCESS . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> ACCESS . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS

    RETURNTYPE      shift and go to state 40
    STATIC          shift and go to state 41
    IDENTIFIER      shift and go to state 38
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24

    assignment_statement           shift and go to state 39
    increment                      shift and go to state 25

state 138

    (18) function -> STATIC RETURNTYPE IDENTIFIER . LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> STATIC RETURNTYPE IDENTIFIER . LPAREN RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 200


state 139

    (120) else -> ELSE LBRACE . statements RBRACE
    (26) statements -> . statement
    (27) statements -> . statement statements
    (30) statement -> . assignment_statement
    (31) statement -> . class_statement
    (32) statement -> . print_statement
    (33) statement -> . this_assign
    (34) statement -> . switch
    (35) statement -> . return
    (36) statement -> . while
    (37) statement -> . for
    (38) statement -> . try_catch
    (39) statement -> . PASS SEMICOLON
    (40) statement -> . ACCESS assignment_statement
    (41) statement -> . function
    (42) statement -> . function_call
    (43) statement -> . ifblock
    (44) statement -> . BREAK SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (91) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (7) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (45) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (109) return -> . RETURN IDENTIFIER SEMICOLON
    (110) return -> . RETURN SEMICOLON
    (111) return -> . RETURN expression SEMICOLON
    (50) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (124) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (129) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (28) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (29) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (116) ifblock -> . if
    (117) ifblock -> . if else
    (118) ifblock -> . if else_if
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 17
    ACCESS          shift and go to state 137
    BREAK           shift and go to state 21
    RETURNTYPE      shift and go to state 22
    IDENTIFIER      shift and go to state 7
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    SOP             shift and go to state 26
    THIS            shift and go to state 27
    SWITCH          shift and go to state 28
    RETURN          shift and go to state 29
    WHILE           shift and go to state 30
    FOR             shift and go to state 31
    TRY             shift and go to state 32
    STATIC          shift and go to state 33
    IF              shift and go to state 35

    statements                     shift and go to state 201
    statement                      shift and go to state 136
    assignment_statement           shift and go to state 8
    class_statement                shift and go to state 9
    print_statement                shift and go to state 10
    this_assign                    shift and go to state 11
    switch                         shift and go to state 12
    return                         shift and go to state 13
    while                          shift and go to state 14
    for                            shift and go to state 15
    try_catch                      shift and go to state 16
    function                       shift and go to state 18
    function_call                  shift and go to state 19
    ifblock                        shift and go to state 20
    increment                      shift and go to state 25
    if                             shift and go to state 34

state 140

    (121) else_if -> ELSE if .
    (122) else_if -> ELSE if . else_if
    (123) else_if -> ELSE if . else
    (121) else_if -> . ELSE if
    (122) else_if -> . ELSE if else_if
    (123) else_if -> . ELSE if else
    (120) else -> . ELSE LBRACE statements RBRACE

    ACCESS          reduce using rule 121 (else_if -> ELSE if .)
    CLASS           reduce using rule 121 (else_if -> ELSE if .)
    PASS            reduce using rule 121 (else_if -> ELSE if .)
    BREAK           reduce using rule 121 (else_if -> ELSE if .)
    RETURNTYPE      reduce using rule 121 (else_if -> ELSE if .)
    IDENTIFIER      reduce using rule 121 (else_if -> ELSE if .)
    PLUS            reduce using rule 121 (else_if -> ELSE if .)
    MINUS           reduce using rule 121 (else_if -> ELSE if .)
    SOP             reduce using rule 121 (else_if -> ELSE if .)
    THIS            reduce using rule 121 (else_if -> ELSE if .)
    SWITCH          reduce using rule 121 (else_if -> ELSE if .)
    RETURN          reduce using rule 121 (else_if -> ELSE if .)
    WHILE           reduce using rule 121 (else_if -> ELSE if .)
    FOR             reduce using rule 121 (else_if -> ELSE if .)
    TRY             reduce using rule 121 (else_if -> ELSE if .)
    STATIC          reduce using rule 121 (else_if -> ELSE if .)
    IF              reduce using rule 121 (else_if -> ELSE if .)
    $end            reduce using rule 121 (else_if -> ELSE if .)
    RBRACE          reduce using rule 121 (else_if -> ELSE if .)
    CASE            reduce using rule 121 (else_if -> ELSE if .)
    DEFAULT         reduce using rule 121 (else_if -> ELSE if .)
    ELSE            shift and go to state 202

    else_if                        shift and go to state 203
    else                           shift and go to state 204

state 141

    (119) if -> IF LPAREN params . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 205


state 142

    (5) class -> ACCESS CLASS IDENTIFIER LBRACE . stats RBRACE
    (8) stats -> . stat
    (9) stats -> . stat stats
    (10) stat -> . constructor
    (11) stat -> . statement
    (12) constructor -> . ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (13) constructor -> . ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (30) statement -> . assignment_statement
    (31) statement -> . class_statement
    (32) statement -> . print_statement
    (33) statement -> . this_assign
    (34) statement -> . switch
    (35) statement -> . return
    (36) statement -> . while
    (37) statement -> . for
    (38) statement -> . try_catch
    (39) statement -> . PASS SEMICOLON
    (40) statement -> . ACCESS assignment_statement
    (41) statement -> . function
    (42) statement -> . function_call
    (43) statement -> . ifblock
    (44) statement -> . BREAK SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (91) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (7) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (45) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (109) return -> . RETURN IDENTIFIER SEMICOLON
    (110) return -> . RETURN SEMICOLON
    (111) return -> . RETURN expression SEMICOLON
    (50) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (124) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (129) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (28) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (29) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (116) ifblock -> . if
    (117) ifblock -> . if else
    (118) ifblock -> . if else_if
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    ACCESS          shift and go to state 149
    PASS            shift and go to state 17
    BREAK           shift and go to state 21
    RETURNTYPE      shift and go to state 22
    IDENTIFIER      shift and go to state 7
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    SOP             shift and go to state 26
    THIS            shift and go to state 27
    SWITCH          shift and go to state 28
    RETURN          shift and go to state 29
    WHILE           shift and go to state 30
    FOR             shift and go to state 31
    TRY             shift and go to state 32
    STATIC          shift and go to state 33
    IF              shift and go to state 35

    stats                          shift and go to state 206
    stat                           shift and go to state 146
    constructor                    shift and go to state 147
    statement                      shift and go to state 148
    assignment_statement           shift and go to state 8
    class_statement                shift and go to state 9
    print_statement                shift and go to state 10
    this_assign                    shift and go to state 11
    switch                         shift and go to state 12
    return                         shift and go to state 13
    while                          shift and go to state 14
    for                            shift and go to state 15
    try_catch                      shift and go to state 16
    function                       shift and go to state 18
    function_call                  shift and go to state 19
    ifblock                        shift and go to state 20
    increment                      shift and go to state 25
    if                             shift and go to state 34

state 143

    (16) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN . parameters RPAREN LBRACE statements RBRACE
    (17) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN . RPAREN LBRACE statements RBRACE
    (22) parameters -> . parameter
    (23) parameters -> . parameter COMMA parameters
    (24) parameter -> . RETURNTYPE IDENTIFIER
    (25) parameter -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER

    RPAREN          shift and go to state 208
    RETURNTYPE      shift and go to state 176

    parameters                     shift and go to state 207
    parameter                      shift and go to state 179

state 144

    (20) function -> ACCESS STATIC RETURNTYPE IDENTIFIER . LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> ACCESS STATIC RETURNTYPE IDENTIFIER . LPAREN RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 209


state 145

    (6) class -> CLASS IDENTIFIER LBRACE stats . RBRACE

    RBRACE          shift and go to state 210


state 146

    (8) stats -> stat .
    (9) stats -> stat . stats
    (8) stats -> . stat
    (9) stats -> . stat stats
    (10) stat -> . constructor
    (11) stat -> . statement
    (12) constructor -> . ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (13) constructor -> . ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (30) statement -> . assignment_statement
    (31) statement -> . class_statement
    (32) statement -> . print_statement
    (33) statement -> . this_assign
    (34) statement -> . switch
    (35) statement -> . return
    (36) statement -> . while
    (37) statement -> . for
    (38) statement -> . try_catch
    (39) statement -> . PASS SEMICOLON
    (40) statement -> . ACCESS assignment_statement
    (41) statement -> . function
    (42) statement -> . function_call
    (43) statement -> . ifblock
    (44) statement -> . BREAK SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (91) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (7) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (45) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (109) return -> . RETURN IDENTIFIER SEMICOLON
    (110) return -> . RETURN SEMICOLON
    (111) return -> . RETURN expression SEMICOLON
    (50) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (124) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (129) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (28) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (29) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (116) ifblock -> . if
    (117) ifblock -> . if else
    (118) ifblock -> . if else_if
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    RBRACE          reduce using rule 8 (stats -> stat .)
    ACCESS          shift and go to state 149
    PASS            shift and go to state 17
    BREAK           shift and go to state 21
    RETURNTYPE      shift and go to state 22
    IDENTIFIER      shift and go to state 7
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    SOP             shift and go to state 26
    THIS            shift and go to state 27
    SWITCH          shift and go to state 28
    RETURN          shift and go to state 29
    WHILE           shift and go to state 30
    FOR             shift and go to state 31
    TRY             shift and go to state 32
    STATIC          shift and go to state 33
    IF              shift and go to state 35

    stat                           shift and go to state 146
    stats                          shift and go to state 211
    constructor                    shift and go to state 147
    statement                      shift and go to state 148
    assignment_statement           shift and go to state 8
    class_statement                shift and go to state 9
    print_statement                shift and go to state 10
    this_assign                    shift and go to state 11
    switch                         shift and go to state 12
    return                         shift and go to state 13
    while                          shift and go to state 14
    for                            shift and go to state 15
    try_catch                      shift and go to state 16
    function                       shift and go to state 18
    function_call                  shift and go to state 19
    ifblock                        shift and go to state 20
    increment                      shift and go to state 25
    if                             shift and go to state 34

state 147

    (10) stat -> constructor .

    ACCESS          reduce using rule 10 (stat -> constructor .)
    PASS            reduce using rule 10 (stat -> constructor .)
    BREAK           reduce using rule 10 (stat -> constructor .)
    RETURNTYPE      reduce using rule 10 (stat -> constructor .)
    IDENTIFIER      reduce using rule 10 (stat -> constructor .)
    PLUS            reduce using rule 10 (stat -> constructor .)
    MINUS           reduce using rule 10 (stat -> constructor .)
    SOP             reduce using rule 10 (stat -> constructor .)
    THIS            reduce using rule 10 (stat -> constructor .)
    SWITCH          reduce using rule 10 (stat -> constructor .)
    RETURN          reduce using rule 10 (stat -> constructor .)
    WHILE           reduce using rule 10 (stat -> constructor .)
    FOR             reduce using rule 10 (stat -> constructor .)
    TRY             reduce using rule 10 (stat -> constructor .)
    STATIC          reduce using rule 10 (stat -> constructor .)
    IF              reduce using rule 10 (stat -> constructor .)
    RBRACE          reduce using rule 10 (stat -> constructor .)


state 148

    (11) stat -> statement .

    ACCESS          reduce using rule 11 (stat -> statement .)
    PASS            reduce using rule 11 (stat -> statement .)
    BREAK           reduce using rule 11 (stat -> statement .)
    RETURNTYPE      reduce using rule 11 (stat -> statement .)
    IDENTIFIER      reduce using rule 11 (stat -> statement .)
    PLUS            reduce using rule 11 (stat -> statement .)
    MINUS           reduce using rule 11 (stat -> statement .)
    SOP             reduce using rule 11 (stat -> statement .)
    THIS            reduce using rule 11 (stat -> statement .)
    SWITCH          reduce using rule 11 (stat -> statement .)
    RETURN          reduce using rule 11 (stat -> statement .)
    WHILE           reduce using rule 11 (stat -> statement .)
    FOR             reduce using rule 11 (stat -> statement .)
    TRY             reduce using rule 11 (stat -> statement .)
    STATIC          reduce using rule 11 (stat -> statement .)
    IF              reduce using rule 11 (stat -> statement .)
    RBRACE          reduce using rule 11 (stat -> statement .)


state 149

    (12) constructor -> ACCESS . IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (13) constructor -> ACCESS . IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (40) statement -> ACCESS . assignment_statement
    (16) function -> ACCESS . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> ACCESS . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> ACCESS . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> ACCESS . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS

    IDENTIFIER      shift and go to state 212
    RETURNTYPE      shift and go to state 40
    STATIC          shift and go to state 41
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24

    assignment_statement           shift and go to state 39
    increment                      shift and go to state 25

state 150

    (58) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW . IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW . IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW . IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW . IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON

    IDENTIFIER      shift and go to state 213


state 151

    (75) assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    CLASS           reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    IF              reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    $end            reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 75 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)


state 152

    (76) assignment_statement -> IDENTIFIER PLUS ASSIGN expression . SEMICOLON
    (100) expression -> expression . PLUS
    (101) expression -> expression . MINUS
    (102) expression -> expression . PLUS expression
    (103) expression -> expression . MINUS expression
    (104) expression -> expression . TIMES expression
    (105) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 214
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    TIMES           shift and go to state 129
    DIVIDE          shift and go to state 130


state 153

    (77) assignment_statement -> IDENTIFIER MINUS ASSIGN expression . SEMICOLON
    (100) expression -> expression . PLUS
    (101) expression -> expression . MINUS
    (102) expression -> expression . PLUS expression
    (103) expression -> expression . MINUS expression
    (104) expression -> expression . TIMES expression
    (105) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 215
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    TIMES           shift and go to state 129
    DIVIDE          shift and go to state 130


state 154

    (78) assignment_statement -> IDENTIFIER TIMES ASSIGN expression . SEMICOLON
    (100) expression -> expression . PLUS
    (101) expression -> expression . MINUS
    (102) expression -> expression . PLUS expression
    (103) expression -> expression . MINUS expression
    (104) expression -> expression . TIMES expression
    (105) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 216
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    TIMES           shift and go to state 129
    DIVIDE          shift and go to state 130


state 155

    (79) assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression . SEMICOLON
    (100) expression -> expression . PLUS
    (101) expression -> expression . MINUS
    (102) expression -> expression . PLUS expression
    (103) expression -> expression . MINUS expression
    (104) expression -> expression . TIMES expression
    (105) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 217
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    TIMES           shift and go to state 129
    DIVIDE          shift and go to state 130


state 156

    (80) assignment_statement -> IDENTIFIER arrays PLUS PLUS . SEMICOLON

    SEMICOLON       shift and go to state 218


state 157

    (82) assignment_statement -> IDENTIFIER arrays MINUS MINUS . SEMICOLON

    SEMICOLON       shift and go to state 219


state 158

    (87) assignment_statement -> IDENTIFIER arrays ASSIGN expression . SEMICOLON
    (100) expression -> expression . PLUS
    (101) expression -> expression . MINUS
    (102) expression -> expression . PLUS expression
    (103) expression -> expression . MINUS expression
    (104) expression -> expression . TIMES expression
    (105) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 220
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    TIMES           shift and go to state 129
    DIVIDE          shift and go to state 130


state 159

    (88) assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE . items RBRACE SEMICOLON
    (112) items -> . item
    (113) items -> . item COMMA items
    (114) item -> . NUMBER
    (115) item -> . CHAR

    NUMBER          shift and go to state 223
    CHAR            shift and go to state 224

    items                          shift and go to state 221
    item                           shift and go to state 222

state 160

    (127) increment -> IDENTIFIER PLUS . PLUS

    PLUS            shift and go to state 89


state 161

    (128) increment -> IDENTIFIER MINUS . MINUS

    MINUS           shift and go to state 91


state 162

    (28) function_call -> IDENTIFIER LPAREN params RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 225


state 163

    (29) function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .

    ACCESS          reduce using rule 29 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    CLASS           reduce using rule 29 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    PASS            reduce using rule 29 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 29 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    RETURNTYPE      reduce using rule 29 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 29 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    PLUS            reduce using rule 29 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    MINUS           reduce using rule 29 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    SOP             reduce using rule 29 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    THIS            reduce using rule 29 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    SWITCH          reduce using rule 29 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 29 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 29 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 29 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    TRY             reduce using rule 29 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    STATIC          reduce using rule 29 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 29 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 29 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 29 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    CASE            reduce using rule 29 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 29 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)


state 164

    (52) params -> param LOGICAL . params
    (51) params -> . param
    (52) params -> . param LOGICAL params
    (53) param -> . increment
    (54) param -> . expression
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    IDENTIFIER      shift and go to state 98
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    param                          shift and go to state 101
    params                         shift and go to state 226
    increment                      shift and go to state 102
    expression                     shift and go to state 103
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 165

    (125) increment -> PLUS PLUS . IDENTIFIER

    IDENTIFIER      shift and go to state 227


state 166

    (126) increment -> MINUS MINUS . IDENTIFIER

    IDENTIFIER      shift and go to state 228


state 167

    (63) arrays -> LBRACKET RBRACKET arrays .

    PLUS            reduce using rule 63 (arrays -> LBRACKET RBRACKET arrays .)
    MINUS           reduce using rule 63 (arrays -> LBRACKET RBRACKET arrays .)
    ASSIGN          reduce using rule 63 (arrays -> LBRACKET RBRACKET arrays .)
    IDENTIFIER      reduce using rule 63 (arrays -> LBRACKET RBRACKET arrays .)
    SEMICOLON       reduce using rule 63 (arrays -> LBRACKET RBRACKET arrays .)
    TIMES           reduce using rule 63 (arrays -> LBRACKET RBRACKET arrays .)
    DIVIDE          reduce using rule 63 (arrays -> LBRACKET RBRACKET arrays .)
    RBRACKET        reduce using rule 63 (arrays -> LBRACKET RBRACKET arrays .)
    RPAREN          reduce using rule 63 (arrays -> LBRACKET RBRACKET arrays .)
    COMMA           reduce using rule 63 (arrays -> LBRACKET RBRACKET arrays .)
    LOGICAL         reduce using rule 63 (arrays -> LBRACKET RBRACKET arrays .)


state 168

    (64) arrays -> LBRACKET expression RBRACKET . arrays
    (65) arrays -> LBRACKET expression RBRACKET .
    (62) arrays -> . LBRACKET RBRACKET
    (63) arrays -> . LBRACKET RBRACKET arrays
    (64) arrays -> . LBRACKET expression RBRACKET arrays
    (65) arrays -> . LBRACKET expression RBRACKET

    PLUS            reduce using rule 65 (arrays -> LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 65 (arrays -> LBRACKET expression RBRACKET .)
    ASSIGN          reduce using rule 65 (arrays -> LBRACKET expression RBRACKET .)
    IDENTIFIER      reduce using rule 65 (arrays -> LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 65 (arrays -> LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 65 (arrays -> LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 65 (arrays -> LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 65 (arrays -> LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 65 (arrays -> LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 65 (arrays -> LBRACKET expression RBRACKET .)
    LOGICAL         reduce using rule 65 (arrays -> LBRACKET expression RBRACKET .)
    LBRACKET        shift and go to state 51

    arrays                         shift and go to state 229

state 169

    (68) assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression . SEMICOLON
    (100) expression -> expression . PLUS
    (101) expression -> expression . MINUS
    (102) expression -> expression . PLUS expression
    (103) expression -> expression . MINUS expression
    (104) expression -> expression . TIMES expression
    (105) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 230
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    TIMES           shift and go to state 129
    DIVIDE          shift and go to state 130


state 170

    (74) assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS . SEMICOLON

    SEMICOLON       shift and go to state 231


state 171

    (70) assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN . expression SEMICOLON
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    IDENTIFIER      shift and go to state 87
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expression                     shift and go to state 232
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 172

    (71) assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN . expression SEMICOLON
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    IDENTIFIER      shift and go to state 87
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expression                     shift and go to state 233
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 173

    (72) assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN . expression SEMICOLON
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    IDENTIFIER      shift and go to state 87
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expression                     shift and go to state 234
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 174

    (73) assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN . expression SEMICOLON
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    IDENTIFIER      shift and go to state 87
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expression                     shift and go to state 235
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 175

    (85) assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN . LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN . NEW RETURNTYPE arrays SEMICOLON

    LBRACE          shift and go to state 236
    NEW             shift and go to state 237


state 176

    (24) parameter -> RETURNTYPE . IDENTIFIER
    (25) parameter -> RETURNTYPE . LBRACKET RBRACKET IDENTIFIER

    IDENTIFIER      shift and go to state 238
    LBRACKET        shift and go to state 239


state 177

    (14) function -> RETURNTYPE IDENTIFIER LPAREN parameters . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 240


state 178

    (15) function -> RETURNTYPE IDENTIFIER LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 241


state 179

    (22) parameters -> parameter .
    (23) parameters -> parameter . COMMA parameters

    RPAREN          reduce using rule 22 (parameters -> parameter .)
    COMMA           shift and go to state 242


state 180

    (86) assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN . LBRACE items RBRACE SEMICOLON
    (90) assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN . NEW RETURNTYPE arrays SEMICOLON

    LBRACE          shift and go to state 243
    NEW             shift and go to state 244


state 181

    (83) assignment_statement -> PLUS PLUS IDENTIFIER arrays . SEMICOLON

    SEMICOLON       shift and go to state 245


state 182

    (84) assignment_statement -> MINUS MINUS IDENTIFIER arrays . SEMICOLON

    SEMICOLON       shift and go to state 246


state 183

    (91) print_statement -> SOP LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 247


state 184

    (92) print_statement -> SOP LPAREN RPAREN SEMICOLON .

    ACCESS          reduce using rule 92 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    CLASS           reduce using rule 92 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    PASS            reduce using rule 92 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 92 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    RETURNTYPE      reduce using rule 92 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 92 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    PLUS            reduce using rule 92 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    MINUS           reduce using rule 92 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    SOP             reduce using rule 92 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    THIS            reduce using rule 92 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    SWITCH          reduce using rule 92 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 92 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 92 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 92 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    TRY             reduce using rule 92 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    STATIC          reduce using rule 92 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 92 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 92 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 92 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    CASE            reduce using rule 92 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 92 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)


state 185

    (7) this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 248


state 186

    (45) switch -> SWITCH LPAREN IDENTIFIER RPAREN . LBRACE cases RBRACE

    LBRACE          shift and go to state 249


state 187

    (95) expression -> IDENTIFIER LPAREN RPAREN .

    SEMICOLON       reduce using rule 95 (expression -> IDENTIFIER LPAREN RPAREN .)
    PLUS            reduce using rule 95 (expression -> IDENTIFIER LPAREN RPAREN .)
    MINUS           reduce using rule 95 (expression -> IDENTIFIER LPAREN RPAREN .)
    TIMES           reduce using rule 95 (expression -> IDENTIFIER LPAREN RPAREN .)
    DIVIDE          reduce using rule 95 (expression -> IDENTIFIER LPAREN RPAREN .)
    LOGICAL         reduce using rule 95 (expression -> IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 95 (expression -> IDENTIFIER LPAREN RPAREN .)
    RBRACKET        reduce using rule 95 (expression -> IDENTIFIER LPAREN RPAREN .)
    COMMA           reduce using rule 95 (expression -> IDENTIFIER LPAREN RPAREN .)


state 188

    (97) expression -> IDENTIFIER LPAREN values . RPAREN

    RPAREN          shift and go to state 250


state 189

    (55) values -> expression .
    (56) values -> expression . COMMA values
    (100) expression -> expression . PLUS
    (101) expression -> expression . MINUS
    (102) expression -> expression . PLUS expression
    (103) expression -> expression . MINUS expression
    (104) expression -> expression . TIMES expression
    (105) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 55 (values -> expression .)
    COMMA           shift and go to state 251
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    TIMES           shift and go to state 129
    DIVIDE          shift and go to state 130


state 190

    (102) expression -> expression PLUS expression .
    (100) expression -> expression . PLUS
    (101) expression -> expression . MINUS
    (102) expression -> expression . PLUS expression
    (103) expression -> expression . MINUS expression
    (104) expression -> expression . TIMES expression
    (105) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 102 (expression -> expression PLUS expression .)
    LOGICAL         reduce using rule 102 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 102 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 102 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 102 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    TIMES           shift and go to state 129
    DIVIDE          shift and go to state 130

  ! PLUS            [ reduce using rule 102 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 102 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 102 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 102 (expression -> expression PLUS expression .) ]


state 191

    (103) expression -> expression MINUS expression .
    (100) expression -> expression . PLUS
    (101) expression -> expression . MINUS
    (102) expression -> expression . PLUS expression
    (103) expression -> expression . MINUS expression
    (104) expression -> expression . TIMES expression
    (105) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 103 (expression -> expression MINUS expression .)
    LOGICAL         reduce using rule 103 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 103 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 103 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 103 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    TIMES           shift and go to state 129
    DIVIDE          shift and go to state 130

  ! PLUS            [ reduce using rule 103 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 103 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 103 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 103 (expression -> expression MINUS expression .) ]


state 192

    (104) expression -> expression TIMES expression .
    (100) expression -> expression . PLUS
    (101) expression -> expression . MINUS
    (102) expression -> expression . PLUS expression
    (103) expression -> expression . MINUS expression
    (104) expression -> expression . TIMES expression
    (105) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 104 (expression -> expression TIMES expression .)
    LOGICAL         reduce using rule 104 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 104 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 104 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 104 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    TIMES           shift and go to state 129
    DIVIDE          shift and go to state 130

  ! PLUS            [ reduce using rule 104 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 104 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 104 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 104 (expression -> expression TIMES expression .) ]


state 193

    (105) expression -> expression DIVIDE expression .
    (100) expression -> expression . PLUS
    (101) expression -> expression . MINUS
    (102) expression -> expression . PLUS expression
    (103) expression -> expression . MINUS expression
    (104) expression -> expression . TIMES expression
    (105) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 105 (expression -> expression DIVIDE expression .)
    LOGICAL         reduce using rule 105 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 105 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 105 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 105 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    TIMES           shift and go to state 129
    DIVIDE          shift and go to state 130

  ! PLUS            [ reduce using rule 105 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 105 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 105 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 105 (expression -> expression DIVIDE expression .) ]


state 194

    (96) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    LOGICAL         reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 96 (expression -> LPAREN expression RPAREN .)


state 195

    (50) while -> WHILE LPAREN params RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 252


state 196

    (124) for -> FOR LPAREN assignment_statement params . SEMICOLON increment RPAREN LBRACE statements RBRACE

    SEMICOLON       shift and go to state 253


state 197

    (68) assignment_statement -> RETURNTYPE IDENTIFIER . ASSIGN expression SEMICOLON
    (69) assignment_statement -> RETURNTYPE IDENTIFIER . SEMICOLON
    (70) assignment_statement -> RETURNTYPE IDENTIFIER . PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> RETURNTYPE IDENTIFIER . MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> RETURNTYPE IDENTIFIER . TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> RETURNTYPE IDENTIFIER . DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> RETURNTYPE IDENTIFIER . PLUS PLUS SEMICOLON
    (85) assignment_statement -> RETURNTYPE IDENTIFIER . arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> RETURNTYPE IDENTIFIER . arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (62) arrays -> . LBRACKET RBRACKET
    (63) arrays -> . LBRACKET RBRACKET arrays
    (64) arrays -> . LBRACKET expression RBRACKET arrays
    (65) arrays -> . LBRACKET expression RBRACKET

    ASSIGN          shift and go to state 108
    SEMICOLON       shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    TIMES           shift and go to state 112
    DIVIDE          shift and go to state 113
    LBRACKET        shift and go to state 51

    arrays                         shift and go to state 114

state 198

    (129) try_catch -> TRY LBRACE statements RBRACE . CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> TRY LBRACE statements RBRACE . CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

    CATCH           shift and go to state 254


state 199

    (27) statements -> statement statements .

    RBRACE          reduce using rule 27 (statements -> statement statements .)
    CASE            reduce using rule 27 (statements -> statement statements .)
    DEFAULT         reduce using rule 27 (statements -> statement statements .)


state 200

    (18) function -> STATIC RETURNTYPE IDENTIFIER LPAREN . parameters RPAREN LBRACE statements RBRACE
    (19) function -> STATIC RETURNTYPE IDENTIFIER LPAREN . RPAREN LBRACE statements RBRACE
    (22) parameters -> . parameter
    (23) parameters -> . parameter COMMA parameters
    (24) parameter -> . RETURNTYPE IDENTIFIER
    (25) parameter -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER

    RPAREN          shift and go to state 256
    RETURNTYPE      shift and go to state 176

    parameters                     shift and go to state 255
    parameter                      shift and go to state 179

state 201

    (120) else -> ELSE LBRACE statements . RBRACE

    RBRACE          shift and go to state 257


state 202

    (121) else_if -> ELSE . if
    (122) else_if -> ELSE . if else_if
    (123) else_if -> ELSE . if else
    (120) else -> ELSE . LBRACE statements RBRACE
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    LBRACE          shift and go to state 139
    IF              shift and go to state 35

    if                             shift and go to state 140

state 203

    (122) else_if -> ELSE if else_if .

    ACCESS          reduce using rule 122 (else_if -> ELSE if else_if .)
    CLASS           reduce using rule 122 (else_if -> ELSE if else_if .)
    PASS            reduce using rule 122 (else_if -> ELSE if else_if .)
    BREAK           reduce using rule 122 (else_if -> ELSE if else_if .)
    RETURNTYPE      reduce using rule 122 (else_if -> ELSE if else_if .)
    IDENTIFIER      reduce using rule 122 (else_if -> ELSE if else_if .)
    PLUS            reduce using rule 122 (else_if -> ELSE if else_if .)
    MINUS           reduce using rule 122 (else_if -> ELSE if else_if .)
    SOP             reduce using rule 122 (else_if -> ELSE if else_if .)
    THIS            reduce using rule 122 (else_if -> ELSE if else_if .)
    SWITCH          reduce using rule 122 (else_if -> ELSE if else_if .)
    RETURN          reduce using rule 122 (else_if -> ELSE if else_if .)
    WHILE           reduce using rule 122 (else_if -> ELSE if else_if .)
    FOR             reduce using rule 122 (else_if -> ELSE if else_if .)
    TRY             reduce using rule 122 (else_if -> ELSE if else_if .)
    STATIC          reduce using rule 122 (else_if -> ELSE if else_if .)
    IF              reduce using rule 122 (else_if -> ELSE if else_if .)
    $end            reduce using rule 122 (else_if -> ELSE if else_if .)
    RBRACE          reduce using rule 122 (else_if -> ELSE if else_if .)
    CASE            reduce using rule 122 (else_if -> ELSE if else_if .)
    DEFAULT         reduce using rule 122 (else_if -> ELSE if else_if .)


state 204

    (123) else_if -> ELSE if else .

    ACCESS          reduce using rule 123 (else_if -> ELSE if else .)
    CLASS           reduce using rule 123 (else_if -> ELSE if else .)
    PASS            reduce using rule 123 (else_if -> ELSE if else .)
    BREAK           reduce using rule 123 (else_if -> ELSE if else .)
    RETURNTYPE      reduce using rule 123 (else_if -> ELSE if else .)
    IDENTIFIER      reduce using rule 123 (else_if -> ELSE if else .)
    PLUS            reduce using rule 123 (else_if -> ELSE if else .)
    MINUS           reduce using rule 123 (else_if -> ELSE if else .)
    SOP             reduce using rule 123 (else_if -> ELSE if else .)
    THIS            reduce using rule 123 (else_if -> ELSE if else .)
    SWITCH          reduce using rule 123 (else_if -> ELSE if else .)
    RETURN          reduce using rule 123 (else_if -> ELSE if else .)
    WHILE           reduce using rule 123 (else_if -> ELSE if else .)
    FOR             reduce using rule 123 (else_if -> ELSE if else .)
    TRY             reduce using rule 123 (else_if -> ELSE if else .)
    STATIC          reduce using rule 123 (else_if -> ELSE if else .)
    IF              reduce using rule 123 (else_if -> ELSE if else .)
    $end            reduce using rule 123 (else_if -> ELSE if else .)
    RBRACE          reduce using rule 123 (else_if -> ELSE if else .)
    CASE            reduce using rule 123 (else_if -> ELSE if else .)
    DEFAULT         reduce using rule 123 (else_if -> ELSE if else .)


state 205

    (119) if -> IF LPAREN params RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 258


state 206

    (5) class -> ACCESS CLASS IDENTIFIER LBRACE stats . RBRACE

    RBRACE          shift and go to state 259


state 207

    (16) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 260


state 208

    (17) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 261


state 209

    (20) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN . parameters RPAREN LBRACE statements RBRACE
    (21) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN . RPAREN LBRACE statements RBRACE
    (22) parameters -> . parameter
    (23) parameters -> . parameter COMMA parameters
    (24) parameter -> . RETURNTYPE IDENTIFIER
    (25) parameter -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER

    RPAREN          shift and go to state 263
    RETURNTYPE      shift and go to state 176

    parameters                     shift and go to state 262
    parameter                      shift and go to state 179

state 210

    (6) class -> CLASS IDENTIFIER LBRACE stats RBRACE .

    ACCESS          reduce using rule 6 (class -> CLASS IDENTIFIER LBRACE stats RBRACE .)
    CLASS           reduce using rule 6 (class -> CLASS IDENTIFIER LBRACE stats RBRACE .)
    PASS            reduce using rule 6 (class -> CLASS IDENTIFIER LBRACE stats RBRACE .)
    BREAK           reduce using rule 6 (class -> CLASS IDENTIFIER LBRACE stats RBRACE .)
    RETURNTYPE      reduce using rule 6 (class -> CLASS IDENTIFIER LBRACE stats RBRACE .)
    IDENTIFIER      reduce using rule 6 (class -> CLASS IDENTIFIER LBRACE stats RBRACE .)
    PLUS            reduce using rule 6 (class -> CLASS IDENTIFIER LBRACE stats RBRACE .)
    MINUS           reduce using rule 6 (class -> CLASS IDENTIFIER LBRACE stats RBRACE .)
    SOP             reduce using rule 6 (class -> CLASS IDENTIFIER LBRACE stats RBRACE .)
    THIS            reduce using rule 6 (class -> CLASS IDENTIFIER LBRACE stats RBRACE .)
    SWITCH          reduce using rule 6 (class -> CLASS IDENTIFIER LBRACE stats RBRACE .)
    RETURN          reduce using rule 6 (class -> CLASS IDENTIFIER LBRACE stats RBRACE .)
    WHILE           reduce using rule 6 (class -> CLASS IDENTIFIER LBRACE stats RBRACE .)
    FOR             reduce using rule 6 (class -> CLASS IDENTIFIER LBRACE stats RBRACE .)
    TRY             reduce using rule 6 (class -> CLASS IDENTIFIER LBRACE stats RBRACE .)
    STATIC          reduce using rule 6 (class -> CLASS IDENTIFIER LBRACE stats RBRACE .)
    IF              reduce using rule 6 (class -> CLASS IDENTIFIER LBRACE stats RBRACE .)
    $end            reduce using rule 6 (class -> CLASS IDENTIFIER LBRACE stats RBRACE .)


state 211

    (9) stats -> stat stats .

    RBRACE          reduce using rule 9 (stats -> stat stats .)


state 212

    (12) constructor -> ACCESS IDENTIFIER . LPAREN parameters RPAREN LBRACE statements RBRACE
    (13) constructor -> ACCESS IDENTIFIER . LPAREN RPAREN LBRACE statements RBRACE
    (75) assignment_statement -> IDENTIFIER . ASSIGN expression SEMICOLON
    (76) assignment_statement -> IDENTIFIER . PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> IDENTIFIER . MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> IDENTIFIER . TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> IDENTIFIER . DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> IDENTIFIER . arrays PLUS PLUS SEMICOLON
    (82) assignment_statement -> IDENTIFIER . arrays MINUS MINUS SEMICOLON
    (87) assignment_statement -> IDENTIFIER . arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> IDENTIFIER . arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (127) increment -> IDENTIFIER . PLUS PLUS
    (128) increment -> IDENTIFIER . MINUS MINUS
    (62) arrays -> . LBRACKET RBRACKET
    (63) arrays -> . LBRACKET RBRACKET arrays
    (64) arrays -> . LBRACKET expression RBRACKET arrays
    (65) arrays -> . LBRACKET expression RBRACKET

    LPAREN          shift and go to state 264
    ASSIGN          shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LBRACKET        shift and go to state 51

    arrays                         shift and go to state 49

state 213

    (58) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER . LPAREN RPAREN SEMICOLON
    (59) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER . LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER . LPAREN values RPAREN SEMICOLON
    (61) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER . LBRACKET NUMBER RBRACKET SEMICOLON

    LPAREN          shift and go to state 265
    LBRACKET        shift and go to state 266


state 214

    (76) assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    CLASS           reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    IF              reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    $end            reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 76 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)


state 215

    (77) assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    CLASS           reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    IF              reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    $end            reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 77 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)


state 216

    (78) assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    CLASS           reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    IF              reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    $end            reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 78 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)


state 217

    (79) assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    CLASS           reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    IF              reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    $end            reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 79 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)


state 218

    (80) assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .

    ACCESS          reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    CLASS           reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    PASS            reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    BREAK           reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    RETURNTYPE      reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    IDENTIFIER      reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    PLUS            reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    MINUS           reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    SOP             reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    THIS            reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    SWITCH          reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    RETURN          reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    WHILE           reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    FOR             reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    TRY             reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    STATIC          reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    IF              reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    $end            reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    LPAREN          reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    NUMBER          reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    STRING          reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    CHAR            reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    TRUE            reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    FALSE           reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    RBRACE          reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    CASE            reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    DEFAULT         reduce using rule 80 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)


state 219

    (82) assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .

    ACCESS          reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    CLASS           reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    PASS            reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    BREAK           reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    RETURNTYPE      reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    IDENTIFIER      reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    PLUS            reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    MINUS           reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    SOP             reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    THIS            reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    SWITCH          reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    RETURN          reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    WHILE           reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    FOR             reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    TRY             reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    STATIC          reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    IF              reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    $end            reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    LPAREN          reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    NUMBER          reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    STRING          reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    CHAR            reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    TRUE            reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    FALSE           reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    RBRACE          reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    CASE            reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    DEFAULT         reduce using rule 82 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)


state 220

    (87) assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    CLASS           reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    IF              reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    $end            reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 87 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)


state 221

    (88) assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items . RBRACE SEMICOLON

    RBRACE          shift and go to state 267


state 222

    (112) items -> item .
    (113) items -> item . COMMA items

    RBRACE          reduce using rule 112 (items -> item .)
    COMMA           shift and go to state 268


state 223

    (114) item -> NUMBER .

    COMMA           reduce using rule 114 (item -> NUMBER .)
    RBRACE          reduce using rule 114 (item -> NUMBER .)


state 224

    (115) item -> CHAR .

    COMMA           reduce using rule 115 (item -> CHAR .)
    RBRACE          reduce using rule 115 (item -> CHAR .)


state 225

    (28) function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .

    ACCESS          reduce using rule 28 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    CLASS           reduce using rule 28 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    PASS            reduce using rule 28 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    BREAK           reduce using rule 28 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    RETURNTYPE      reduce using rule 28 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 28 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    PLUS            reduce using rule 28 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    MINUS           reduce using rule 28 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    SOP             reduce using rule 28 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    THIS            reduce using rule 28 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    SWITCH          reduce using rule 28 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    RETURN          reduce using rule 28 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    WHILE           reduce using rule 28 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    FOR             reduce using rule 28 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    TRY             reduce using rule 28 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    STATIC          reduce using rule 28 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    IF              reduce using rule 28 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    $end            reduce using rule 28 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    RBRACE          reduce using rule 28 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    CASE            reduce using rule 28 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 28 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)


state 226

    (52) params -> param LOGICAL params .

    RPAREN          reduce using rule 52 (params -> param LOGICAL params .)
    SEMICOLON       reduce using rule 52 (params -> param LOGICAL params .)


state 227

    (125) increment -> PLUS PLUS IDENTIFIER .

    LOGICAL         reduce using rule 125 (increment -> PLUS PLUS IDENTIFIER .)
    RPAREN          reduce using rule 125 (increment -> PLUS PLUS IDENTIFIER .)
    SEMICOLON       reduce using rule 125 (increment -> PLUS PLUS IDENTIFIER .)


state 228

    (126) increment -> MINUS MINUS IDENTIFIER .

    LOGICAL         reduce using rule 126 (increment -> MINUS MINUS IDENTIFIER .)
    RPAREN          reduce using rule 126 (increment -> MINUS MINUS IDENTIFIER .)
    SEMICOLON       reduce using rule 126 (increment -> MINUS MINUS IDENTIFIER .)


state 229

    (64) arrays -> LBRACKET expression RBRACKET arrays .

    PLUS            reduce using rule 64 (arrays -> LBRACKET expression RBRACKET arrays .)
    MINUS           reduce using rule 64 (arrays -> LBRACKET expression RBRACKET arrays .)
    ASSIGN          reduce using rule 64 (arrays -> LBRACKET expression RBRACKET arrays .)
    IDENTIFIER      reduce using rule 64 (arrays -> LBRACKET expression RBRACKET arrays .)
    SEMICOLON       reduce using rule 64 (arrays -> LBRACKET expression RBRACKET arrays .)
    TIMES           reduce using rule 64 (arrays -> LBRACKET expression RBRACKET arrays .)
    DIVIDE          reduce using rule 64 (arrays -> LBRACKET expression RBRACKET arrays .)
    RBRACKET        reduce using rule 64 (arrays -> LBRACKET expression RBRACKET arrays .)
    RPAREN          reduce using rule 64 (arrays -> LBRACKET expression RBRACKET arrays .)
    COMMA           reduce using rule 64 (arrays -> LBRACKET expression RBRACKET arrays .)
    LOGICAL         reduce using rule 64 (arrays -> LBRACKET expression RBRACKET arrays .)


state 230

    (68) assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    CLASS           reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    IF              reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    $end            reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)


state 231

    (74) assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .

    ACCESS          reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    CLASS           reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    PASS            reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    BREAK           reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    RETURNTYPE      reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    IDENTIFIER      reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    PLUS            reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    MINUS           reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    SOP             reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    THIS            reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    SWITCH          reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    RETURN          reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    WHILE           reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    FOR             reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    TRY             reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    STATIC          reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    IF              reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    $end            reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    LPAREN          reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    NUMBER          reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    STRING          reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    CHAR            reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    TRUE            reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    FALSE           reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    RBRACE          reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    CASE            reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    DEFAULT         reduce using rule 74 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)


state 232

    (70) assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression . SEMICOLON
    (100) expression -> expression . PLUS
    (101) expression -> expression . MINUS
    (102) expression -> expression . PLUS expression
    (103) expression -> expression . MINUS expression
    (104) expression -> expression . TIMES expression
    (105) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 269
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    TIMES           shift and go to state 129
    DIVIDE          shift and go to state 130


state 233

    (71) assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression . SEMICOLON
    (100) expression -> expression . PLUS
    (101) expression -> expression . MINUS
    (102) expression -> expression . PLUS expression
    (103) expression -> expression . MINUS expression
    (104) expression -> expression . TIMES expression
    (105) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 270
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    TIMES           shift and go to state 129
    DIVIDE          shift and go to state 130


state 234

    (72) assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression . SEMICOLON
    (100) expression -> expression . PLUS
    (101) expression -> expression . MINUS
    (102) expression -> expression . PLUS expression
    (103) expression -> expression . MINUS expression
    (104) expression -> expression . TIMES expression
    (105) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 271
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    TIMES           shift and go to state 129
    DIVIDE          shift and go to state 130


state 235

    (73) assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression . SEMICOLON
    (100) expression -> expression . PLUS
    (101) expression -> expression . MINUS
    (102) expression -> expression . PLUS expression
    (103) expression -> expression . MINUS expression
    (104) expression -> expression . TIMES expression
    (105) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 272
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    TIMES           shift and go to state 129
    DIVIDE          shift and go to state 130


state 236

    (85) assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE . items RBRACE SEMICOLON
    (112) items -> . item
    (113) items -> . item COMMA items
    (114) item -> . NUMBER
    (115) item -> . CHAR

    NUMBER          shift and go to state 223
    CHAR            shift and go to state 224

    items                          shift and go to state 273
    item                           shift and go to state 222

state 237

    (89) assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW . RETURNTYPE arrays SEMICOLON

    RETURNTYPE      shift and go to state 274


state 238

    (24) parameter -> RETURNTYPE IDENTIFIER .

    COMMA           reduce using rule 24 (parameter -> RETURNTYPE IDENTIFIER .)
    RPAREN          reduce using rule 24 (parameter -> RETURNTYPE IDENTIFIER .)


state 239

    (25) parameter -> RETURNTYPE LBRACKET . RBRACKET IDENTIFIER

    RBRACKET        shift and go to state 275


state 240

    (14) function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 276


state 241

    (15) function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE . statements RBRACE
    (26) statements -> . statement
    (27) statements -> . statement statements
    (30) statement -> . assignment_statement
    (31) statement -> . class_statement
    (32) statement -> . print_statement
    (33) statement -> . this_assign
    (34) statement -> . switch
    (35) statement -> . return
    (36) statement -> . while
    (37) statement -> . for
    (38) statement -> . try_catch
    (39) statement -> . PASS SEMICOLON
    (40) statement -> . ACCESS assignment_statement
    (41) statement -> . function
    (42) statement -> . function_call
    (43) statement -> . ifblock
    (44) statement -> . BREAK SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (91) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (7) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (45) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (109) return -> . RETURN IDENTIFIER SEMICOLON
    (110) return -> . RETURN SEMICOLON
    (111) return -> . RETURN expression SEMICOLON
    (50) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (124) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (129) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (28) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (29) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (116) ifblock -> . if
    (117) ifblock -> . if else
    (118) ifblock -> . if else_if
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 17
    ACCESS          shift and go to state 137
    BREAK           shift and go to state 21
    RETURNTYPE      shift and go to state 22
    IDENTIFIER      shift and go to state 7
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    SOP             shift and go to state 26
    THIS            shift and go to state 27
    SWITCH          shift and go to state 28
    RETURN          shift and go to state 29
    WHILE           shift and go to state 30
    FOR             shift and go to state 31
    TRY             shift and go to state 32
    STATIC          shift and go to state 33
    IF              shift and go to state 35

    statements                     shift and go to state 277
    statement                      shift and go to state 136
    assignment_statement           shift and go to state 8
    class_statement                shift and go to state 9
    print_statement                shift and go to state 10
    this_assign                    shift and go to state 11
    switch                         shift and go to state 12
    return                         shift and go to state 13
    while                          shift and go to state 14
    for                            shift and go to state 15
    try_catch                      shift and go to state 16
    function                       shift and go to state 18
    function_call                  shift and go to state 19
    ifblock                        shift and go to state 20
    increment                      shift and go to state 25
    if                             shift and go to state 34

state 242

    (23) parameters -> parameter COMMA . parameters
    (22) parameters -> . parameter
    (23) parameters -> . parameter COMMA parameters
    (24) parameter -> . RETURNTYPE IDENTIFIER
    (25) parameter -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER

    RETURNTYPE      shift and go to state 176

    parameter                      shift and go to state 179
    parameters                     shift and go to state 278

state 243

    (86) assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE . items RBRACE SEMICOLON
    (112) items -> . item
    (113) items -> . item COMMA items
    (114) item -> . NUMBER
    (115) item -> . CHAR

    NUMBER          shift and go to state 223
    CHAR            shift and go to state 224

    items                          shift and go to state 279
    item                           shift and go to state 222

state 244

    (90) assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW . RETURNTYPE arrays SEMICOLON

    RETURNTYPE      shift and go to state 280


state 245

    (83) assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .

    ACCESS          reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    CLASS           reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    PASS            reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    BREAK           reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    RETURNTYPE      reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    IDENTIFIER      reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    PLUS            reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    MINUS           reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    SOP             reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    THIS            reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    SWITCH          reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    RETURN          reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    WHILE           reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    FOR             reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    TRY             reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    STATIC          reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    IF              reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    $end            reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    LPAREN          reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    NUMBER          reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    STRING          reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    CHAR            reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    TRUE            reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    FALSE           reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    RBRACE          reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    CASE            reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    DEFAULT         reduce using rule 83 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)


state 246

    (84) assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .

    ACCESS          reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    CLASS           reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    PASS            reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    BREAK           reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    RETURNTYPE      reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    IDENTIFIER      reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    PLUS            reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    MINUS           reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    SOP             reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    THIS            reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    SWITCH          reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    RETURN          reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    WHILE           reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    FOR             reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    TRY             reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    STATIC          reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    IF              reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    $end            reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    LPAREN          reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    NUMBER          reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    STRING          reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    CHAR            reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    TRUE            reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    FALSE           reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    RBRACE          reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    CASE            reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    DEFAULT         reduce using rule 84 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)


state 247

    (91) print_statement -> SOP LPAREN expression RPAREN SEMICOLON .

    ACCESS          reduce using rule 91 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    CLASS           reduce using rule 91 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    PASS            reduce using rule 91 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    BREAK           reduce using rule 91 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    RETURNTYPE      reduce using rule 91 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 91 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    PLUS            reduce using rule 91 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    MINUS           reduce using rule 91 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    SOP             reduce using rule 91 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    THIS            reduce using rule 91 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    SWITCH          reduce using rule 91 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 91 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 91 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 91 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    TRY             reduce using rule 91 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    STATIC          reduce using rule 91 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 91 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 91 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 91 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    CASE            reduce using rule 91 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 91 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)


state 248

    (7) this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .

    ACCESS          reduce using rule 7 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    CLASS           reduce using rule 7 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    PASS            reduce using rule 7 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    BREAK           reduce using rule 7 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    RETURNTYPE      reduce using rule 7 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 7 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    PLUS            reduce using rule 7 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    MINUS           reduce using rule 7 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    SOP             reduce using rule 7 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    THIS            reduce using rule 7 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    SWITCH          reduce using rule 7 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 7 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 7 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 7 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    TRY             reduce using rule 7 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    STATIC          reduce using rule 7 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    IF              reduce using rule 7 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    $end            reduce using rule 7 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 7 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    CASE            reduce using rule 7 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    DEFAULT         reduce using rule 7 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)


state 249

    (45) switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE . cases RBRACE
    (46) cases -> . case
    (47) cases -> . case cases
    (48) case -> . CASE NUMBER COLON statements
    (49) case -> . DEFAULT COLON statements

    CASE            shift and go to state 283
    DEFAULT         shift and go to state 284

    cases                          shift and go to state 281
    case                           shift and go to state 282

state 250

    (97) expression -> IDENTIFIER LPAREN values RPAREN .

    SEMICOLON       reduce using rule 97 (expression -> IDENTIFIER LPAREN values RPAREN .)
    PLUS            reduce using rule 97 (expression -> IDENTIFIER LPAREN values RPAREN .)
    MINUS           reduce using rule 97 (expression -> IDENTIFIER LPAREN values RPAREN .)
    TIMES           reduce using rule 97 (expression -> IDENTIFIER LPAREN values RPAREN .)
    DIVIDE          reduce using rule 97 (expression -> IDENTIFIER LPAREN values RPAREN .)
    LOGICAL         reduce using rule 97 (expression -> IDENTIFIER LPAREN values RPAREN .)
    RPAREN          reduce using rule 97 (expression -> IDENTIFIER LPAREN values RPAREN .)
    RBRACKET        reduce using rule 97 (expression -> IDENTIFIER LPAREN values RPAREN .)
    COMMA           reduce using rule 97 (expression -> IDENTIFIER LPAREN values RPAREN .)


state 251

    (56) values -> expression COMMA . values
    (55) values -> . expression
    (56) values -> . expression COMMA values
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    IDENTIFIER      shift and go to state 87
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expression                     shift and go to state 189
    values                         shift and go to state 285
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 252

    (50) while -> WHILE LPAREN params RPAREN LBRACE . statements RBRACE
    (26) statements -> . statement
    (27) statements -> . statement statements
    (30) statement -> . assignment_statement
    (31) statement -> . class_statement
    (32) statement -> . print_statement
    (33) statement -> . this_assign
    (34) statement -> . switch
    (35) statement -> . return
    (36) statement -> . while
    (37) statement -> . for
    (38) statement -> . try_catch
    (39) statement -> . PASS SEMICOLON
    (40) statement -> . ACCESS assignment_statement
    (41) statement -> . function
    (42) statement -> . function_call
    (43) statement -> . ifblock
    (44) statement -> . BREAK SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (91) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (7) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (45) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (109) return -> . RETURN IDENTIFIER SEMICOLON
    (110) return -> . RETURN SEMICOLON
    (111) return -> . RETURN expression SEMICOLON
    (50) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (124) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (129) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (28) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (29) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (116) ifblock -> . if
    (117) ifblock -> . if else
    (118) ifblock -> . if else_if
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 17
    ACCESS          shift and go to state 137
    BREAK           shift and go to state 21
    RETURNTYPE      shift and go to state 22
    IDENTIFIER      shift and go to state 7
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    SOP             shift and go to state 26
    THIS            shift and go to state 27
    SWITCH          shift and go to state 28
    RETURN          shift and go to state 29
    WHILE           shift and go to state 30
    FOR             shift and go to state 31
    TRY             shift and go to state 32
    STATIC          shift and go to state 33
    IF              shift and go to state 35

    statements                     shift and go to state 286
    statement                      shift and go to state 136
    assignment_statement           shift and go to state 8
    class_statement                shift and go to state 9
    print_statement                shift and go to state 10
    this_assign                    shift and go to state 11
    switch                         shift and go to state 12
    return                         shift and go to state 13
    while                          shift and go to state 14
    for                            shift and go to state 15
    try_catch                      shift and go to state 16
    function                       shift and go to state 18
    function_call                  shift and go to state 19
    ifblock                        shift and go to state 20
    increment                      shift and go to state 25
    if                             shift and go to state 34

state 253

    (124) for -> FOR LPAREN assignment_statement params SEMICOLON . increment RPAREN LBRACE statements RBRACE
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS

    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    IDENTIFIER      shift and go to state 288

    increment                      shift and go to state 287

state 254

    (129) try_catch -> TRY LBRACE statements RBRACE CATCH . LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> TRY LBRACE statements RBRACE CATCH . LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

    LPAREN          shift and go to state 289


state 255

    (18) function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 290


state 256

    (19) function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 291


state 257

    (120) else -> ELSE LBRACE statements RBRACE .

    ACCESS          reduce using rule 120 (else -> ELSE LBRACE statements RBRACE .)
    CLASS           reduce using rule 120 (else -> ELSE LBRACE statements RBRACE .)
    PASS            reduce using rule 120 (else -> ELSE LBRACE statements RBRACE .)
    BREAK           reduce using rule 120 (else -> ELSE LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 120 (else -> ELSE LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 120 (else -> ELSE LBRACE statements RBRACE .)
    PLUS            reduce using rule 120 (else -> ELSE LBRACE statements RBRACE .)
    MINUS           reduce using rule 120 (else -> ELSE LBRACE statements RBRACE .)
    SOP             reduce using rule 120 (else -> ELSE LBRACE statements RBRACE .)
    THIS            reduce using rule 120 (else -> ELSE LBRACE statements RBRACE .)
    SWITCH          reduce using rule 120 (else -> ELSE LBRACE statements RBRACE .)
    RETURN          reduce using rule 120 (else -> ELSE LBRACE statements RBRACE .)
    WHILE           reduce using rule 120 (else -> ELSE LBRACE statements RBRACE .)
    FOR             reduce using rule 120 (else -> ELSE LBRACE statements RBRACE .)
    TRY             reduce using rule 120 (else -> ELSE LBRACE statements RBRACE .)
    STATIC          reduce using rule 120 (else -> ELSE LBRACE statements RBRACE .)
    IF              reduce using rule 120 (else -> ELSE LBRACE statements RBRACE .)
    $end            reduce using rule 120 (else -> ELSE LBRACE statements RBRACE .)
    RBRACE          reduce using rule 120 (else -> ELSE LBRACE statements RBRACE .)
    CASE            reduce using rule 120 (else -> ELSE LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 120 (else -> ELSE LBRACE statements RBRACE .)


state 258

    (119) if -> IF LPAREN params RPAREN LBRACE . statements RBRACE
    (26) statements -> . statement
    (27) statements -> . statement statements
    (30) statement -> . assignment_statement
    (31) statement -> . class_statement
    (32) statement -> . print_statement
    (33) statement -> . this_assign
    (34) statement -> . switch
    (35) statement -> . return
    (36) statement -> . while
    (37) statement -> . for
    (38) statement -> . try_catch
    (39) statement -> . PASS SEMICOLON
    (40) statement -> . ACCESS assignment_statement
    (41) statement -> . function
    (42) statement -> . function_call
    (43) statement -> . ifblock
    (44) statement -> . BREAK SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (91) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (7) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (45) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (109) return -> . RETURN IDENTIFIER SEMICOLON
    (110) return -> . RETURN SEMICOLON
    (111) return -> . RETURN expression SEMICOLON
    (50) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (124) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (129) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (28) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (29) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (116) ifblock -> . if
    (117) ifblock -> . if else
    (118) ifblock -> . if else_if
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 17
    ACCESS          shift and go to state 137
    BREAK           shift and go to state 21
    RETURNTYPE      shift and go to state 22
    IDENTIFIER      shift and go to state 7
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    SOP             shift and go to state 26
    THIS            shift and go to state 27
    SWITCH          shift and go to state 28
    RETURN          shift and go to state 29
    WHILE           shift and go to state 30
    FOR             shift and go to state 31
    TRY             shift and go to state 32
    STATIC          shift and go to state 33
    IF              shift and go to state 35

    statements                     shift and go to state 292
    statement                      shift and go to state 136
    assignment_statement           shift and go to state 8
    class_statement                shift and go to state 9
    print_statement                shift and go to state 10
    this_assign                    shift and go to state 11
    switch                         shift and go to state 12
    return                         shift and go to state 13
    while                          shift and go to state 14
    for                            shift and go to state 15
    try_catch                      shift and go to state 16
    function                       shift and go to state 18
    function_call                  shift and go to state 19
    ifblock                        shift and go to state 20
    increment                      shift and go to state 25
    if                             shift and go to state 34

state 259

    (5) class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .

    ACCESS          reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    CLASS           reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    PASS            reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    BREAK           reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    RETURNTYPE      reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    IDENTIFIER      reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    PLUS            reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    MINUS           reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    SOP             reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    THIS            reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    SWITCH          reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    RETURN          reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    WHILE           reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    FOR             reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    TRY             reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    STATIC          reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    IF              reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    $end            reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)


state 260

    (16) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 293


state 261

    (17) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE . statements RBRACE
    (26) statements -> . statement
    (27) statements -> . statement statements
    (30) statement -> . assignment_statement
    (31) statement -> . class_statement
    (32) statement -> . print_statement
    (33) statement -> . this_assign
    (34) statement -> . switch
    (35) statement -> . return
    (36) statement -> . while
    (37) statement -> . for
    (38) statement -> . try_catch
    (39) statement -> . PASS SEMICOLON
    (40) statement -> . ACCESS assignment_statement
    (41) statement -> . function
    (42) statement -> . function_call
    (43) statement -> . ifblock
    (44) statement -> . BREAK SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (91) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (7) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (45) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (109) return -> . RETURN IDENTIFIER SEMICOLON
    (110) return -> . RETURN SEMICOLON
    (111) return -> . RETURN expression SEMICOLON
    (50) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (124) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (129) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (28) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (29) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (116) ifblock -> . if
    (117) ifblock -> . if else
    (118) ifblock -> . if else_if
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 17
    ACCESS          shift and go to state 137
    BREAK           shift and go to state 21
    RETURNTYPE      shift and go to state 22
    IDENTIFIER      shift and go to state 7
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    SOP             shift and go to state 26
    THIS            shift and go to state 27
    SWITCH          shift and go to state 28
    RETURN          shift and go to state 29
    WHILE           shift and go to state 30
    FOR             shift and go to state 31
    TRY             shift and go to state 32
    STATIC          shift and go to state 33
    IF              shift and go to state 35

    statements                     shift and go to state 294
    statement                      shift and go to state 136
    assignment_statement           shift and go to state 8
    class_statement                shift and go to state 9
    print_statement                shift and go to state 10
    this_assign                    shift and go to state 11
    switch                         shift and go to state 12
    return                         shift and go to state 13
    while                          shift and go to state 14
    for                            shift and go to state 15
    try_catch                      shift and go to state 16
    function                       shift and go to state 18
    function_call                  shift and go to state 19
    ifblock                        shift and go to state 20
    increment                      shift and go to state 25
    if                             shift and go to state 34

state 262

    (20) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 295


state 263

    (21) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 296


state 264

    (12) constructor -> ACCESS IDENTIFIER LPAREN . parameters RPAREN LBRACE statements RBRACE
    (13) constructor -> ACCESS IDENTIFIER LPAREN . RPAREN LBRACE statements RBRACE
    (22) parameters -> . parameter
    (23) parameters -> . parameter COMMA parameters
    (24) parameter -> . RETURNTYPE IDENTIFIER
    (25) parameter -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER

    RPAREN          shift and go to state 298
    RETURNTYPE      shift and go to state 176

    parameters                     shift and go to state 297
    parameter                      shift and go to state 179

state 265

    (58) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN . RPAREN SEMICOLON
    (60) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN . values RPAREN SEMICOLON
    (55) values -> . expression
    (56) values -> . expression COMMA values
    (94) expression -> . IDENTIFIER
    (95) expression -> . IDENTIFIER LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . IDENTIFIER LPAREN values RPAREN
    (98) expression -> . NUMBER
    (99) expression -> . array_access
    (100) expression -> . expression PLUS
    (101) expression -> . expression MINUS
    (102) expression -> . expression PLUS expression
    (103) expression -> . expression MINUS expression
    (104) expression -> . expression TIMES expression
    (105) expression -> . expression DIVIDE expression
    (106) expression -> . STRING
    (107) expression -> . CHAR
    (108) expression -> . bool
    (93) array_access -> . IDENTIFIER arrays
    (66) bool -> . TRUE
    (67) bool -> . FALSE

    RPAREN          shift and go to state 299
    IDENTIFIER      shift and go to state 87
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    values                         shift and go to state 300
    expression                     shift and go to state 189
    array_access                   shift and go to state 67
    bool                           shift and go to state 70

state 266

    (59) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET . RBRACKET SEMICOLON
    (61) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET . NUMBER RBRACKET SEMICOLON

    RBRACKET        shift and go to state 301
    NUMBER          shift and go to state 302


state 267

    (88) assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 303


state 268

    (113) items -> item COMMA . items
    (112) items -> . item
    (113) items -> . item COMMA items
    (114) item -> . NUMBER
    (115) item -> . CHAR

    NUMBER          shift and go to state 223
    CHAR            shift and go to state 224

    item                           shift and go to state 222
    items                          shift and go to state 304

state 269

    (70) assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    CLASS           reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    IF              reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    $end            reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)


state 270

    (71) assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    CLASS           reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    IF              reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    $end            reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)


state 271

    (72) assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    CLASS           reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    IF              reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    $end            reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 72 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)


state 272

    (73) assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    CLASS           reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    IF              reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    $end            reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 73 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)


state 273

    (85) assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items . RBRACE SEMICOLON

    RBRACE          shift and go to state 305


state 274

    (89) assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE . arrays SEMICOLON
    (62) arrays -> . LBRACKET RBRACKET
    (63) arrays -> . LBRACKET RBRACKET arrays
    (64) arrays -> . LBRACKET expression RBRACKET arrays
    (65) arrays -> . LBRACKET expression RBRACKET

    LBRACKET        shift and go to state 51

    arrays                         shift and go to state 306

state 275

    (25) parameter -> RETURNTYPE LBRACKET RBRACKET . IDENTIFIER

    IDENTIFIER      shift and go to state 307


state 276

    (14) function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE . statements RBRACE
    (26) statements -> . statement
    (27) statements -> . statement statements
    (30) statement -> . assignment_statement
    (31) statement -> . class_statement
    (32) statement -> . print_statement
    (33) statement -> . this_assign
    (34) statement -> . switch
    (35) statement -> . return
    (36) statement -> . while
    (37) statement -> . for
    (38) statement -> . try_catch
    (39) statement -> . PASS SEMICOLON
    (40) statement -> . ACCESS assignment_statement
    (41) statement -> . function
    (42) statement -> . function_call
    (43) statement -> . ifblock
    (44) statement -> . BREAK SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (91) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (7) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (45) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (109) return -> . RETURN IDENTIFIER SEMICOLON
    (110) return -> . RETURN SEMICOLON
    (111) return -> . RETURN expression SEMICOLON
    (50) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (124) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (129) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (28) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (29) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (116) ifblock -> . if
    (117) ifblock -> . if else
    (118) ifblock -> . if else_if
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 17
    ACCESS          shift and go to state 137
    BREAK           shift and go to state 21
    RETURNTYPE      shift and go to state 22
    IDENTIFIER      shift and go to state 7
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    SOP             shift and go to state 26
    THIS            shift and go to state 27
    SWITCH          shift and go to state 28
    RETURN          shift and go to state 29
    WHILE           shift and go to state 30
    FOR             shift and go to state 31
    TRY             shift and go to state 32
    STATIC          shift and go to state 33
    IF              shift and go to state 35

    statements                     shift and go to state 308
    statement                      shift and go to state 136
    assignment_statement           shift and go to state 8
    class_statement                shift and go to state 9
    print_statement                shift and go to state 10
    this_assign                    shift and go to state 11
    switch                         shift and go to state 12
    return                         shift and go to state 13
    while                          shift and go to state 14
    for                            shift and go to state 15
    try_catch                      shift and go to state 16
    function                       shift and go to state 18
    function_call                  shift and go to state 19
    ifblock                        shift and go to state 20
    increment                      shift and go to state 25
    if                             shift and go to state 34

state 277

    (15) function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 309


state 278

    (23) parameters -> parameter COMMA parameters .

    RPAREN          reduce using rule 23 (parameters -> parameter COMMA parameters .)


state 279

    (86) assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items . RBRACE SEMICOLON

    RBRACE          shift and go to state 310


state 280

    (90) assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE . arrays SEMICOLON
    (62) arrays -> . LBRACKET RBRACKET
    (63) arrays -> . LBRACKET RBRACKET arrays
    (64) arrays -> . LBRACKET expression RBRACKET arrays
    (65) arrays -> . LBRACKET expression RBRACKET

    LBRACKET        shift and go to state 51

    arrays                         shift and go to state 311

state 281

    (45) switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases . RBRACE

    RBRACE          shift and go to state 312


state 282

    (46) cases -> case .
    (47) cases -> case . cases
    (46) cases -> . case
    (47) cases -> . case cases
    (48) case -> . CASE NUMBER COLON statements
    (49) case -> . DEFAULT COLON statements

    RBRACE          reduce using rule 46 (cases -> case .)
    CASE            shift and go to state 283
    DEFAULT         shift and go to state 284

    case                           shift and go to state 282
    cases                          shift and go to state 313

state 283

    (48) case -> CASE . NUMBER COLON statements

    NUMBER          shift and go to state 314


state 284

    (49) case -> DEFAULT . COLON statements

    COLON           shift and go to state 315


state 285

    (56) values -> expression COMMA values .

    RPAREN          reduce using rule 56 (values -> expression COMMA values .)


state 286

    (50) while -> WHILE LPAREN params RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 316


state 287

    (124) for -> FOR LPAREN assignment_statement params SEMICOLON increment . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 317


state 288

    (127) increment -> IDENTIFIER . PLUS PLUS
    (128) increment -> IDENTIFIER . MINUS MINUS

    PLUS            shift and go to state 160
    MINUS           shift and go to state 161


state 289

    (129) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN . IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN . IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

    IDENTIFIER      shift and go to state 318


state 290

    (18) function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 319


state 291

    (19) function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE . statements RBRACE
    (26) statements -> . statement
    (27) statements -> . statement statements
    (30) statement -> . assignment_statement
    (31) statement -> . class_statement
    (32) statement -> . print_statement
    (33) statement -> . this_assign
    (34) statement -> . switch
    (35) statement -> . return
    (36) statement -> . while
    (37) statement -> . for
    (38) statement -> . try_catch
    (39) statement -> . PASS SEMICOLON
    (40) statement -> . ACCESS assignment_statement
    (41) statement -> . function
    (42) statement -> . function_call
    (43) statement -> . ifblock
    (44) statement -> . BREAK SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (91) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (7) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (45) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (109) return -> . RETURN IDENTIFIER SEMICOLON
    (110) return -> . RETURN SEMICOLON
    (111) return -> . RETURN expression SEMICOLON
    (50) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (124) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (129) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (28) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (29) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (116) ifblock -> . if
    (117) ifblock -> . if else
    (118) ifblock -> . if else_if
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 17
    ACCESS          shift and go to state 137
    BREAK           shift and go to state 21
    RETURNTYPE      shift and go to state 22
    IDENTIFIER      shift and go to state 7
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    SOP             shift and go to state 26
    THIS            shift and go to state 27
    SWITCH          shift and go to state 28
    RETURN          shift and go to state 29
    WHILE           shift and go to state 30
    FOR             shift and go to state 31
    TRY             shift and go to state 32
    STATIC          shift and go to state 33
    IF              shift and go to state 35

    statements                     shift and go to state 320
    statement                      shift and go to state 136
    assignment_statement           shift and go to state 8
    class_statement                shift and go to state 9
    print_statement                shift and go to state 10
    this_assign                    shift and go to state 11
    switch                         shift and go to state 12
    return                         shift and go to state 13
    while                          shift and go to state 14
    for                            shift and go to state 15
    try_catch                      shift and go to state 16
    function                       shift and go to state 18
    function_call                  shift and go to state 19
    ifblock                        shift and go to state 20
    increment                      shift and go to state 25
    if                             shift and go to state 34

state 292

    (119) if -> IF LPAREN params RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 321


state 293

    (16) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE . statements RBRACE
    (26) statements -> . statement
    (27) statements -> . statement statements
    (30) statement -> . assignment_statement
    (31) statement -> . class_statement
    (32) statement -> . print_statement
    (33) statement -> . this_assign
    (34) statement -> . switch
    (35) statement -> . return
    (36) statement -> . while
    (37) statement -> . for
    (38) statement -> . try_catch
    (39) statement -> . PASS SEMICOLON
    (40) statement -> . ACCESS assignment_statement
    (41) statement -> . function
    (42) statement -> . function_call
    (43) statement -> . ifblock
    (44) statement -> . BREAK SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (91) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (7) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (45) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (109) return -> . RETURN IDENTIFIER SEMICOLON
    (110) return -> . RETURN SEMICOLON
    (111) return -> . RETURN expression SEMICOLON
    (50) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (124) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (129) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (28) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (29) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (116) ifblock -> . if
    (117) ifblock -> . if else
    (118) ifblock -> . if else_if
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 17
    ACCESS          shift and go to state 137
    BREAK           shift and go to state 21
    RETURNTYPE      shift and go to state 22
    IDENTIFIER      shift and go to state 7
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    SOP             shift and go to state 26
    THIS            shift and go to state 27
    SWITCH          shift and go to state 28
    RETURN          shift and go to state 29
    WHILE           shift and go to state 30
    FOR             shift and go to state 31
    TRY             shift and go to state 32
    STATIC          shift and go to state 33
    IF              shift and go to state 35

    statements                     shift and go to state 322
    statement                      shift and go to state 136
    assignment_statement           shift and go to state 8
    class_statement                shift and go to state 9
    print_statement                shift and go to state 10
    this_assign                    shift and go to state 11
    switch                         shift and go to state 12
    return                         shift and go to state 13
    while                          shift and go to state 14
    for                            shift and go to state 15
    try_catch                      shift and go to state 16
    function                       shift and go to state 18
    function_call                  shift and go to state 19
    ifblock                        shift and go to state 20
    increment                      shift and go to state 25
    if                             shift and go to state 34

state 294

    (17) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 323


state 295

    (20) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 324


state 296

    (21) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE . statements RBRACE
    (26) statements -> . statement
    (27) statements -> . statement statements
    (30) statement -> . assignment_statement
    (31) statement -> . class_statement
    (32) statement -> . print_statement
    (33) statement -> . this_assign
    (34) statement -> . switch
    (35) statement -> . return
    (36) statement -> . while
    (37) statement -> . for
    (38) statement -> . try_catch
    (39) statement -> . PASS SEMICOLON
    (40) statement -> . ACCESS assignment_statement
    (41) statement -> . function
    (42) statement -> . function_call
    (43) statement -> . ifblock
    (44) statement -> . BREAK SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (91) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (7) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (45) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (109) return -> . RETURN IDENTIFIER SEMICOLON
    (110) return -> . RETURN SEMICOLON
    (111) return -> . RETURN expression SEMICOLON
    (50) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (124) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (129) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (28) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (29) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (116) ifblock -> . if
    (117) ifblock -> . if else
    (118) ifblock -> . if else_if
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 17
    ACCESS          shift and go to state 137
    BREAK           shift and go to state 21
    RETURNTYPE      shift and go to state 22
    IDENTIFIER      shift and go to state 7
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    SOP             shift and go to state 26
    THIS            shift and go to state 27
    SWITCH          shift and go to state 28
    RETURN          shift and go to state 29
    WHILE           shift and go to state 30
    FOR             shift and go to state 31
    TRY             shift and go to state 32
    STATIC          shift and go to state 33
    IF              shift and go to state 35

    statements                     shift and go to state 325
    statement                      shift and go to state 136
    assignment_statement           shift and go to state 8
    class_statement                shift and go to state 9
    print_statement                shift and go to state 10
    this_assign                    shift and go to state 11
    switch                         shift and go to state 12
    return                         shift and go to state 13
    while                          shift and go to state 14
    for                            shift and go to state 15
    try_catch                      shift and go to state 16
    function                       shift and go to state 18
    function_call                  shift and go to state 19
    ifblock                        shift and go to state 20
    increment                      shift and go to state 25
    if                             shift and go to state 34

state 297

    (12) constructor -> ACCESS IDENTIFIER LPAREN parameters . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 326


state 298

    (13) constructor -> ACCESS IDENTIFIER LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 327


state 299

    (58) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 328


state 300

    (60) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values . RPAREN SEMICOLON

    RPAREN          shift and go to state 329


state 301

    (59) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 330


state 302

    (61) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 331


state 303

    (88) assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .

    ACCESS          reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    CLASS           reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    PASS            reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    BREAK           reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    RETURNTYPE      reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    IDENTIFIER      reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    PLUS            reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    MINUS           reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    SOP             reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    THIS            reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    SWITCH          reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    RETURN          reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    WHILE           reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    FOR             reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    TRY             reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    STATIC          reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    IF              reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    $end            reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    LPAREN          reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    NUMBER          reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    STRING          reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    CHAR            reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    TRUE            reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    FALSE           reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    RBRACE          reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    CASE            reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    DEFAULT         reduce using rule 88 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)


state 304

    (113) items -> item COMMA items .

    RBRACE          reduce using rule 113 (items -> item COMMA items .)


state 305

    (85) assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 332


state 306

    (89) assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays . SEMICOLON

    SEMICOLON       shift and go to state 333


state 307

    (25) parameter -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER .

    COMMA           reduce using rule 25 (parameter -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER .)
    RPAREN          reduce using rule 25 (parameter -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER .)


state 308

    (14) function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 334


state 309

    (15) function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 15 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    CLASS           reduce using rule 15 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 15 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 15 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 15 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 15 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 15 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 15 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 15 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 15 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 15 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 15 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 15 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 15 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 15 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 15 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 15 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 15 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 15 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 15 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 15 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)


state 310

    (86) assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 335


state 311

    (90) assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays . SEMICOLON

    SEMICOLON       shift and go to state 336


state 312

    (45) switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .

    ACCESS          reduce using rule 45 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    CLASS           reduce using rule 45 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    PASS            reduce using rule 45 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    BREAK           reduce using rule 45 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    RETURNTYPE      reduce using rule 45 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    IDENTIFIER      reduce using rule 45 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    PLUS            reduce using rule 45 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    MINUS           reduce using rule 45 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    SOP             reduce using rule 45 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    THIS            reduce using rule 45 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    SWITCH          reduce using rule 45 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    RETURN          reduce using rule 45 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    WHILE           reduce using rule 45 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    FOR             reduce using rule 45 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    TRY             reduce using rule 45 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    STATIC          reduce using rule 45 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    IF              reduce using rule 45 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    $end            reduce using rule 45 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    RBRACE          reduce using rule 45 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    CASE            reduce using rule 45 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    DEFAULT         reduce using rule 45 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)


state 313

    (47) cases -> case cases .

    RBRACE          reduce using rule 47 (cases -> case cases .)


state 314

    (48) case -> CASE NUMBER . COLON statements

    COLON           shift and go to state 337


state 315

    (49) case -> DEFAULT COLON . statements
    (26) statements -> . statement
    (27) statements -> . statement statements
    (30) statement -> . assignment_statement
    (31) statement -> . class_statement
    (32) statement -> . print_statement
    (33) statement -> . this_assign
    (34) statement -> . switch
    (35) statement -> . return
    (36) statement -> . while
    (37) statement -> . for
    (38) statement -> . try_catch
    (39) statement -> . PASS SEMICOLON
    (40) statement -> . ACCESS assignment_statement
    (41) statement -> . function
    (42) statement -> . function_call
    (43) statement -> . ifblock
    (44) statement -> . BREAK SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (91) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (7) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (45) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (109) return -> . RETURN IDENTIFIER SEMICOLON
    (110) return -> . RETURN SEMICOLON
    (111) return -> . RETURN expression SEMICOLON
    (50) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (124) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (129) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (28) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (29) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (116) ifblock -> . if
    (117) ifblock -> . if else
    (118) ifblock -> . if else_if
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 17
    ACCESS          shift and go to state 137
    BREAK           shift and go to state 21
    RETURNTYPE      shift and go to state 22
    IDENTIFIER      shift and go to state 7
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    SOP             shift and go to state 26
    THIS            shift and go to state 27
    SWITCH          shift and go to state 28
    RETURN          shift and go to state 29
    WHILE           shift and go to state 30
    FOR             shift and go to state 31
    TRY             shift and go to state 32
    STATIC          shift and go to state 33
    IF              shift and go to state 35

    statements                     shift and go to state 338
    statement                      shift and go to state 136
    assignment_statement           shift and go to state 8
    class_statement                shift and go to state 9
    print_statement                shift and go to state 10
    this_assign                    shift and go to state 11
    switch                         shift and go to state 12
    return                         shift and go to state 13
    while                          shift and go to state 14
    for                            shift and go to state 15
    try_catch                      shift and go to state 16
    function                       shift and go to state 18
    function_call                  shift and go to state 19
    ifblock                        shift and go to state 20
    increment                      shift and go to state 25
    if                             shift and go to state 34

state 316

    (50) while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 50 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    CLASS           reduce using rule 50 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 50 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 50 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 50 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 50 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 50 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 50 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 50 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 50 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 50 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 50 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 50 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 50 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 50 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 50 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 50 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 50 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 50 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 50 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 50 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)


state 317

    (124) for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 339


state 318

    (129) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER . IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER . IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

    IDENTIFIER      shift and go to state 340


state 319

    (18) function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE . statements RBRACE
    (26) statements -> . statement
    (27) statements -> . statement statements
    (30) statement -> . assignment_statement
    (31) statement -> . class_statement
    (32) statement -> . print_statement
    (33) statement -> . this_assign
    (34) statement -> . switch
    (35) statement -> . return
    (36) statement -> . while
    (37) statement -> . for
    (38) statement -> . try_catch
    (39) statement -> . PASS SEMICOLON
    (40) statement -> . ACCESS assignment_statement
    (41) statement -> . function
    (42) statement -> . function_call
    (43) statement -> . ifblock
    (44) statement -> . BREAK SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (91) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (7) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (45) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (109) return -> . RETURN IDENTIFIER SEMICOLON
    (110) return -> . RETURN SEMICOLON
    (111) return -> . RETURN expression SEMICOLON
    (50) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (124) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (129) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (28) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (29) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (116) ifblock -> . if
    (117) ifblock -> . if else
    (118) ifblock -> . if else_if
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 17
    ACCESS          shift and go to state 137
    BREAK           shift and go to state 21
    RETURNTYPE      shift and go to state 22
    IDENTIFIER      shift and go to state 7
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    SOP             shift and go to state 26
    THIS            shift and go to state 27
    SWITCH          shift and go to state 28
    RETURN          shift and go to state 29
    WHILE           shift and go to state 30
    FOR             shift and go to state 31
    TRY             shift and go to state 32
    STATIC          shift and go to state 33
    IF              shift and go to state 35

    statements                     shift and go to state 341
    statement                      shift and go to state 136
    assignment_statement           shift and go to state 8
    class_statement                shift and go to state 9
    print_statement                shift and go to state 10
    this_assign                    shift and go to state 11
    switch                         shift and go to state 12
    return                         shift and go to state 13
    while                          shift and go to state 14
    for                            shift and go to state 15
    try_catch                      shift and go to state 16
    function                       shift and go to state 18
    function_call                  shift and go to state 19
    ifblock                        shift and go to state 20
    increment                      shift and go to state 25
    if                             shift and go to state 34

state 320

    (19) function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 342


state 321

    (119) if -> IF LPAREN params RPAREN LBRACE statements RBRACE .

    ELSE            reduce using rule 119 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    ACCESS          reduce using rule 119 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    CLASS           reduce using rule 119 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 119 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 119 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 119 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 119 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 119 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 119 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 119 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 119 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 119 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 119 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 119 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 119 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 119 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 119 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 119 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 119 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 119 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 119 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 119 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)


state 322

    (16) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 343


state 323

    (17) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 17 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    CLASS           reduce using rule 17 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 17 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 17 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 17 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 17 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 17 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 17 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 17 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 17 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 17 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 17 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 17 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 17 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 17 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 17 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 17 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 17 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 17 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 17 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 17 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)


state 324

    (20) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE . statements RBRACE
    (26) statements -> . statement
    (27) statements -> . statement statements
    (30) statement -> . assignment_statement
    (31) statement -> . class_statement
    (32) statement -> . print_statement
    (33) statement -> . this_assign
    (34) statement -> . switch
    (35) statement -> . return
    (36) statement -> . while
    (37) statement -> . for
    (38) statement -> . try_catch
    (39) statement -> . PASS SEMICOLON
    (40) statement -> . ACCESS assignment_statement
    (41) statement -> . function
    (42) statement -> . function_call
    (43) statement -> . ifblock
    (44) statement -> . BREAK SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (91) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (7) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (45) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (109) return -> . RETURN IDENTIFIER SEMICOLON
    (110) return -> . RETURN SEMICOLON
    (111) return -> . RETURN expression SEMICOLON
    (50) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (124) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (129) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (28) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (29) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (116) ifblock -> . if
    (117) ifblock -> . if else
    (118) ifblock -> . if else_if
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 17
    ACCESS          shift and go to state 137
    BREAK           shift and go to state 21
    RETURNTYPE      shift and go to state 22
    IDENTIFIER      shift and go to state 7
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    SOP             shift and go to state 26
    THIS            shift and go to state 27
    SWITCH          shift and go to state 28
    RETURN          shift and go to state 29
    WHILE           shift and go to state 30
    FOR             shift and go to state 31
    TRY             shift and go to state 32
    STATIC          shift and go to state 33
    IF              shift and go to state 35

    statements                     shift and go to state 344
    statement                      shift and go to state 136
    assignment_statement           shift and go to state 8
    class_statement                shift and go to state 9
    print_statement                shift and go to state 10
    this_assign                    shift and go to state 11
    switch                         shift and go to state 12
    return                         shift and go to state 13
    while                          shift and go to state 14
    for                            shift and go to state 15
    try_catch                      shift and go to state 16
    function                       shift and go to state 18
    function_call                  shift and go to state 19
    ifblock                        shift and go to state 20
    increment                      shift and go to state 25
    if                             shift and go to state 34

state 325

    (21) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 345


state 326

    (12) constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 346


state 327

    (13) constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE . statements RBRACE
    (26) statements -> . statement
    (27) statements -> . statement statements
    (30) statement -> . assignment_statement
    (31) statement -> . class_statement
    (32) statement -> . print_statement
    (33) statement -> . this_assign
    (34) statement -> . switch
    (35) statement -> . return
    (36) statement -> . while
    (37) statement -> . for
    (38) statement -> . try_catch
    (39) statement -> . PASS SEMICOLON
    (40) statement -> . ACCESS assignment_statement
    (41) statement -> . function
    (42) statement -> . function_call
    (43) statement -> . ifblock
    (44) statement -> . BREAK SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (91) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (7) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (45) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (109) return -> . RETURN IDENTIFIER SEMICOLON
    (110) return -> . RETURN SEMICOLON
    (111) return -> . RETURN expression SEMICOLON
    (50) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (124) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (129) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (28) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (29) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (116) ifblock -> . if
    (117) ifblock -> . if else
    (118) ifblock -> . if else_if
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 17
    ACCESS          shift and go to state 137
    BREAK           shift and go to state 21
    RETURNTYPE      shift and go to state 22
    IDENTIFIER      shift and go to state 7
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    SOP             shift and go to state 26
    THIS            shift and go to state 27
    SWITCH          shift and go to state 28
    RETURN          shift and go to state 29
    WHILE           shift and go to state 30
    FOR             shift and go to state 31
    TRY             shift and go to state 32
    STATIC          shift and go to state 33
    IF              shift and go to state 35

    statements                     shift and go to state 347
    statement                      shift and go to state 136
    assignment_statement           shift and go to state 8
    class_statement                shift and go to state 9
    print_statement                shift and go to state 10
    this_assign                    shift and go to state 11
    switch                         shift and go to state 12
    return                         shift and go to state 13
    while                          shift and go to state 14
    for                            shift and go to state 15
    try_catch                      shift and go to state 16
    function                       shift and go to state 18
    function_call                  shift and go to state 19
    ifblock                        shift and go to state 20
    increment                      shift and go to state 25
    if                             shift and go to state 34

state 328

    (58) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .

    ACCESS          reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    CLASS           reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    PASS            reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    RETURNTYPE      reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    PLUS            reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    MINUS           reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    SOP             reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    THIS            reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    SWITCH          reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    TRY             reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    STATIC          reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    CASE            reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)


state 329

    (60) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 348


state 330

    (59) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .

    ACCESS          reduce using rule 59 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    CLASS           reduce using rule 59 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    PASS            reduce using rule 59 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    BREAK           reduce using rule 59 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    RETURNTYPE      reduce using rule 59 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 59 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    PLUS            reduce using rule 59 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    MINUS           reduce using rule 59 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SOP             reduce using rule 59 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    THIS            reduce using rule 59 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SWITCH          reduce using rule 59 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    RETURN          reduce using rule 59 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    WHILE           reduce using rule 59 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    FOR             reduce using rule 59 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    TRY             reduce using rule 59 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    STATIC          reduce using rule 59 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    IF              reduce using rule 59 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    $end            reduce using rule 59 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 59 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    CASE            reduce using rule 59 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    DEFAULT         reduce using rule 59 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)


state 331

    (61) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 349


state 332

    (85) assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .

    ACCESS          reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    CLASS           reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    PASS            reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    BREAK           reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    RETURNTYPE      reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    IDENTIFIER      reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    PLUS            reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    MINUS           reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    SOP             reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    THIS            reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    SWITCH          reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    RETURN          reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    WHILE           reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    FOR             reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    TRY             reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    STATIC          reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    IF              reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    $end            reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    LPAREN          reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    NUMBER          reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    STRING          reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    CHAR            reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    TRUE            reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    FALSE           reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    RBRACE          reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    CASE            reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    DEFAULT         reduce using rule 85 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)


state 333

    (89) assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .

    ACCESS          reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    CLASS           reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    PASS            reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    BREAK           reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    RETURNTYPE      reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    IDENTIFIER      reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    PLUS            reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    MINUS           reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    SOP             reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    THIS            reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    SWITCH          reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    RETURN          reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    WHILE           reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    FOR             reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    TRY             reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    STATIC          reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    IF              reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    $end            reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    LPAREN          reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    NUMBER          reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    STRING          reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    CHAR            reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    TRUE            reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    FALSE           reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    RBRACE          reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    CASE            reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    DEFAULT         reduce using rule 89 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)


state 334

    (14) function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CLASS           reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 335

    (86) assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .

    ACCESS          reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    CLASS           reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    PASS            reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    BREAK           reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    RETURNTYPE      reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    IDENTIFIER      reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    PLUS            reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    MINUS           reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    SOP             reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    THIS            reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    SWITCH          reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    RETURN          reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    WHILE           reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    FOR             reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    TRY             reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    STATIC          reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    IF              reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    $end            reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    LPAREN          reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    NUMBER          reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    STRING          reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    CHAR            reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    TRUE            reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    FALSE           reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    RBRACE          reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    CASE            reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    DEFAULT         reduce using rule 86 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)


state 336

    (90) assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .

    ACCESS          reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    CLASS           reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    PASS            reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    BREAK           reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    RETURNTYPE      reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    IDENTIFIER      reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    PLUS            reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    MINUS           reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    SOP             reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    THIS            reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    SWITCH          reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    RETURN          reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    WHILE           reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    FOR             reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    TRY             reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    STATIC          reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    IF              reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    $end            reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    LPAREN          reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    NUMBER          reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    STRING          reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    CHAR            reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    TRUE            reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    FALSE           reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    RBRACE          reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    CASE            reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    DEFAULT         reduce using rule 90 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)


state 337

    (48) case -> CASE NUMBER COLON . statements
    (26) statements -> . statement
    (27) statements -> . statement statements
    (30) statement -> . assignment_statement
    (31) statement -> . class_statement
    (32) statement -> . print_statement
    (33) statement -> . this_assign
    (34) statement -> . switch
    (35) statement -> . return
    (36) statement -> . while
    (37) statement -> . for
    (38) statement -> . try_catch
    (39) statement -> . PASS SEMICOLON
    (40) statement -> . ACCESS assignment_statement
    (41) statement -> . function
    (42) statement -> . function_call
    (43) statement -> . ifblock
    (44) statement -> . BREAK SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (91) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (7) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (45) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (109) return -> . RETURN IDENTIFIER SEMICOLON
    (110) return -> . RETURN SEMICOLON
    (111) return -> . RETURN expression SEMICOLON
    (50) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (124) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (129) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (28) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (29) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (116) ifblock -> . if
    (117) ifblock -> . if else
    (118) ifblock -> . if else_if
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 17
    ACCESS          shift and go to state 137
    BREAK           shift and go to state 21
    RETURNTYPE      shift and go to state 22
    IDENTIFIER      shift and go to state 7
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    SOP             shift and go to state 26
    THIS            shift and go to state 27
    SWITCH          shift and go to state 28
    RETURN          shift and go to state 29
    WHILE           shift and go to state 30
    FOR             shift and go to state 31
    TRY             shift and go to state 32
    STATIC          shift and go to state 33
    IF              shift and go to state 35

    statements                     shift and go to state 350
    statement                      shift and go to state 136
    assignment_statement           shift and go to state 8
    class_statement                shift and go to state 9
    print_statement                shift and go to state 10
    this_assign                    shift and go to state 11
    switch                         shift and go to state 12
    return                         shift and go to state 13
    while                          shift and go to state 14
    for                            shift and go to state 15
    try_catch                      shift and go to state 16
    function                       shift and go to state 18
    function_call                  shift and go to state 19
    ifblock                        shift and go to state 20
    increment                      shift and go to state 25
    if                             shift and go to state 34

state 338

    (49) case -> DEFAULT COLON statements .

    CASE            reduce using rule 49 (case -> DEFAULT COLON statements .)
    DEFAULT         reduce using rule 49 (case -> DEFAULT COLON statements .)
    RBRACE          reduce using rule 49 (case -> DEFAULT COLON statements .)


state 339

    (124) for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE . statements RBRACE
    (26) statements -> . statement
    (27) statements -> . statement statements
    (30) statement -> . assignment_statement
    (31) statement -> . class_statement
    (32) statement -> . print_statement
    (33) statement -> . this_assign
    (34) statement -> . switch
    (35) statement -> . return
    (36) statement -> . while
    (37) statement -> . for
    (38) statement -> . try_catch
    (39) statement -> . PASS SEMICOLON
    (40) statement -> . ACCESS assignment_statement
    (41) statement -> . function
    (42) statement -> . function_call
    (43) statement -> . ifblock
    (44) statement -> . BREAK SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (91) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (7) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (45) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (109) return -> . RETURN IDENTIFIER SEMICOLON
    (110) return -> . RETURN SEMICOLON
    (111) return -> . RETURN expression SEMICOLON
    (50) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (124) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (129) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (28) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (29) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (116) ifblock -> . if
    (117) ifblock -> . if else
    (118) ifblock -> . if else_if
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 17
    ACCESS          shift and go to state 137
    BREAK           shift and go to state 21
    RETURNTYPE      shift and go to state 22
    IDENTIFIER      shift and go to state 7
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    SOP             shift and go to state 26
    THIS            shift and go to state 27
    SWITCH          shift and go to state 28
    RETURN          shift and go to state 29
    WHILE           shift and go to state 30
    FOR             shift and go to state 31
    TRY             shift and go to state 32
    STATIC          shift and go to state 33
    IF              shift and go to state 35

    assignment_statement           shift and go to state 8
    increment                      shift and go to state 25
    statements                     shift and go to state 351
    statement                      shift and go to state 136
    class_statement                shift and go to state 9
    print_statement                shift and go to state 10
    this_assign                    shift and go to state 11
    switch                         shift and go to state 12
    return                         shift and go to state 13
    while                          shift and go to state 14
    for                            shift and go to state 15
    try_catch                      shift and go to state 16
    function                       shift and go to state 18
    function_call                  shift and go to state 19
    ifblock                        shift and go to state 20
    if                             shift and go to state 34

state 340

    (129) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER . RPAREN LBRACE statements RBRACE
    (130) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER . RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

    RPAREN          shift and go to state 352


state 341

    (18) function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 353


state 342

    (19) function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 19 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    CLASS           reduce using rule 19 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 19 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 19 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 19 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 19 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 19 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 19 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 19 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 19 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 19 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 19 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 19 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 19 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 19 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 19 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 19 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 19 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 19 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 19 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 19 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)


state 343

    (16) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CLASS           reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 344

    (20) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 354


state 345

    (21) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 21 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    CLASS           reduce using rule 21 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 21 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 21 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 21 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 21 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 21 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 21 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 21 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 21 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 21 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 21 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 21 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 21 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 21 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 21 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 21 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 21 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 21 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 21 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 21 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)


state 346

    (12) constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE . statements RBRACE
    (26) statements -> . statement
    (27) statements -> . statement statements
    (30) statement -> . assignment_statement
    (31) statement -> . class_statement
    (32) statement -> . print_statement
    (33) statement -> . this_assign
    (34) statement -> . switch
    (35) statement -> . return
    (36) statement -> . while
    (37) statement -> . for
    (38) statement -> . try_catch
    (39) statement -> . PASS SEMICOLON
    (40) statement -> . ACCESS assignment_statement
    (41) statement -> . function
    (42) statement -> . function_call
    (43) statement -> . ifblock
    (44) statement -> . BREAK SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (91) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (7) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (45) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (109) return -> . RETURN IDENTIFIER SEMICOLON
    (110) return -> . RETURN SEMICOLON
    (111) return -> . RETURN expression SEMICOLON
    (50) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (124) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (129) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (28) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (29) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (116) ifblock -> . if
    (117) ifblock -> . if else
    (118) ifblock -> . if else_if
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 17
    ACCESS          shift and go to state 137
    BREAK           shift and go to state 21
    RETURNTYPE      shift and go to state 22
    IDENTIFIER      shift and go to state 7
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    SOP             shift and go to state 26
    THIS            shift and go to state 27
    SWITCH          shift and go to state 28
    RETURN          shift and go to state 29
    WHILE           shift and go to state 30
    FOR             shift and go to state 31
    TRY             shift and go to state 32
    STATIC          shift and go to state 33
    IF              shift and go to state 35

    statements                     shift and go to state 355
    statement                      shift and go to state 136
    assignment_statement           shift and go to state 8
    class_statement                shift and go to state 9
    print_statement                shift and go to state 10
    this_assign                    shift and go to state 11
    switch                         shift and go to state 12
    return                         shift and go to state 13
    while                          shift and go to state 14
    for                            shift and go to state 15
    try_catch                      shift and go to state 16
    function                       shift and go to state 18
    function_call                  shift and go to state 19
    ifblock                        shift and go to state 20
    increment                      shift and go to state 25
    if                             shift and go to state 34

state 347

    (13) constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 356


state 348

    (60) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON .

    ACCESS          reduce using rule 60 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON .)
    CLASS           reduce using rule 60 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON .)
    PASS            reduce using rule 60 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON .)
    BREAK           reduce using rule 60 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON .)
    RETURNTYPE      reduce using rule 60 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 60 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON .)
    PLUS            reduce using rule 60 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON .)
    MINUS           reduce using rule 60 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON .)
    SOP             reduce using rule 60 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON .)
    THIS            reduce using rule 60 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON .)
    SWITCH          reduce using rule 60 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON .)
    RETURN          reduce using rule 60 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON .)
    WHILE           reduce using rule 60 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON .)
    FOR             reduce using rule 60 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON .)
    TRY             reduce using rule 60 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON .)
    STATIC          reduce using rule 60 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON .)
    IF              reduce using rule 60 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON .)
    $end            reduce using rule 60 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON .)
    RBRACE          reduce using rule 60 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON .)
    CASE            reduce using rule 60 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 60 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON .)


state 349

    (61) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .

    ACCESS          reduce using rule 61 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    CLASS           reduce using rule 61 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    PASS            reduce using rule 61 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    BREAK           reduce using rule 61 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    RETURNTYPE      reduce using rule 61 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 61 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    PLUS            reduce using rule 61 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    MINUS           reduce using rule 61 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    SOP             reduce using rule 61 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    THIS            reduce using rule 61 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    SWITCH          reduce using rule 61 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    RETURN          reduce using rule 61 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    WHILE           reduce using rule 61 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    FOR             reduce using rule 61 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    TRY             reduce using rule 61 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    STATIC          reduce using rule 61 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    IF              reduce using rule 61 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    $end            reduce using rule 61 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 61 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    CASE            reduce using rule 61 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    DEFAULT         reduce using rule 61 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)


state 350

    (48) case -> CASE NUMBER COLON statements .

    CASE            reduce using rule 48 (case -> CASE NUMBER COLON statements .)
    DEFAULT         reduce using rule 48 (case -> CASE NUMBER COLON statements .)
    RBRACE          reduce using rule 48 (case -> CASE NUMBER COLON statements .)


state 351

    (124) for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 357


state 352

    (129) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN . LBRACE statements RBRACE
    (130) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN . LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

    LBRACE          shift and go to state 358


state 353

    (18) function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CLASS           reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 354

    (20) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CLASS           reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 355

    (12) constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 359


state 356

    (13) constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 13 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 13 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 13 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 13 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 13 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 13 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 13 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 13 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 13 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 13 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 13 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 13 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 13 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 13 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 13 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 13 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 13 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)


state 357

    (124) for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 124 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    CLASS           reduce using rule 124 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 124 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 124 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 124 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 124 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 124 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 124 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 124 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 124 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 124 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 124 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 124 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 124 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 124 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 124 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 124 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 124 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 124 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 124 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 124 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)


state 358

    (129) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE . statements RBRACE
    (130) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE . statements RBRACE FINALLY LBRACE statements RBRACE
    (26) statements -> . statement
    (27) statements -> . statement statements
    (30) statement -> . assignment_statement
    (31) statement -> . class_statement
    (32) statement -> . print_statement
    (33) statement -> . this_assign
    (34) statement -> . switch
    (35) statement -> . return
    (36) statement -> . while
    (37) statement -> . for
    (38) statement -> . try_catch
    (39) statement -> . PASS SEMICOLON
    (40) statement -> . ACCESS assignment_statement
    (41) statement -> . function
    (42) statement -> . function_call
    (43) statement -> . ifblock
    (44) statement -> . BREAK SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (91) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (7) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (45) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (109) return -> . RETURN IDENTIFIER SEMICOLON
    (110) return -> . RETURN SEMICOLON
    (111) return -> . RETURN expression SEMICOLON
    (50) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (124) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (129) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (28) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (29) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (116) ifblock -> . if
    (117) ifblock -> . if else
    (118) ifblock -> . if else_if
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 17
    ACCESS          shift and go to state 137
    BREAK           shift and go to state 21
    RETURNTYPE      shift and go to state 22
    IDENTIFIER      shift and go to state 7
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    SOP             shift and go to state 26
    THIS            shift and go to state 27
    SWITCH          shift and go to state 28
    RETURN          shift and go to state 29
    WHILE           shift and go to state 30
    FOR             shift and go to state 31
    TRY             shift and go to state 32
    STATIC          shift and go to state 33
    IF              shift and go to state 35

    statements                     shift and go to state 360
    statement                      shift and go to state 136
    assignment_statement           shift and go to state 8
    class_statement                shift and go to state 9
    print_statement                shift and go to state 10
    this_assign                    shift and go to state 11
    switch                         shift and go to state 12
    return                         shift and go to state 13
    while                          shift and go to state 14
    for                            shift and go to state 15
    try_catch                      shift and go to state 16
    function                       shift and go to state 18
    function_call                  shift and go to state 19
    ifblock                        shift and go to state 20
    increment                      shift and go to state 25
    if                             shift and go to state 34

state 359

    (12) constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 360

    (129) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements . RBRACE
    (130) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements . RBRACE FINALLY LBRACE statements RBRACE

    RBRACE          shift and go to state 361


state 361

    (129) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .
    (130) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE . FINALLY LBRACE statements RBRACE

    ACCESS          reduce using rule 129 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    CLASS           reduce using rule 129 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 129 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 129 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 129 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 129 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 129 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 129 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 129 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 129 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 129 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 129 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 129 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 129 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 129 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 129 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 129 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 129 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 129 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 129 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 129 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    FINALLY         shift and go to state 362


state 362

    (130) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY . LBRACE statements RBRACE

    LBRACE          shift and go to state 363


state 363

    (130) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE . statements RBRACE
    (26) statements -> . statement
    (27) statements -> . statement statements
    (30) statement -> . assignment_statement
    (31) statement -> . class_statement
    (32) statement -> . print_statement
    (33) statement -> . this_assign
    (34) statement -> . switch
    (35) statement -> . return
    (36) statement -> . while
    (37) statement -> . for
    (38) statement -> . try_catch
    (39) statement -> . PASS SEMICOLON
    (40) statement -> . ACCESS assignment_statement
    (41) statement -> . function
    (42) statement -> . function_call
    (43) statement -> . ifblock
    (44) statement -> . BREAK SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (72) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (73) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (74) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (79) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (80) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (81) assignment_statement -> . increment SEMICOLON
    (82) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (83) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (84) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (85) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (88) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (89) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (90) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (59) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (60) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN values RPAREN SEMICOLON
    (61) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (91) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (92) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (7) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (45) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (109) return -> . RETURN IDENTIFIER SEMICOLON
    (110) return -> . RETURN SEMICOLON
    (111) return -> . RETURN expression SEMICOLON
    (50) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (124) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (129) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (130) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (15) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (17) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (19) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (21) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (28) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (29) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (116) ifblock -> . if
    (117) ifblock -> . if else
    (118) ifblock -> . if else_if
    (125) increment -> . PLUS PLUS IDENTIFIER
    (126) increment -> . MINUS MINUS IDENTIFIER
    (127) increment -> . IDENTIFIER PLUS PLUS
    (128) increment -> . IDENTIFIER MINUS MINUS
    (119) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 17
    ACCESS          shift and go to state 137
    BREAK           shift and go to state 21
    RETURNTYPE      shift and go to state 22
    IDENTIFIER      shift and go to state 7
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    SOP             shift and go to state 26
    THIS            shift and go to state 27
    SWITCH          shift and go to state 28
    RETURN          shift and go to state 29
    WHILE           shift and go to state 30
    FOR             shift and go to state 31
    TRY             shift and go to state 32
    STATIC          shift and go to state 33
    IF              shift and go to state 35

    statements                     shift and go to state 364
    statement                      shift and go to state 136
    assignment_statement           shift and go to state 8
    class_statement                shift and go to state 9
    print_statement                shift and go to state 10
    this_assign                    shift and go to state 11
    switch                         shift and go to state 12
    return                         shift and go to state 13
    while                          shift and go to state 14
    for                            shift and go to state 15
    try_catch                      shift and go to state 16
    function                       shift and go to state 18
    function_call                  shift and go to state 19
    ifblock                        shift and go to state 20
    increment                      shift and go to state 25
    if                             shift and go to state 34

state 364

    (130) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements . RBRACE

    RBRACE          shift and go to state 365


state 365

    (130) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .

    ACCESS          reduce using rule 130 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    CLASS           reduce using rule 130 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    PASS            reduce using rule 130 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    BREAK           reduce using rule 130 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 130 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 130 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    PLUS            reduce using rule 130 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    MINUS           reduce using rule 130 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    SOP             reduce using rule 130 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    THIS            reduce using rule 130 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    SWITCH          reduce using rule 130 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    RETURN          reduce using rule 130 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    WHILE           reduce using rule 130 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    FOR             reduce using rule 130 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    TRY             reduce using rule 130 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    STATIC          reduce using rule 130 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    IF              reduce using rule 130 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    $end            reduce using rule 130 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    RBRACE          reduce using rule 130 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    CASE            reduce using rule 130 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 130 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 62 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 98 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 98 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 190 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 190 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 190 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 190 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 191 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 191 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 191 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 191 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 192 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 192 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 192 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 192 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 193 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 193 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 193 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 193 resolved as shift
