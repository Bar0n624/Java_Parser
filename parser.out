Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programs
Rule 1     programs -> program
Rule 2     programs -> program programs
Rule 3     program -> class
Rule 4     program -> statement
Rule 5     class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE
Rule 6     this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
Rule 7     stats -> stat
Rule 8     stats -> stat stats
Rule 9     stat -> constructor
Rule 10    stat -> statement
Rule 11    constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 12    constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
Rule 13    function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 14    function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
Rule 15    function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 16    function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
Rule 17    function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 18    function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
Rule 19    function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 20    function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
Rule 21    parameters -> parameter
Rule 22    parameters -> parameter COMMA parameters
Rule 23    parameter -> RETURNTYPE IDENTIFIER
Rule 24    parameter -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER
Rule 25    statements -> statement
Rule 26    statements -> statement statements
Rule 27    function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON
Rule 28    function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON
Rule 29    statement -> assignment_statement
Rule 30    statement -> class_statement
Rule 31    statement -> print_statement
Rule 32    statement -> this_assign
Rule 33    statement -> switch
Rule 34    statement -> return
Rule 35    statement -> while
Rule 36    statement -> for
Rule 37    statement -> try_catch
Rule 38    statement -> PASS SEMICOLON
Rule 39    statement -> ACCESS assignment_statement
Rule 40    statement -> function
Rule 41    statement -> function_call
Rule 42    statement -> ifblock
Rule 43    statement -> BREAK SEMICOLON
Rule 44    switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
Rule 45    cases -> case
Rule 46    cases -> case cases
Rule 47    case -> CASE NUMBER SEMI statements
Rule 48    case -> DEFAULT SEMI statements
Rule 49    while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE
Rule 50    params -> param
Rule 51    params -> param LOGICAL params
Rule 52    param -> IDENTIFIER
Rule 53    param -> NUMBER
Rule 54    class_statement -> IDENTIFIER IDENTIFIER SEMICOLON
Rule 55    class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
Rule 56    class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
Rule 57    class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
Rule 58    class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
Rule 59    assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
Rule 60    assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON
Rule 61    assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
Rule 62    assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
Rule 63    assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
Rule 64    assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
Rule 65    assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
Rule 66    assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON
Rule 67    assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON
Rule 68    assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON
Rule 69    assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON
Rule 70    assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
Rule 71    assignment_statement -> IDENTIFIER PLUS PLUS SEMICOLON
Rule 72    assignment_statement -> IDENTIFIER MINUS MINUS SEMICOLON
Rule 73    assignment_statement -> PLUS PLUS IDENTIFIER SEMICOLON
Rule 74    assignment_statement -> MINUS MINUS IDENTIFIER SEMICOLON
Rule 75    assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
Rule 76    assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
Rule 77    assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
Rule 78    assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
Rule 79    assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
Rule 80    assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
Rule 81    assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
Rule 82    print_statement -> SOP LPAREN expression RPAREN SEMICOLON
Rule 83    print_statement -> SOP LPAREN RPAREN SEMICOLON
Rule 84    expression -> IDENTIFIER
Rule 85    expression -> NUMBER
Rule 86    expression -> expression PLUS
Rule 87    expression -> expression MINUS
Rule 88    expression -> expression PLUS expression
Rule 89    expression -> expression MINUS expression
Rule 90    expression -> expression TIMES expression
Rule 91    expression -> expression DIVIDE expression
Rule 92    expression -> STRING
Rule 93    expression -> CHAR
Rule 94    return -> RETURN IDENTIFIER SEMICOLON
Rule 95    return -> RETURN SEMICOLON
Rule 96    return -> RETURN expression SEMICOLON
Rule 97    items -> item
Rule 98    items -> item COMMA items
Rule 99    item -> NUMBER
Rule 100   item -> CHAR
Rule 101   ifblock -> if
Rule 102   ifblock -> if else
Rule 103   ifblock -> if else_if
Rule 104   if -> IF LPAREN params RPAREN LBRACE statements RBRACE
Rule 105   else -> ELSE LBRACE statements RBRACE
Rule 106   else_if -> ELSE if
Rule 107   else_if -> ELSE if else_if
Rule 108   else_if -> ELSE if else
Rule 109   for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
Rule 110   increment -> PLUS PLUS IDENTIFIER
Rule 111   increment -> MINUS MINUS IDENTIFIER
Rule 112   increment -> IDENTIFIER PLUS PLUS
Rule 113   increment -> IDENTIFIER MINUS MINUS
Rule 114   try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
Rule 115   try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

Terminals, with rules where they appear

ACCESS               : 5 11 12 15 16 19 20 39
ASSIGN               : 6 55 56 57 58 59 61 62 63 64 66 67 68 69 70 75 76 77 78 79 80 81
BREAK                : 43
CASE                 : 47
CATCH                : 114 115
CHAR                 : 93 100
CLASS                : 5
COMMA                : 22 98
DEFAULT              : 48
DIVIDE               : 64 70 91
ELSE                 : 105 106 107 108
FINALLY              : 115
FOR                  : 109
IDENTIFIER           : 5 6 6 11 12 13 14 15 16 17 18 19 20 23 24 27 28 44 52 54 54 55 55 55 56 56 56 57 57 57 58 58 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 84 94 110 111 112 113 114 114 115 115
IF                   : 104
LBRACE               : 5 11 12 13 14 15 16 17 18 19 20 44 49 75 76 78 79 104 105 109 114 114 115 115 115
LBRACKET             : 24 56 58 75 76 77 78 79 80 80 81 81
LOGICAL              : 51
LPAREN               : 11 12 13 14 15 16 17 18 19 20 27 28 44 49 55 57 82 83 104 109 114 115
MINUS                : 62 68 72 72 74 74 87 89 111 111 113 113
NEW                  : 55 56 57 58 80 81
NUMBER               : 47 53 58 80 85 99
PASS                 : 38
PLUS                 : 61 65 65 67 71 71 73 73 86 88 110 110 112 112
RBRACE               : 5 11 12 13 14 15 16 17 18 19 20 44 49 75 76 78 79 104 105 109 114 114 115 115 115
RBRACKET             : 24 56 58 75 76 77 78 79 80 80 81 81
RETURN               : 94 95 96
RETURNTYPE           : 13 14 15 16 17 18 19 20 23 24 59 60 61 62 63 64 65 75 76 80 80 81 81
RPAREN               : 11 12 13 14 15 16 17 18 19 20 27 28 44 49 55 57 82 83 104 109 114 115
SEMI                 : 47 48
SEMICOLON            : 6 27 28 38 43 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 94 95 96 109
SOP                  : 82 83
STATIC               : 17 18 19 20
STRING               : 92
SWITCH               : 44
THIS                 : 6
TIMES                : 63 69 90
TRY                  : 114 115
WHILE                : 49
error                : 

Nonterminals, with rules where they appear

assignment_statement : 29 39 109
case                 : 45 46
cases                : 44 46
class                : 3
class_statement      : 30
constructor          : 9
else                 : 102 108
else_if              : 103 107
expression           : 59 61 62 63 64 66 67 68 69 70 77 77 78 82 86 87 88 88 89 89 90 90 91 91 96
for                  : 36
function             : 40
function_call        : 41
if                   : 101 102 103 106 107 108
ifblock              : 42
increment            : 109
item                 : 97 98
items                : 75 76 78 79 98
param                : 50 51
parameter            : 21 22
parameters           : 11 13 15 17 19 22
params               : 27 49 51 57 104 109
print_statement      : 31
program              : 1 2
programs             : 2 0
return               : 34
stat                 : 7 8
statement            : 4 10 25 26
statements           : 11 12 13 14 15 16 17 18 19 20 26 47 48 49 104 105 109 114 114 115 115 115
stats                : 5 8
switch               : 33
this_assign          : 32
try_catch            : 37
while                : 35

Parsing method: LALR

state 0

    (0) S' -> . programs
    (1) programs -> . program
    (2) programs -> . program programs
    (3) program -> . class
    (4) program -> . statement
    (5) class -> . ACCESS CLASS IDENTIFIER LBRACE stats RBRACE
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (82) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (83) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (94) return -> . RETURN IDENTIFIER SEMICOLON
    (95) return -> . RETURN SEMICOLON
    (96) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (109) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (114) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (101) ifblock -> . if
    (102) ifblock -> . if else
    (103) ifblock -> . if else_if
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    ACCESS          shift and go to state 5
    PASS            shift and go to state 16
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 24
    THIS            shift and go to state 25
    SWITCH          shift and go to state 26
    RETURN          shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    TRY             shift and go to state 30
    STATIC          shift and go to state 31
    IF              shift and go to state 33

    programs                       shift and go to state 1
    program                        shift and go to state 2
    class                          shift and go to state 3
    statement                      shift and go to state 4
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    if                             shift and go to state 32

state 1

    (0) S' -> programs .



state 2

    (1) programs -> program .
    (2) programs -> program . programs
    (1) programs -> . program
    (2) programs -> . program programs
    (3) program -> . class
    (4) program -> . statement
    (5) class -> . ACCESS CLASS IDENTIFIER LBRACE stats RBRACE
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (82) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (83) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (94) return -> . RETURN IDENTIFIER SEMICOLON
    (95) return -> . RETURN SEMICOLON
    (96) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (109) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (114) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (101) ifblock -> . if
    (102) ifblock -> . if else
    (103) ifblock -> . if else_if
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    $end            reduce using rule 1 (programs -> program .)
    ACCESS          shift and go to state 5
    PASS            shift and go to state 16
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 24
    THIS            shift and go to state 25
    SWITCH          shift and go to state 26
    RETURN          shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    TRY             shift and go to state 30
    STATIC          shift and go to state 31
    IF              shift and go to state 33

    program                        shift and go to state 2
    programs                       shift and go to state 34
    class                          shift and go to state 3
    statement                      shift and go to state 4
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    if                             shift and go to state 32

state 3

    (3) program -> class .

    ACCESS          reduce using rule 3 (program -> class .)
    PASS            reduce using rule 3 (program -> class .)
    BREAK           reduce using rule 3 (program -> class .)
    RETURNTYPE      reduce using rule 3 (program -> class .)
    IDENTIFIER      reduce using rule 3 (program -> class .)
    PLUS            reduce using rule 3 (program -> class .)
    MINUS           reduce using rule 3 (program -> class .)
    SOP             reduce using rule 3 (program -> class .)
    THIS            reduce using rule 3 (program -> class .)
    SWITCH          reduce using rule 3 (program -> class .)
    RETURN          reduce using rule 3 (program -> class .)
    WHILE           reduce using rule 3 (program -> class .)
    FOR             reduce using rule 3 (program -> class .)
    TRY             reduce using rule 3 (program -> class .)
    STATIC          reduce using rule 3 (program -> class .)
    IF              reduce using rule 3 (program -> class .)
    $end            reduce using rule 3 (program -> class .)


state 4

    (4) program -> statement .

    ACCESS          reduce using rule 4 (program -> statement .)
    PASS            reduce using rule 4 (program -> statement .)
    BREAK           reduce using rule 4 (program -> statement .)
    RETURNTYPE      reduce using rule 4 (program -> statement .)
    IDENTIFIER      reduce using rule 4 (program -> statement .)
    PLUS            reduce using rule 4 (program -> statement .)
    MINUS           reduce using rule 4 (program -> statement .)
    SOP             reduce using rule 4 (program -> statement .)
    THIS            reduce using rule 4 (program -> statement .)
    SWITCH          reduce using rule 4 (program -> statement .)
    RETURN          reduce using rule 4 (program -> statement .)
    WHILE           reduce using rule 4 (program -> statement .)
    FOR             reduce using rule 4 (program -> statement .)
    TRY             reduce using rule 4 (program -> statement .)
    STATIC          reduce using rule 4 (program -> statement .)
    IF              reduce using rule 4 (program -> statement .)
    $end            reduce using rule 4 (program -> statement .)


state 5

    (5) class -> ACCESS . CLASS IDENTIFIER LBRACE stats RBRACE
    (39) statement -> ACCESS . assignment_statement
    (15) function -> ACCESS . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> ACCESS . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> ACCESS . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> ACCESS . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON

    CLASS           shift and go to state 35
    RETURNTYPE      shift and go to state 38
    STATIC          shift and go to state 39
    IDENTIFIER      shift and go to state 36
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23

    assignment_statement           shift and go to state 37

state 6

    (66) assignment_statement -> IDENTIFIER . ASSIGN expression SEMICOLON
    (67) assignment_statement -> IDENTIFIER . PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> IDENTIFIER . MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> IDENTIFIER . TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> IDENTIFIER . DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> IDENTIFIER . PLUS PLUS SEMICOLON
    (72) assignment_statement -> IDENTIFIER . MINUS MINUS SEMICOLON
    (77) assignment_statement -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> IDENTIFIER . LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (54) class_statement -> IDENTIFIER . IDENTIFIER SEMICOLON
    (55) class_statement -> IDENTIFIER . IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> IDENTIFIER . IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> IDENTIFIER . IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> IDENTIFIER . IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (27) function_call -> IDENTIFIER . LPAREN params RPAREN SEMICOLON
    (28) function_call -> IDENTIFIER . LPAREN RPAREN SEMICOLON

    ASSIGN          shift and go to state 41
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    LBRACKET        shift and go to state 46
    IDENTIFIER      shift and go to state 40
    LPAREN          shift and go to state 47


state 7

    (29) statement -> assignment_statement .

    ACCESS          reduce using rule 29 (statement -> assignment_statement .)
    PASS            reduce using rule 29 (statement -> assignment_statement .)
    BREAK           reduce using rule 29 (statement -> assignment_statement .)
    RETURNTYPE      reduce using rule 29 (statement -> assignment_statement .)
    IDENTIFIER      reduce using rule 29 (statement -> assignment_statement .)
    PLUS            reduce using rule 29 (statement -> assignment_statement .)
    MINUS           reduce using rule 29 (statement -> assignment_statement .)
    SOP             reduce using rule 29 (statement -> assignment_statement .)
    THIS            reduce using rule 29 (statement -> assignment_statement .)
    SWITCH          reduce using rule 29 (statement -> assignment_statement .)
    RETURN          reduce using rule 29 (statement -> assignment_statement .)
    WHILE           reduce using rule 29 (statement -> assignment_statement .)
    FOR             reduce using rule 29 (statement -> assignment_statement .)
    TRY             reduce using rule 29 (statement -> assignment_statement .)
    STATIC          reduce using rule 29 (statement -> assignment_statement .)
    IF              reduce using rule 29 (statement -> assignment_statement .)
    $end            reduce using rule 29 (statement -> assignment_statement .)
    RBRACE          reduce using rule 29 (statement -> assignment_statement .)
    CASE            reduce using rule 29 (statement -> assignment_statement .)
    DEFAULT         reduce using rule 29 (statement -> assignment_statement .)


state 8

    (30) statement -> class_statement .

    ACCESS          reduce using rule 30 (statement -> class_statement .)
    PASS            reduce using rule 30 (statement -> class_statement .)
    BREAK           reduce using rule 30 (statement -> class_statement .)
    RETURNTYPE      reduce using rule 30 (statement -> class_statement .)
    IDENTIFIER      reduce using rule 30 (statement -> class_statement .)
    PLUS            reduce using rule 30 (statement -> class_statement .)
    MINUS           reduce using rule 30 (statement -> class_statement .)
    SOP             reduce using rule 30 (statement -> class_statement .)
    THIS            reduce using rule 30 (statement -> class_statement .)
    SWITCH          reduce using rule 30 (statement -> class_statement .)
    RETURN          reduce using rule 30 (statement -> class_statement .)
    WHILE           reduce using rule 30 (statement -> class_statement .)
    FOR             reduce using rule 30 (statement -> class_statement .)
    TRY             reduce using rule 30 (statement -> class_statement .)
    STATIC          reduce using rule 30 (statement -> class_statement .)
    IF              reduce using rule 30 (statement -> class_statement .)
    $end            reduce using rule 30 (statement -> class_statement .)
    RBRACE          reduce using rule 30 (statement -> class_statement .)
    CASE            reduce using rule 30 (statement -> class_statement .)
    DEFAULT         reduce using rule 30 (statement -> class_statement .)


state 9

    (31) statement -> print_statement .

    ACCESS          reduce using rule 31 (statement -> print_statement .)
    PASS            reduce using rule 31 (statement -> print_statement .)
    BREAK           reduce using rule 31 (statement -> print_statement .)
    RETURNTYPE      reduce using rule 31 (statement -> print_statement .)
    IDENTIFIER      reduce using rule 31 (statement -> print_statement .)
    PLUS            reduce using rule 31 (statement -> print_statement .)
    MINUS           reduce using rule 31 (statement -> print_statement .)
    SOP             reduce using rule 31 (statement -> print_statement .)
    THIS            reduce using rule 31 (statement -> print_statement .)
    SWITCH          reduce using rule 31 (statement -> print_statement .)
    RETURN          reduce using rule 31 (statement -> print_statement .)
    WHILE           reduce using rule 31 (statement -> print_statement .)
    FOR             reduce using rule 31 (statement -> print_statement .)
    TRY             reduce using rule 31 (statement -> print_statement .)
    STATIC          reduce using rule 31 (statement -> print_statement .)
    IF              reduce using rule 31 (statement -> print_statement .)
    $end            reduce using rule 31 (statement -> print_statement .)
    RBRACE          reduce using rule 31 (statement -> print_statement .)
    CASE            reduce using rule 31 (statement -> print_statement .)
    DEFAULT         reduce using rule 31 (statement -> print_statement .)


state 10

    (32) statement -> this_assign .

    ACCESS          reduce using rule 32 (statement -> this_assign .)
    PASS            reduce using rule 32 (statement -> this_assign .)
    BREAK           reduce using rule 32 (statement -> this_assign .)
    RETURNTYPE      reduce using rule 32 (statement -> this_assign .)
    IDENTIFIER      reduce using rule 32 (statement -> this_assign .)
    PLUS            reduce using rule 32 (statement -> this_assign .)
    MINUS           reduce using rule 32 (statement -> this_assign .)
    SOP             reduce using rule 32 (statement -> this_assign .)
    THIS            reduce using rule 32 (statement -> this_assign .)
    SWITCH          reduce using rule 32 (statement -> this_assign .)
    RETURN          reduce using rule 32 (statement -> this_assign .)
    WHILE           reduce using rule 32 (statement -> this_assign .)
    FOR             reduce using rule 32 (statement -> this_assign .)
    TRY             reduce using rule 32 (statement -> this_assign .)
    STATIC          reduce using rule 32 (statement -> this_assign .)
    IF              reduce using rule 32 (statement -> this_assign .)
    $end            reduce using rule 32 (statement -> this_assign .)
    RBRACE          reduce using rule 32 (statement -> this_assign .)
    CASE            reduce using rule 32 (statement -> this_assign .)
    DEFAULT         reduce using rule 32 (statement -> this_assign .)


state 11

    (33) statement -> switch .

    ACCESS          reduce using rule 33 (statement -> switch .)
    PASS            reduce using rule 33 (statement -> switch .)
    BREAK           reduce using rule 33 (statement -> switch .)
    RETURNTYPE      reduce using rule 33 (statement -> switch .)
    IDENTIFIER      reduce using rule 33 (statement -> switch .)
    PLUS            reduce using rule 33 (statement -> switch .)
    MINUS           reduce using rule 33 (statement -> switch .)
    SOP             reduce using rule 33 (statement -> switch .)
    THIS            reduce using rule 33 (statement -> switch .)
    SWITCH          reduce using rule 33 (statement -> switch .)
    RETURN          reduce using rule 33 (statement -> switch .)
    WHILE           reduce using rule 33 (statement -> switch .)
    FOR             reduce using rule 33 (statement -> switch .)
    TRY             reduce using rule 33 (statement -> switch .)
    STATIC          reduce using rule 33 (statement -> switch .)
    IF              reduce using rule 33 (statement -> switch .)
    $end            reduce using rule 33 (statement -> switch .)
    RBRACE          reduce using rule 33 (statement -> switch .)
    CASE            reduce using rule 33 (statement -> switch .)
    DEFAULT         reduce using rule 33 (statement -> switch .)


state 12

    (34) statement -> return .

    ACCESS          reduce using rule 34 (statement -> return .)
    PASS            reduce using rule 34 (statement -> return .)
    BREAK           reduce using rule 34 (statement -> return .)
    RETURNTYPE      reduce using rule 34 (statement -> return .)
    IDENTIFIER      reduce using rule 34 (statement -> return .)
    PLUS            reduce using rule 34 (statement -> return .)
    MINUS           reduce using rule 34 (statement -> return .)
    SOP             reduce using rule 34 (statement -> return .)
    THIS            reduce using rule 34 (statement -> return .)
    SWITCH          reduce using rule 34 (statement -> return .)
    RETURN          reduce using rule 34 (statement -> return .)
    WHILE           reduce using rule 34 (statement -> return .)
    FOR             reduce using rule 34 (statement -> return .)
    TRY             reduce using rule 34 (statement -> return .)
    STATIC          reduce using rule 34 (statement -> return .)
    IF              reduce using rule 34 (statement -> return .)
    $end            reduce using rule 34 (statement -> return .)
    RBRACE          reduce using rule 34 (statement -> return .)
    CASE            reduce using rule 34 (statement -> return .)
    DEFAULT         reduce using rule 34 (statement -> return .)


state 13

    (35) statement -> while .

    ACCESS          reduce using rule 35 (statement -> while .)
    PASS            reduce using rule 35 (statement -> while .)
    BREAK           reduce using rule 35 (statement -> while .)
    RETURNTYPE      reduce using rule 35 (statement -> while .)
    IDENTIFIER      reduce using rule 35 (statement -> while .)
    PLUS            reduce using rule 35 (statement -> while .)
    MINUS           reduce using rule 35 (statement -> while .)
    SOP             reduce using rule 35 (statement -> while .)
    THIS            reduce using rule 35 (statement -> while .)
    SWITCH          reduce using rule 35 (statement -> while .)
    RETURN          reduce using rule 35 (statement -> while .)
    WHILE           reduce using rule 35 (statement -> while .)
    FOR             reduce using rule 35 (statement -> while .)
    TRY             reduce using rule 35 (statement -> while .)
    STATIC          reduce using rule 35 (statement -> while .)
    IF              reduce using rule 35 (statement -> while .)
    $end            reduce using rule 35 (statement -> while .)
    RBRACE          reduce using rule 35 (statement -> while .)
    CASE            reduce using rule 35 (statement -> while .)
    DEFAULT         reduce using rule 35 (statement -> while .)


state 14

    (36) statement -> for .

    ACCESS          reduce using rule 36 (statement -> for .)
    PASS            reduce using rule 36 (statement -> for .)
    BREAK           reduce using rule 36 (statement -> for .)
    RETURNTYPE      reduce using rule 36 (statement -> for .)
    IDENTIFIER      reduce using rule 36 (statement -> for .)
    PLUS            reduce using rule 36 (statement -> for .)
    MINUS           reduce using rule 36 (statement -> for .)
    SOP             reduce using rule 36 (statement -> for .)
    THIS            reduce using rule 36 (statement -> for .)
    SWITCH          reduce using rule 36 (statement -> for .)
    RETURN          reduce using rule 36 (statement -> for .)
    WHILE           reduce using rule 36 (statement -> for .)
    FOR             reduce using rule 36 (statement -> for .)
    TRY             reduce using rule 36 (statement -> for .)
    STATIC          reduce using rule 36 (statement -> for .)
    IF              reduce using rule 36 (statement -> for .)
    $end            reduce using rule 36 (statement -> for .)
    RBRACE          reduce using rule 36 (statement -> for .)
    CASE            reduce using rule 36 (statement -> for .)
    DEFAULT         reduce using rule 36 (statement -> for .)


state 15

    (37) statement -> try_catch .

    ACCESS          reduce using rule 37 (statement -> try_catch .)
    PASS            reduce using rule 37 (statement -> try_catch .)
    BREAK           reduce using rule 37 (statement -> try_catch .)
    RETURNTYPE      reduce using rule 37 (statement -> try_catch .)
    IDENTIFIER      reduce using rule 37 (statement -> try_catch .)
    PLUS            reduce using rule 37 (statement -> try_catch .)
    MINUS           reduce using rule 37 (statement -> try_catch .)
    SOP             reduce using rule 37 (statement -> try_catch .)
    THIS            reduce using rule 37 (statement -> try_catch .)
    SWITCH          reduce using rule 37 (statement -> try_catch .)
    RETURN          reduce using rule 37 (statement -> try_catch .)
    WHILE           reduce using rule 37 (statement -> try_catch .)
    FOR             reduce using rule 37 (statement -> try_catch .)
    TRY             reduce using rule 37 (statement -> try_catch .)
    STATIC          reduce using rule 37 (statement -> try_catch .)
    IF              reduce using rule 37 (statement -> try_catch .)
    $end            reduce using rule 37 (statement -> try_catch .)
    RBRACE          reduce using rule 37 (statement -> try_catch .)
    CASE            reduce using rule 37 (statement -> try_catch .)
    DEFAULT         reduce using rule 37 (statement -> try_catch .)


state 16

    (38) statement -> PASS . SEMICOLON

    SEMICOLON       shift and go to state 48


state 17

    (40) statement -> function .

    ACCESS          reduce using rule 40 (statement -> function .)
    PASS            reduce using rule 40 (statement -> function .)
    BREAK           reduce using rule 40 (statement -> function .)
    RETURNTYPE      reduce using rule 40 (statement -> function .)
    IDENTIFIER      reduce using rule 40 (statement -> function .)
    PLUS            reduce using rule 40 (statement -> function .)
    MINUS           reduce using rule 40 (statement -> function .)
    SOP             reduce using rule 40 (statement -> function .)
    THIS            reduce using rule 40 (statement -> function .)
    SWITCH          reduce using rule 40 (statement -> function .)
    RETURN          reduce using rule 40 (statement -> function .)
    WHILE           reduce using rule 40 (statement -> function .)
    FOR             reduce using rule 40 (statement -> function .)
    TRY             reduce using rule 40 (statement -> function .)
    STATIC          reduce using rule 40 (statement -> function .)
    IF              reduce using rule 40 (statement -> function .)
    $end            reduce using rule 40 (statement -> function .)
    RBRACE          reduce using rule 40 (statement -> function .)
    CASE            reduce using rule 40 (statement -> function .)
    DEFAULT         reduce using rule 40 (statement -> function .)


state 18

    (41) statement -> function_call .

    ACCESS          reduce using rule 41 (statement -> function_call .)
    PASS            reduce using rule 41 (statement -> function_call .)
    BREAK           reduce using rule 41 (statement -> function_call .)
    RETURNTYPE      reduce using rule 41 (statement -> function_call .)
    IDENTIFIER      reduce using rule 41 (statement -> function_call .)
    PLUS            reduce using rule 41 (statement -> function_call .)
    MINUS           reduce using rule 41 (statement -> function_call .)
    SOP             reduce using rule 41 (statement -> function_call .)
    THIS            reduce using rule 41 (statement -> function_call .)
    SWITCH          reduce using rule 41 (statement -> function_call .)
    RETURN          reduce using rule 41 (statement -> function_call .)
    WHILE           reduce using rule 41 (statement -> function_call .)
    FOR             reduce using rule 41 (statement -> function_call .)
    TRY             reduce using rule 41 (statement -> function_call .)
    STATIC          reduce using rule 41 (statement -> function_call .)
    IF              reduce using rule 41 (statement -> function_call .)
    $end            reduce using rule 41 (statement -> function_call .)
    RBRACE          reduce using rule 41 (statement -> function_call .)
    CASE            reduce using rule 41 (statement -> function_call .)
    DEFAULT         reduce using rule 41 (statement -> function_call .)


state 19

    (42) statement -> ifblock .

    ACCESS          reduce using rule 42 (statement -> ifblock .)
    PASS            reduce using rule 42 (statement -> ifblock .)
    BREAK           reduce using rule 42 (statement -> ifblock .)
    RETURNTYPE      reduce using rule 42 (statement -> ifblock .)
    IDENTIFIER      reduce using rule 42 (statement -> ifblock .)
    PLUS            reduce using rule 42 (statement -> ifblock .)
    MINUS           reduce using rule 42 (statement -> ifblock .)
    SOP             reduce using rule 42 (statement -> ifblock .)
    THIS            reduce using rule 42 (statement -> ifblock .)
    SWITCH          reduce using rule 42 (statement -> ifblock .)
    RETURN          reduce using rule 42 (statement -> ifblock .)
    WHILE           reduce using rule 42 (statement -> ifblock .)
    FOR             reduce using rule 42 (statement -> ifblock .)
    TRY             reduce using rule 42 (statement -> ifblock .)
    STATIC          reduce using rule 42 (statement -> ifblock .)
    IF              reduce using rule 42 (statement -> ifblock .)
    $end            reduce using rule 42 (statement -> ifblock .)
    RBRACE          reduce using rule 42 (statement -> ifblock .)
    CASE            reduce using rule 42 (statement -> ifblock .)
    DEFAULT         reduce using rule 42 (statement -> ifblock .)


state 20

    (43) statement -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 49


state 21

    (59) assignment_statement -> RETURNTYPE . IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> RETURNTYPE . IDENTIFIER SEMICOLON
    (61) assignment_statement -> RETURNTYPE . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> RETURNTYPE . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> RETURNTYPE . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> RETURNTYPE . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> RETURNTYPE . IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> RETURNTYPE . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> RETURNTYPE . LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> RETURNTYPE . IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> RETURNTYPE . IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (13) function -> RETURNTYPE . IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> RETURNTYPE . IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE

    IDENTIFIER      shift and go to state 50
    LBRACKET        shift and go to state 51


state 22

    (73) assignment_statement -> PLUS . PLUS IDENTIFIER SEMICOLON

    PLUS            shift and go to state 52


state 23

    (74) assignment_statement -> MINUS . MINUS IDENTIFIER SEMICOLON

    MINUS           shift and go to state 53


state 24

    (82) print_statement -> SOP . LPAREN expression RPAREN SEMICOLON
    (83) print_statement -> SOP . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 54


state 25

    (6) this_assign -> THIS . IDENTIFIER ASSIGN IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 55


state 26

    (44) switch -> SWITCH . LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE

    LPAREN          shift and go to state 56


state 27

    (94) return -> RETURN . IDENTIFIER SEMICOLON
    (95) return -> RETURN . SEMICOLON
    (96) return -> RETURN . expression SEMICOLON
    (84) expression -> . IDENTIFIER
    (85) expression -> . NUMBER
    (86) expression -> . expression PLUS
    (87) expression -> . expression MINUS
    (88) expression -> . expression PLUS expression
    (89) expression -> . expression MINUS expression
    (90) expression -> . expression TIMES expression
    (91) expression -> . expression DIVIDE expression
    (92) expression -> . STRING
    (93) expression -> . CHAR

    IDENTIFIER      shift and go to state 57
    SEMICOLON       shift and go to state 58
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    CHAR            shift and go to state 62

    expression                     shift and go to state 59

state 28

    (49) while -> WHILE . LPAREN params RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 63


state 29

    (109) for -> FOR . LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 64


state 30

    (114) try_catch -> TRY . LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> TRY . LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

    LBRACE          shift and go to state 65


state 31

    (17) function -> STATIC . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> STATIC . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE

    RETURNTYPE      shift and go to state 66


state 32

    (101) ifblock -> if .
    (102) ifblock -> if . else
    (103) ifblock -> if . else_if
    (105) else -> . ELSE LBRACE statements RBRACE
    (106) else_if -> . ELSE if
    (107) else_if -> . ELSE if else_if
    (108) else_if -> . ELSE if else

    ACCESS          reduce using rule 101 (ifblock -> if .)
    PASS            reduce using rule 101 (ifblock -> if .)
    BREAK           reduce using rule 101 (ifblock -> if .)
    RETURNTYPE      reduce using rule 101 (ifblock -> if .)
    IDENTIFIER      reduce using rule 101 (ifblock -> if .)
    PLUS            reduce using rule 101 (ifblock -> if .)
    MINUS           reduce using rule 101 (ifblock -> if .)
    SOP             reduce using rule 101 (ifblock -> if .)
    THIS            reduce using rule 101 (ifblock -> if .)
    SWITCH          reduce using rule 101 (ifblock -> if .)
    RETURN          reduce using rule 101 (ifblock -> if .)
    WHILE           reduce using rule 101 (ifblock -> if .)
    FOR             reduce using rule 101 (ifblock -> if .)
    TRY             reduce using rule 101 (ifblock -> if .)
    STATIC          reduce using rule 101 (ifblock -> if .)
    IF              reduce using rule 101 (ifblock -> if .)
    $end            reduce using rule 101 (ifblock -> if .)
    RBRACE          reduce using rule 101 (ifblock -> if .)
    CASE            reduce using rule 101 (ifblock -> if .)
    DEFAULT         reduce using rule 101 (ifblock -> if .)
    ELSE            shift and go to state 69

    else                           shift and go to state 67
    else_if                        shift and go to state 68

state 33

    (104) if -> IF . LPAREN params RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 70


state 34

    (2) programs -> program programs .

    $end            reduce using rule 2 (programs -> program programs .)


state 35

    (5) class -> ACCESS CLASS . IDENTIFIER LBRACE stats RBRACE

    IDENTIFIER      shift and go to state 71


state 36

    (66) assignment_statement -> IDENTIFIER . ASSIGN expression SEMICOLON
    (67) assignment_statement -> IDENTIFIER . PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> IDENTIFIER . MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> IDENTIFIER . TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> IDENTIFIER . DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> IDENTIFIER . PLUS PLUS SEMICOLON
    (72) assignment_statement -> IDENTIFIER . MINUS MINUS SEMICOLON
    (77) assignment_statement -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> IDENTIFIER . LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON

    ASSIGN          shift and go to state 41
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    LBRACKET        shift and go to state 46


state 37

    (39) statement -> ACCESS assignment_statement .

    ACCESS          reduce using rule 39 (statement -> ACCESS assignment_statement .)
    PASS            reduce using rule 39 (statement -> ACCESS assignment_statement .)
    BREAK           reduce using rule 39 (statement -> ACCESS assignment_statement .)
    RETURNTYPE      reduce using rule 39 (statement -> ACCESS assignment_statement .)
    IDENTIFIER      reduce using rule 39 (statement -> ACCESS assignment_statement .)
    PLUS            reduce using rule 39 (statement -> ACCESS assignment_statement .)
    MINUS           reduce using rule 39 (statement -> ACCESS assignment_statement .)
    SOP             reduce using rule 39 (statement -> ACCESS assignment_statement .)
    THIS            reduce using rule 39 (statement -> ACCESS assignment_statement .)
    SWITCH          reduce using rule 39 (statement -> ACCESS assignment_statement .)
    RETURN          reduce using rule 39 (statement -> ACCESS assignment_statement .)
    WHILE           reduce using rule 39 (statement -> ACCESS assignment_statement .)
    FOR             reduce using rule 39 (statement -> ACCESS assignment_statement .)
    TRY             reduce using rule 39 (statement -> ACCESS assignment_statement .)
    STATIC          reduce using rule 39 (statement -> ACCESS assignment_statement .)
    IF              reduce using rule 39 (statement -> ACCESS assignment_statement .)
    $end            reduce using rule 39 (statement -> ACCESS assignment_statement .)
    RBRACE          reduce using rule 39 (statement -> ACCESS assignment_statement .)
    CASE            reduce using rule 39 (statement -> ACCESS assignment_statement .)
    DEFAULT         reduce using rule 39 (statement -> ACCESS assignment_statement .)


state 38

    (15) function -> ACCESS RETURNTYPE . IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> ACCESS RETURNTYPE . IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (59) assignment_statement -> RETURNTYPE . IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> RETURNTYPE . IDENTIFIER SEMICOLON
    (61) assignment_statement -> RETURNTYPE . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> RETURNTYPE . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> RETURNTYPE . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> RETURNTYPE . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> RETURNTYPE . IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> RETURNTYPE . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> RETURNTYPE . LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> RETURNTYPE . IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> RETURNTYPE . IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON

    IDENTIFIER      shift and go to state 72
    LBRACKET        shift and go to state 51


state 39

    (19) function -> ACCESS STATIC . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> ACCESS STATIC . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE

    RETURNTYPE      shift and go to state 73


state 40

    (54) class_statement -> IDENTIFIER IDENTIFIER . SEMICOLON
    (55) class_statement -> IDENTIFIER IDENTIFIER . ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> IDENTIFIER IDENTIFIER . ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> IDENTIFIER IDENTIFIER . ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> IDENTIFIER IDENTIFIER . ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON

    SEMICOLON       shift and go to state 74
    ASSIGN          shift and go to state 75


state 41

    (66) assignment_statement -> IDENTIFIER ASSIGN . expression SEMICOLON
    (84) expression -> . IDENTIFIER
    (85) expression -> . NUMBER
    (86) expression -> . expression PLUS
    (87) expression -> . expression MINUS
    (88) expression -> . expression PLUS expression
    (89) expression -> . expression MINUS expression
    (90) expression -> . expression TIMES expression
    (91) expression -> . expression DIVIDE expression
    (92) expression -> . STRING
    (93) expression -> . CHAR

    IDENTIFIER      shift and go to state 76
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    CHAR            shift and go to state 62

    expression                     shift and go to state 77

state 42

    (67) assignment_statement -> IDENTIFIER PLUS . ASSIGN expression SEMICOLON
    (71) assignment_statement -> IDENTIFIER PLUS . PLUS SEMICOLON

    ASSIGN          shift and go to state 79
    PLUS            shift and go to state 78


state 43

    (68) assignment_statement -> IDENTIFIER MINUS . ASSIGN expression SEMICOLON
    (72) assignment_statement -> IDENTIFIER MINUS . MINUS SEMICOLON

    ASSIGN          shift and go to state 81
    MINUS           shift and go to state 80


state 44

    (69) assignment_statement -> IDENTIFIER TIMES . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 82


state 45

    (70) assignment_statement -> IDENTIFIER DIVIDE . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 83


state 46

    (77) assignment_statement -> IDENTIFIER LBRACKET . expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> IDENTIFIER LBRACKET . expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> IDENTIFIER LBRACKET . RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (84) expression -> . IDENTIFIER
    (85) expression -> . NUMBER
    (86) expression -> . expression PLUS
    (87) expression -> . expression MINUS
    (88) expression -> . expression PLUS expression
    (89) expression -> . expression MINUS expression
    (90) expression -> . expression TIMES expression
    (91) expression -> . expression DIVIDE expression
    (92) expression -> . STRING
    (93) expression -> . CHAR

    RBRACKET        shift and go to state 85
    IDENTIFIER      shift and go to state 76
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    CHAR            shift and go to state 62

    expression                     shift and go to state 84

state 47

    (27) function_call -> IDENTIFIER LPAREN . params RPAREN SEMICOLON
    (28) function_call -> IDENTIFIER LPAREN . RPAREN SEMICOLON
    (50) params -> . param
    (51) params -> . param LOGICAL params
    (52) param -> . IDENTIFIER
    (53) param -> . NUMBER

    RPAREN          shift and go to state 88
    IDENTIFIER      shift and go to state 86
    NUMBER          shift and go to state 90

    params                         shift and go to state 87
    param                          shift and go to state 89

state 48

    (38) statement -> PASS SEMICOLON .

    ACCESS          reduce using rule 38 (statement -> PASS SEMICOLON .)
    PASS            reduce using rule 38 (statement -> PASS SEMICOLON .)
    BREAK           reduce using rule 38 (statement -> PASS SEMICOLON .)
    RETURNTYPE      reduce using rule 38 (statement -> PASS SEMICOLON .)
    IDENTIFIER      reduce using rule 38 (statement -> PASS SEMICOLON .)
    PLUS            reduce using rule 38 (statement -> PASS SEMICOLON .)
    MINUS           reduce using rule 38 (statement -> PASS SEMICOLON .)
    SOP             reduce using rule 38 (statement -> PASS SEMICOLON .)
    THIS            reduce using rule 38 (statement -> PASS SEMICOLON .)
    SWITCH          reduce using rule 38 (statement -> PASS SEMICOLON .)
    RETURN          reduce using rule 38 (statement -> PASS SEMICOLON .)
    WHILE           reduce using rule 38 (statement -> PASS SEMICOLON .)
    FOR             reduce using rule 38 (statement -> PASS SEMICOLON .)
    TRY             reduce using rule 38 (statement -> PASS SEMICOLON .)
    STATIC          reduce using rule 38 (statement -> PASS SEMICOLON .)
    IF              reduce using rule 38 (statement -> PASS SEMICOLON .)
    $end            reduce using rule 38 (statement -> PASS SEMICOLON .)
    RBRACE          reduce using rule 38 (statement -> PASS SEMICOLON .)
    CASE            reduce using rule 38 (statement -> PASS SEMICOLON .)
    DEFAULT         reduce using rule 38 (statement -> PASS SEMICOLON .)


state 49

    (43) statement -> BREAK SEMICOLON .

    ACCESS          reduce using rule 43 (statement -> BREAK SEMICOLON .)
    PASS            reduce using rule 43 (statement -> BREAK SEMICOLON .)
    BREAK           reduce using rule 43 (statement -> BREAK SEMICOLON .)
    RETURNTYPE      reduce using rule 43 (statement -> BREAK SEMICOLON .)
    IDENTIFIER      reduce using rule 43 (statement -> BREAK SEMICOLON .)
    PLUS            reduce using rule 43 (statement -> BREAK SEMICOLON .)
    MINUS           reduce using rule 43 (statement -> BREAK SEMICOLON .)
    SOP             reduce using rule 43 (statement -> BREAK SEMICOLON .)
    THIS            reduce using rule 43 (statement -> BREAK SEMICOLON .)
    SWITCH          reduce using rule 43 (statement -> BREAK SEMICOLON .)
    RETURN          reduce using rule 43 (statement -> BREAK SEMICOLON .)
    WHILE           reduce using rule 43 (statement -> BREAK SEMICOLON .)
    FOR             reduce using rule 43 (statement -> BREAK SEMICOLON .)
    TRY             reduce using rule 43 (statement -> BREAK SEMICOLON .)
    STATIC          reduce using rule 43 (statement -> BREAK SEMICOLON .)
    IF              reduce using rule 43 (statement -> BREAK SEMICOLON .)
    $end            reduce using rule 43 (statement -> BREAK SEMICOLON .)
    RBRACE          reduce using rule 43 (statement -> BREAK SEMICOLON .)
    CASE            reduce using rule 43 (statement -> BREAK SEMICOLON .)
    DEFAULT         reduce using rule 43 (statement -> BREAK SEMICOLON .)


state 50

    (59) assignment_statement -> RETURNTYPE IDENTIFIER . ASSIGN expression SEMICOLON
    (60) assignment_statement -> RETURNTYPE IDENTIFIER . SEMICOLON
    (61) assignment_statement -> RETURNTYPE IDENTIFIER . PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> RETURNTYPE IDENTIFIER . MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> RETURNTYPE IDENTIFIER . TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> RETURNTYPE IDENTIFIER . DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> RETURNTYPE IDENTIFIER . PLUS PLUS SEMICOLON
    (75) assignment_statement -> RETURNTYPE IDENTIFIER . LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> RETURNTYPE IDENTIFIER . LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> RETURNTYPE IDENTIFIER . LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (13) function -> RETURNTYPE IDENTIFIER . LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> RETURNTYPE IDENTIFIER . LPAREN RPAREN LBRACE statements RBRACE

    ASSIGN          shift and go to state 91
    SEMICOLON       shift and go to state 92
    PLUS            shift and go to state 93
    MINUS           shift and go to state 94
    TIMES           shift and go to state 95
    DIVIDE          shift and go to state 96
    LBRACKET        shift and go to state 97
    LPAREN          shift and go to state 98


state 51

    (76) assignment_statement -> RETURNTYPE LBRACKET . RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON

    RBRACKET        shift and go to state 99


state 52

    (73) assignment_statement -> PLUS PLUS . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 100


state 53

    (74) assignment_statement -> MINUS MINUS . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 101


state 54

    (82) print_statement -> SOP LPAREN . expression RPAREN SEMICOLON
    (83) print_statement -> SOP LPAREN . RPAREN SEMICOLON
    (84) expression -> . IDENTIFIER
    (85) expression -> . NUMBER
    (86) expression -> . expression PLUS
    (87) expression -> . expression MINUS
    (88) expression -> . expression PLUS expression
    (89) expression -> . expression MINUS expression
    (90) expression -> . expression TIMES expression
    (91) expression -> . expression DIVIDE expression
    (92) expression -> . STRING
    (93) expression -> . CHAR

    RPAREN          shift and go to state 103
    IDENTIFIER      shift and go to state 76
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    CHAR            shift and go to state 62

    expression                     shift and go to state 102

state 55

    (6) this_assign -> THIS IDENTIFIER . ASSIGN IDENTIFIER SEMICOLON

    ASSIGN          shift and go to state 104


state 56

    (44) switch -> SWITCH LPAREN . IDENTIFIER RPAREN LBRACE cases RBRACE

    IDENTIFIER      shift and go to state 105


state 57

    (94) return -> RETURN IDENTIFIER . SEMICOLON
    (84) expression -> IDENTIFIER .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 106
    PLUS            reduce using rule 84 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 84 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 84 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 84 (expression -> IDENTIFIER .)

  ! SEMICOLON       [ reduce using rule 84 (expression -> IDENTIFIER .) ]


state 58

    (95) return -> RETURN SEMICOLON .

    ACCESS          reduce using rule 95 (return -> RETURN SEMICOLON .)
    PASS            reduce using rule 95 (return -> RETURN SEMICOLON .)
    BREAK           reduce using rule 95 (return -> RETURN SEMICOLON .)
    RETURNTYPE      reduce using rule 95 (return -> RETURN SEMICOLON .)
    IDENTIFIER      reduce using rule 95 (return -> RETURN SEMICOLON .)
    PLUS            reduce using rule 95 (return -> RETURN SEMICOLON .)
    MINUS           reduce using rule 95 (return -> RETURN SEMICOLON .)
    SOP             reduce using rule 95 (return -> RETURN SEMICOLON .)
    THIS            reduce using rule 95 (return -> RETURN SEMICOLON .)
    SWITCH          reduce using rule 95 (return -> RETURN SEMICOLON .)
    RETURN          reduce using rule 95 (return -> RETURN SEMICOLON .)
    WHILE           reduce using rule 95 (return -> RETURN SEMICOLON .)
    FOR             reduce using rule 95 (return -> RETURN SEMICOLON .)
    TRY             reduce using rule 95 (return -> RETURN SEMICOLON .)
    STATIC          reduce using rule 95 (return -> RETURN SEMICOLON .)
    IF              reduce using rule 95 (return -> RETURN SEMICOLON .)
    $end            reduce using rule 95 (return -> RETURN SEMICOLON .)
    RBRACE          reduce using rule 95 (return -> RETURN SEMICOLON .)
    CASE            reduce using rule 95 (return -> RETURN SEMICOLON .)
    DEFAULT         reduce using rule 95 (return -> RETURN SEMICOLON .)


state 59

    (96) return -> RETURN expression . SEMICOLON
    (86) expression -> expression . PLUS
    (87) expression -> expression . MINUS
    (88) expression -> expression . PLUS expression
    (89) expression -> expression . MINUS expression
    (90) expression -> expression . TIMES expression
    (91) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 107
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109
    TIMES           shift and go to state 110
    DIVIDE          shift and go to state 111


state 60

    (85) expression -> NUMBER .

    SEMICOLON       reduce using rule 85 (expression -> NUMBER .)
    PLUS            reduce using rule 85 (expression -> NUMBER .)
    MINUS           reduce using rule 85 (expression -> NUMBER .)
    TIMES           reduce using rule 85 (expression -> NUMBER .)
    DIVIDE          reduce using rule 85 (expression -> NUMBER .)
    RBRACKET        reduce using rule 85 (expression -> NUMBER .)
    RPAREN          reduce using rule 85 (expression -> NUMBER .)


state 61

    (92) expression -> STRING .

    SEMICOLON       reduce using rule 92 (expression -> STRING .)
    PLUS            reduce using rule 92 (expression -> STRING .)
    MINUS           reduce using rule 92 (expression -> STRING .)
    TIMES           reduce using rule 92 (expression -> STRING .)
    DIVIDE          reduce using rule 92 (expression -> STRING .)
    RBRACKET        reduce using rule 92 (expression -> STRING .)
    RPAREN          reduce using rule 92 (expression -> STRING .)


state 62

    (93) expression -> CHAR .

    SEMICOLON       reduce using rule 93 (expression -> CHAR .)
    PLUS            reduce using rule 93 (expression -> CHAR .)
    MINUS           reduce using rule 93 (expression -> CHAR .)
    TIMES           reduce using rule 93 (expression -> CHAR .)
    DIVIDE          reduce using rule 93 (expression -> CHAR .)
    RBRACKET        reduce using rule 93 (expression -> CHAR .)
    RPAREN          reduce using rule 93 (expression -> CHAR .)


state 63

    (49) while -> WHILE LPAREN . params RPAREN LBRACE statements RBRACE
    (50) params -> . param
    (51) params -> . param LOGICAL params
    (52) param -> . IDENTIFIER
    (53) param -> . NUMBER

    IDENTIFIER      shift and go to state 86
    NUMBER          shift and go to state 90

    params                         shift and go to state 112
    param                          shift and go to state 89

state 64

    (109) for -> FOR LPAREN . assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON

    RETURNTYPE      shift and go to state 114
    IDENTIFIER      shift and go to state 36
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23

    assignment_statement           shift and go to state 113

state 65

    (114) try_catch -> TRY LBRACE . statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> TRY LBRACE . statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (82) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (83) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (94) return -> . RETURN IDENTIFIER SEMICOLON
    (95) return -> . RETURN SEMICOLON
    (96) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (109) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (114) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (101) ifblock -> . if
    (102) ifblock -> . if else
    (103) ifblock -> . if else_if
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 117
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 24
    THIS            shift and go to state 25
    SWITCH          shift and go to state 26
    RETURN          shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    TRY             shift and go to state 30
    STATIC          shift and go to state 31
    IF              shift and go to state 33

    statements                     shift and go to state 115
    statement                      shift and go to state 116
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    if                             shift and go to state 32

state 66

    (17) function -> STATIC RETURNTYPE . IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> STATIC RETURNTYPE . IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE

    IDENTIFIER      shift and go to state 118


state 67

    (102) ifblock -> if else .

    ACCESS          reduce using rule 102 (ifblock -> if else .)
    PASS            reduce using rule 102 (ifblock -> if else .)
    BREAK           reduce using rule 102 (ifblock -> if else .)
    RETURNTYPE      reduce using rule 102 (ifblock -> if else .)
    IDENTIFIER      reduce using rule 102 (ifblock -> if else .)
    PLUS            reduce using rule 102 (ifblock -> if else .)
    MINUS           reduce using rule 102 (ifblock -> if else .)
    SOP             reduce using rule 102 (ifblock -> if else .)
    THIS            reduce using rule 102 (ifblock -> if else .)
    SWITCH          reduce using rule 102 (ifblock -> if else .)
    RETURN          reduce using rule 102 (ifblock -> if else .)
    WHILE           reduce using rule 102 (ifblock -> if else .)
    FOR             reduce using rule 102 (ifblock -> if else .)
    TRY             reduce using rule 102 (ifblock -> if else .)
    STATIC          reduce using rule 102 (ifblock -> if else .)
    IF              reduce using rule 102 (ifblock -> if else .)
    $end            reduce using rule 102 (ifblock -> if else .)
    RBRACE          reduce using rule 102 (ifblock -> if else .)
    CASE            reduce using rule 102 (ifblock -> if else .)
    DEFAULT         reduce using rule 102 (ifblock -> if else .)


state 68

    (103) ifblock -> if else_if .

    ACCESS          reduce using rule 103 (ifblock -> if else_if .)
    PASS            reduce using rule 103 (ifblock -> if else_if .)
    BREAK           reduce using rule 103 (ifblock -> if else_if .)
    RETURNTYPE      reduce using rule 103 (ifblock -> if else_if .)
    IDENTIFIER      reduce using rule 103 (ifblock -> if else_if .)
    PLUS            reduce using rule 103 (ifblock -> if else_if .)
    MINUS           reduce using rule 103 (ifblock -> if else_if .)
    SOP             reduce using rule 103 (ifblock -> if else_if .)
    THIS            reduce using rule 103 (ifblock -> if else_if .)
    SWITCH          reduce using rule 103 (ifblock -> if else_if .)
    RETURN          reduce using rule 103 (ifblock -> if else_if .)
    WHILE           reduce using rule 103 (ifblock -> if else_if .)
    FOR             reduce using rule 103 (ifblock -> if else_if .)
    TRY             reduce using rule 103 (ifblock -> if else_if .)
    STATIC          reduce using rule 103 (ifblock -> if else_if .)
    IF              reduce using rule 103 (ifblock -> if else_if .)
    $end            reduce using rule 103 (ifblock -> if else_if .)
    RBRACE          reduce using rule 103 (ifblock -> if else_if .)
    CASE            reduce using rule 103 (ifblock -> if else_if .)
    DEFAULT         reduce using rule 103 (ifblock -> if else_if .)


state 69

    (105) else -> ELSE . LBRACE statements RBRACE
    (106) else_if -> ELSE . if
    (107) else_if -> ELSE . if else_if
    (108) else_if -> ELSE . if else
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    LBRACE          shift and go to state 119
    IF              shift and go to state 33

    if                             shift and go to state 120

state 70

    (104) if -> IF LPAREN . params RPAREN LBRACE statements RBRACE
    (50) params -> . param
    (51) params -> . param LOGICAL params
    (52) param -> . IDENTIFIER
    (53) param -> . NUMBER

    IDENTIFIER      shift and go to state 86
    NUMBER          shift and go to state 90

    params                         shift and go to state 121
    param                          shift and go to state 89

state 71

    (5) class -> ACCESS CLASS IDENTIFIER . LBRACE stats RBRACE

    LBRACE          shift and go to state 122


state 72

    (15) function -> ACCESS RETURNTYPE IDENTIFIER . LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> ACCESS RETURNTYPE IDENTIFIER . LPAREN RPAREN LBRACE statements RBRACE
    (59) assignment_statement -> RETURNTYPE IDENTIFIER . ASSIGN expression SEMICOLON
    (60) assignment_statement -> RETURNTYPE IDENTIFIER . SEMICOLON
    (61) assignment_statement -> RETURNTYPE IDENTIFIER . PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> RETURNTYPE IDENTIFIER . MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> RETURNTYPE IDENTIFIER . TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> RETURNTYPE IDENTIFIER . DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> RETURNTYPE IDENTIFIER . PLUS PLUS SEMICOLON
    (75) assignment_statement -> RETURNTYPE IDENTIFIER . LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> RETURNTYPE IDENTIFIER . LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> RETURNTYPE IDENTIFIER . LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON

    LPAREN          shift and go to state 123
    ASSIGN          shift and go to state 91
    SEMICOLON       shift and go to state 92
    PLUS            shift and go to state 93
    MINUS           shift and go to state 94
    TIMES           shift and go to state 95
    DIVIDE          shift and go to state 96
    LBRACKET        shift and go to state 97


state 73

    (19) function -> ACCESS STATIC RETURNTYPE . IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> ACCESS STATIC RETURNTYPE . IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE

    IDENTIFIER      shift and go to state 124


state 74

    (54) class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .

    ACCESS          reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    PASS            reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    BREAK           reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    RETURNTYPE      reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    PLUS            reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    MINUS           reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    SOP             reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    THIS            reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    SWITCH          reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    TRY             reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    STATIC          reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    IF              reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    $end            reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    CASE            reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    DEFAULT         reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)


state 75

    (55) class_statement -> IDENTIFIER IDENTIFIER ASSIGN . NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> IDENTIFIER IDENTIFIER ASSIGN . NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> IDENTIFIER IDENTIFIER ASSIGN . NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> IDENTIFIER IDENTIFIER ASSIGN . NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON

    NEW             shift and go to state 125


state 76

    (84) expression -> IDENTIFIER .

    SEMICOLON       reduce using rule 84 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 84 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 84 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 84 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 84 (expression -> IDENTIFIER .)
    RBRACKET        reduce using rule 84 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 84 (expression -> IDENTIFIER .)


state 77

    (66) assignment_statement -> IDENTIFIER ASSIGN expression . SEMICOLON
    (86) expression -> expression . PLUS
    (87) expression -> expression . MINUS
    (88) expression -> expression . PLUS expression
    (89) expression -> expression . MINUS expression
    (90) expression -> expression . TIMES expression
    (91) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 126
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109
    TIMES           shift and go to state 110
    DIVIDE          shift and go to state 111


state 78

    (71) assignment_statement -> IDENTIFIER PLUS PLUS . SEMICOLON

    SEMICOLON       shift and go to state 127


state 79

    (67) assignment_statement -> IDENTIFIER PLUS ASSIGN . expression SEMICOLON
    (84) expression -> . IDENTIFIER
    (85) expression -> . NUMBER
    (86) expression -> . expression PLUS
    (87) expression -> . expression MINUS
    (88) expression -> . expression PLUS expression
    (89) expression -> . expression MINUS expression
    (90) expression -> . expression TIMES expression
    (91) expression -> . expression DIVIDE expression
    (92) expression -> . STRING
    (93) expression -> . CHAR

    IDENTIFIER      shift and go to state 76
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    CHAR            shift and go to state 62

    expression                     shift and go to state 128

state 80

    (72) assignment_statement -> IDENTIFIER MINUS MINUS . SEMICOLON

    SEMICOLON       shift and go to state 129


state 81

    (68) assignment_statement -> IDENTIFIER MINUS ASSIGN . expression SEMICOLON
    (84) expression -> . IDENTIFIER
    (85) expression -> . NUMBER
    (86) expression -> . expression PLUS
    (87) expression -> . expression MINUS
    (88) expression -> . expression PLUS expression
    (89) expression -> . expression MINUS expression
    (90) expression -> . expression TIMES expression
    (91) expression -> . expression DIVIDE expression
    (92) expression -> . STRING
    (93) expression -> . CHAR

    IDENTIFIER      shift and go to state 76
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    CHAR            shift and go to state 62

    expression                     shift and go to state 130

state 82

    (69) assignment_statement -> IDENTIFIER TIMES ASSIGN . expression SEMICOLON
    (84) expression -> . IDENTIFIER
    (85) expression -> . NUMBER
    (86) expression -> . expression PLUS
    (87) expression -> . expression MINUS
    (88) expression -> . expression PLUS expression
    (89) expression -> . expression MINUS expression
    (90) expression -> . expression TIMES expression
    (91) expression -> . expression DIVIDE expression
    (92) expression -> . STRING
    (93) expression -> . CHAR

    IDENTIFIER      shift and go to state 76
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    CHAR            shift and go to state 62

    expression                     shift and go to state 131

state 83

    (70) assignment_statement -> IDENTIFIER DIVIDE ASSIGN . expression SEMICOLON
    (84) expression -> . IDENTIFIER
    (85) expression -> . NUMBER
    (86) expression -> . expression PLUS
    (87) expression -> . expression MINUS
    (88) expression -> . expression PLUS expression
    (89) expression -> . expression MINUS expression
    (90) expression -> . expression TIMES expression
    (91) expression -> . expression DIVIDE expression
    (92) expression -> . STRING
    (93) expression -> . CHAR

    IDENTIFIER      shift and go to state 76
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    CHAR            shift and go to state 62

    expression                     shift and go to state 132

state 84

    (77) assignment_statement -> IDENTIFIER LBRACKET expression . RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> IDENTIFIER LBRACKET expression . RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (86) expression -> expression . PLUS
    (87) expression -> expression . MINUS
    (88) expression -> expression . PLUS expression
    (89) expression -> expression . MINUS expression
    (90) expression -> expression . TIMES expression
    (91) expression -> expression . DIVIDE expression

    RBRACKET        shift and go to state 133
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109
    TIMES           shift and go to state 110
    DIVIDE          shift and go to state 111


state 85

    (79) assignment_statement -> IDENTIFIER LBRACKET RBRACKET . ASSIGN LBRACE items RBRACE SEMICOLON

    ASSIGN          shift and go to state 134


state 86

    (52) param -> IDENTIFIER .

    LOGICAL         reduce using rule 52 (param -> IDENTIFIER .)
    RPAREN          reduce using rule 52 (param -> IDENTIFIER .)
    SEMICOLON       reduce using rule 52 (param -> IDENTIFIER .)


state 87

    (27) function_call -> IDENTIFIER LPAREN params . RPAREN SEMICOLON

    RPAREN          shift and go to state 135


state 88

    (28) function_call -> IDENTIFIER LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 136


state 89

    (50) params -> param .
    (51) params -> param . LOGICAL params

    RPAREN          reduce using rule 50 (params -> param .)
    SEMICOLON       reduce using rule 50 (params -> param .)
    LOGICAL         shift and go to state 137


state 90

    (53) param -> NUMBER .

    LOGICAL         reduce using rule 53 (param -> NUMBER .)
    RPAREN          reduce using rule 53 (param -> NUMBER .)
    SEMICOLON       reduce using rule 53 (param -> NUMBER .)


state 91

    (59) assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN . expression SEMICOLON
    (84) expression -> . IDENTIFIER
    (85) expression -> . NUMBER
    (86) expression -> . expression PLUS
    (87) expression -> . expression MINUS
    (88) expression -> . expression PLUS expression
    (89) expression -> . expression MINUS expression
    (90) expression -> . expression TIMES expression
    (91) expression -> . expression DIVIDE expression
    (92) expression -> . STRING
    (93) expression -> . CHAR

    IDENTIFIER      shift and go to state 76
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    CHAR            shift and go to state 62

    expression                     shift and go to state 138

state 92

    (60) assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .

    ACCESS          reduce using rule 60 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    PASS            reduce using rule 60 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    BREAK           reduce using rule 60 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    RETURNTYPE      reduce using rule 60 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 60 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    PLUS            reduce using rule 60 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    MINUS           reduce using rule 60 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    SOP             reduce using rule 60 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    THIS            reduce using rule 60 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    SWITCH          reduce using rule 60 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 60 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 60 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 60 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    TRY             reduce using rule 60 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    STATIC          reduce using rule 60 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    IF              reduce using rule 60 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    $end            reduce using rule 60 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    NUMBER          reduce using rule 60 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 60 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    CASE            reduce using rule 60 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    DEFAULT         reduce using rule 60 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)


state 93

    (61) assignment_statement -> RETURNTYPE IDENTIFIER PLUS . ASSIGN expression SEMICOLON
    (65) assignment_statement -> RETURNTYPE IDENTIFIER PLUS . PLUS SEMICOLON

    ASSIGN          shift and go to state 140
    PLUS            shift and go to state 139


state 94

    (62) assignment_statement -> RETURNTYPE IDENTIFIER MINUS . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 141


state 95

    (63) assignment_statement -> RETURNTYPE IDENTIFIER TIMES . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 142


state 96

    (64) assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 143


state 97

    (75) assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET . RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET . RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET . RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON

    RBRACKET        shift and go to state 144


state 98

    (13) function -> RETURNTYPE IDENTIFIER LPAREN . parameters RPAREN LBRACE statements RBRACE
    (14) function -> RETURNTYPE IDENTIFIER LPAREN . RPAREN LBRACE statements RBRACE
    (21) parameters -> . parameter
    (22) parameters -> . parameter COMMA parameters
    (23) parameter -> . RETURNTYPE IDENTIFIER
    (24) parameter -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER

    RPAREN          shift and go to state 147
    RETURNTYPE      shift and go to state 145

    parameters                     shift and go to state 146
    parameter                      shift and go to state 148

state 99

    (76) assignment_statement -> RETURNTYPE LBRACKET RBRACKET . IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON

    IDENTIFIER      shift and go to state 149


state 100

    (73) assignment_statement -> PLUS PLUS IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 150


state 101

    (74) assignment_statement -> MINUS MINUS IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 151


state 102

    (82) print_statement -> SOP LPAREN expression . RPAREN SEMICOLON
    (86) expression -> expression . PLUS
    (87) expression -> expression . MINUS
    (88) expression -> expression . PLUS expression
    (89) expression -> expression . MINUS expression
    (90) expression -> expression . TIMES expression
    (91) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 152
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109
    TIMES           shift and go to state 110
    DIVIDE          shift and go to state 111


state 103

    (83) print_statement -> SOP LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 153


state 104

    (6) this_assign -> THIS IDENTIFIER ASSIGN . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 154


state 105

    (44) switch -> SWITCH LPAREN IDENTIFIER . RPAREN LBRACE cases RBRACE

    RPAREN          shift and go to state 155


state 106

    (94) return -> RETURN IDENTIFIER SEMICOLON .

    ACCESS          reduce using rule 94 (return -> RETURN IDENTIFIER SEMICOLON .)
    PASS            reduce using rule 94 (return -> RETURN IDENTIFIER SEMICOLON .)
    BREAK           reduce using rule 94 (return -> RETURN IDENTIFIER SEMICOLON .)
    RETURNTYPE      reduce using rule 94 (return -> RETURN IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 94 (return -> RETURN IDENTIFIER SEMICOLON .)
    PLUS            reduce using rule 94 (return -> RETURN IDENTIFIER SEMICOLON .)
    MINUS           reduce using rule 94 (return -> RETURN IDENTIFIER SEMICOLON .)
    SOP             reduce using rule 94 (return -> RETURN IDENTIFIER SEMICOLON .)
    THIS            reduce using rule 94 (return -> RETURN IDENTIFIER SEMICOLON .)
    SWITCH          reduce using rule 94 (return -> RETURN IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 94 (return -> RETURN IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 94 (return -> RETURN IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 94 (return -> RETURN IDENTIFIER SEMICOLON .)
    TRY             reduce using rule 94 (return -> RETURN IDENTIFIER SEMICOLON .)
    STATIC          reduce using rule 94 (return -> RETURN IDENTIFIER SEMICOLON .)
    IF              reduce using rule 94 (return -> RETURN IDENTIFIER SEMICOLON .)
    $end            reduce using rule 94 (return -> RETURN IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 94 (return -> RETURN IDENTIFIER SEMICOLON .)
    CASE            reduce using rule 94 (return -> RETURN IDENTIFIER SEMICOLON .)
    DEFAULT         reduce using rule 94 (return -> RETURN IDENTIFIER SEMICOLON .)


state 107

    (96) return -> RETURN expression SEMICOLON .

    ACCESS          reduce using rule 96 (return -> RETURN expression SEMICOLON .)
    PASS            reduce using rule 96 (return -> RETURN expression SEMICOLON .)
    BREAK           reduce using rule 96 (return -> RETURN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 96 (return -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 96 (return -> RETURN expression SEMICOLON .)
    PLUS            reduce using rule 96 (return -> RETURN expression SEMICOLON .)
    MINUS           reduce using rule 96 (return -> RETURN expression SEMICOLON .)
    SOP             reduce using rule 96 (return -> RETURN expression SEMICOLON .)
    THIS            reduce using rule 96 (return -> RETURN expression SEMICOLON .)
    SWITCH          reduce using rule 96 (return -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 96 (return -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 96 (return -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 96 (return -> RETURN expression SEMICOLON .)
    TRY             reduce using rule 96 (return -> RETURN expression SEMICOLON .)
    STATIC          reduce using rule 96 (return -> RETURN expression SEMICOLON .)
    IF              reduce using rule 96 (return -> RETURN expression SEMICOLON .)
    $end            reduce using rule 96 (return -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 96 (return -> RETURN expression SEMICOLON .)
    CASE            reduce using rule 96 (return -> RETURN expression SEMICOLON .)
    DEFAULT         reduce using rule 96 (return -> RETURN expression SEMICOLON .)


state 108

    (86) expression -> expression PLUS .
    (88) expression -> expression PLUS . expression
    (84) expression -> . IDENTIFIER
    (85) expression -> . NUMBER
    (86) expression -> . expression PLUS
    (87) expression -> . expression MINUS
    (88) expression -> . expression PLUS expression
    (89) expression -> . expression MINUS expression
    (90) expression -> . expression TIMES expression
    (91) expression -> . expression DIVIDE expression
    (92) expression -> . STRING
    (93) expression -> . CHAR

    SEMICOLON       reduce using rule 86 (expression -> expression PLUS .)
    PLUS            reduce using rule 86 (expression -> expression PLUS .)
    MINUS           reduce using rule 86 (expression -> expression PLUS .)
    TIMES           reduce using rule 86 (expression -> expression PLUS .)
    DIVIDE          reduce using rule 86 (expression -> expression PLUS .)
    RBRACKET        reduce using rule 86 (expression -> expression PLUS .)
    RPAREN          reduce using rule 86 (expression -> expression PLUS .)
    IDENTIFIER      shift and go to state 76
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    CHAR            shift and go to state 62

    expression                     shift and go to state 156

state 109

    (87) expression -> expression MINUS .
    (89) expression -> expression MINUS . expression
    (84) expression -> . IDENTIFIER
    (85) expression -> . NUMBER
    (86) expression -> . expression PLUS
    (87) expression -> . expression MINUS
    (88) expression -> . expression PLUS expression
    (89) expression -> . expression MINUS expression
    (90) expression -> . expression TIMES expression
    (91) expression -> . expression DIVIDE expression
    (92) expression -> . STRING
    (93) expression -> . CHAR

    SEMICOLON       reduce using rule 87 (expression -> expression MINUS .)
    PLUS            reduce using rule 87 (expression -> expression MINUS .)
    MINUS           reduce using rule 87 (expression -> expression MINUS .)
    TIMES           reduce using rule 87 (expression -> expression MINUS .)
    DIVIDE          reduce using rule 87 (expression -> expression MINUS .)
    RBRACKET        reduce using rule 87 (expression -> expression MINUS .)
    RPAREN          reduce using rule 87 (expression -> expression MINUS .)
    IDENTIFIER      shift and go to state 76
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    CHAR            shift and go to state 62

    expression                     shift and go to state 157

state 110

    (90) expression -> expression TIMES . expression
    (84) expression -> . IDENTIFIER
    (85) expression -> . NUMBER
    (86) expression -> . expression PLUS
    (87) expression -> . expression MINUS
    (88) expression -> . expression PLUS expression
    (89) expression -> . expression MINUS expression
    (90) expression -> . expression TIMES expression
    (91) expression -> . expression DIVIDE expression
    (92) expression -> . STRING
    (93) expression -> . CHAR

    IDENTIFIER      shift and go to state 76
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    CHAR            shift and go to state 62

    expression                     shift and go to state 158

state 111

    (91) expression -> expression DIVIDE . expression
    (84) expression -> . IDENTIFIER
    (85) expression -> . NUMBER
    (86) expression -> . expression PLUS
    (87) expression -> . expression MINUS
    (88) expression -> . expression PLUS expression
    (89) expression -> . expression MINUS expression
    (90) expression -> . expression TIMES expression
    (91) expression -> . expression DIVIDE expression
    (92) expression -> . STRING
    (93) expression -> . CHAR

    IDENTIFIER      shift and go to state 76
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    CHAR            shift and go to state 62

    expression                     shift and go to state 159

state 112

    (49) while -> WHILE LPAREN params . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 160


state 113

    (109) for -> FOR LPAREN assignment_statement . params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (50) params -> . param
    (51) params -> . param LOGICAL params
    (52) param -> . IDENTIFIER
    (53) param -> . NUMBER

    IDENTIFIER      shift and go to state 86
    NUMBER          shift and go to state 90

    params                         shift and go to state 161
    param                          shift and go to state 89

state 114

    (59) assignment_statement -> RETURNTYPE . IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> RETURNTYPE . IDENTIFIER SEMICOLON
    (61) assignment_statement -> RETURNTYPE . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> RETURNTYPE . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> RETURNTYPE . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> RETURNTYPE . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> RETURNTYPE . IDENTIFIER PLUS PLUS SEMICOLON
    (75) assignment_statement -> RETURNTYPE . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> RETURNTYPE . LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> RETURNTYPE . IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> RETURNTYPE . IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON

    IDENTIFIER      shift and go to state 162
    LBRACKET        shift and go to state 51


state 115

    (114) try_catch -> TRY LBRACE statements . RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> TRY LBRACE statements . RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

    RBRACE          shift and go to state 163


state 116

    (25) statements -> statement .
    (26) statements -> statement . statements
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (82) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (83) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (94) return -> . RETURN IDENTIFIER SEMICOLON
    (95) return -> . RETURN SEMICOLON
    (96) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (109) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (114) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (101) ifblock -> . if
    (102) ifblock -> . if else
    (103) ifblock -> . if else_if
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    RBRACE          reduce using rule 25 (statements -> statement .)
    CASE            reduce using rule 25 (statements -> statement .)
    DEFAULT         reduce using rule 25 (statements -> statement .)
    PASS            shift and go to state 16
    ACCESS          shift and go to state 117
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 24
    THIS            shift and go to state 25
    SWITCH          shift and go to state 26
    RETURN          shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    TRY             shift and go to state 30
    STATIC          shift and go to state 31
    IF              shift and go to state 33

    statement                      shift and go to state 116
    statements                     shift and go to state 164
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    if                             shift and go to state 32

state 117

    (39) statement -> ACCESS . assignment_statement
    (15) function -> ACCESS . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> ACCESS . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> ACCESS . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> ACCESS . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON

    RETURNTYPE      shift and go to state 38
    STATIC          shift and go to state 39
    IDENTIFIER      shift and go to state 36
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23

    assignment_statement           shift and go to state 37

state 118

    (17) function -> STATIC RETURNTYPE IDENTIFIER . LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> STATIC RETURNTYPE IDENTIFIER . LPAREN RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 165


state 119

    (105) else -> ELSE LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (82) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (83) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (94) return -> . RETURN IDENTIFIER SEMICOLON
    (95) return -> . RETURN SEMICOLON
    (96) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (109) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (114) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (101) ifblock -> . if
    (102) ifblock -> . if else
    (103) ifblock -> . if else_if
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 117
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 24
    THIS            shift and go to state 25
    SWITCH          shift and go to state 26
    RETURN          shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    TRY             shift and go to state 30
    STATIC          shift and go to state 31
    IF              shift and go to state 33

    statements                     shift and go to state 166
    statement                      shift and go to state 116
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    if                             shift and go to state 32

state 120

    (106) else_if -> ELSE if .
    (107) else_if -> ELSE if . else_if
    (108) else_if -> ELSE if . else
    (106) else_if -> . ELSE if
    (107) else_if -> . ELSE if else_if
    (108) else_if -> . ELSE if else
    (105) else -> . ELSE LBRACE statements RBRACE

    ACCESS          reduce using rule 106 (else_if -> ELSE if .)
    PASS            reduce using rule 106 (else_if -> ELSE if .)
    BREAK           reduce using rule 106 (else_if -> ELSE if .)
    RETURNTYPE      reduce using rule 106 (else_if -> ELSE if .)
    IDENTIFIER      reduce using rule 106 (else_if -> ELSE if .)
    PLUS            reduce using rule 106 (else_if -> ELSE if .)
    MINUS           reduce using rule 106 (else_if -> ELSE if .)
    SOP             reduce using rule 106 (else_if -> ELSE if .)
    THIS            reduce using rule 106 (else_if -> ELSE if .)
    SWITCH          reduce using rule 106 (else_if -> ELSE if .)
    RETURN          reduce using rule 106 (else_if -> ELSE if .)
    WHILE           reduce using rule 106 (else_if -> ELSE if .)
    FOR             reduce using rule 106 (else_if -> ELSE if .)
    TRY             reduce using rule 106 (else_if -> ELSE if .)
    STATIC          reduce using rule 106 (else_if -> ELSE if .)
    IF              reduce using rule 106 (else_if -> ELSE if .)
    $end            reduce using rule 106 (else_if -> ELSE if .)
    RBRACE          reduce using rule 106 (else_if -> ELSE if .)
    CASE            reduce using rule 106 (else_if -> ELSE if .)
    DEFAULT         reduce using rule 106 (else_if -> ELSE if .)
    ELSE            shift and go to state 167

    else_if                        shift and go to state 168
    else                           shift and go to state 169

state 121

    (104) if -> IF LPAREN params . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 170


state 122

    (5) class -> ACCESS CLASS IDENTIFIER LBRACE . stats RBRACE
    (7) stats -> . stat
    (8) stats -> . stat stats
    (9) stat -> . constructor
    (10) stat -> . statement
    (11) constructor -> . ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (12) constructor -> . ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (82) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (83) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (94) return -> . RETURN IDENTIFIER SEMICOLON
    (95) return -> . RETURN SEMICOLON
    (96) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (109) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (114) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (101) ifblock -> . if
    (102) ifblock -> . if else
    (103) ifblock -> . if else_if
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    ACCESS          shift and go to state 171
    PASS            shift and go to state 16
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 24
    THIS            shift and go to state 25
    SWITCH          shift and go to state 26
    RETURN          shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    TRY             shift and go to state 30
    STATIC          shift and go to state 31
    IF              shift and go to state 33

    stats                          shift and go to state 172
    stat                           shift and go to state 173
    constructor                    shift and go to state 174
    statement                      shift and go to state 175
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    if                             shift and go to state 32

state 123

    (15) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN . parameters RPAREN LBRACE statements RBRACE
    (16) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN . RPAREN LBRACE statements RBRACE
    (21) parameters -> . parameter
    (22) parameters -> . parameter COMMA parameters
    (23) parameter -> . RETURNTYPE IDENTIFIER
    (24) parameter -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER

    RPAREN          shift and go to state 177
    RETURNTYPE      shift and go to state 145

    parameters                     shift and go to state 176
    parameter                      shift and go to state 148

state 124

    (19) function -> ACCESS STATIC RETURNTYPE IDENTIFIER . LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> ACCESS STATIC RETURNTYPE IDENTIFIER . LPAREN RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 178


state 125

    (55) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW . IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW . IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW . IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON

    IDENTIFIER      shift and go to state 179


state 126

    (66) assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 66 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 66 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 66 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 66 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 66 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 66 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 66 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 66 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 66 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 66 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 66 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 66 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 66 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 66 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 66 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    IF              reduce using rule 66 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    $end            reduce using rule 66 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 66 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 66 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 66 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 66 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)


state 127

    (71) assignment_statement -> IDENTIFIER PLUS PLUS SEMICOLON .

    ACCESS          reduce using rule 71 (assignment_statement -> IDENTIFIER PLUS PLUS SEMICOLON .)
    PASS            reduce using rule 71 (assignment_statement -> IDENTIFIER PLUS PLUS SEMICOLON .)
    BREAK           reduce using rule 71 (assignment_statement -> IDENTIFIER PLUS PLUS SEMICOLON .)
    RETURNTYPE      reduce using rule 71 (assignment_statement -> IDENTIFIER PLUS PLUS SEMICOLON .)
    IDENTIFIER      reduce using rule 71 (assignment_statement -> IDENTIFIER PLUS PLUS SEMICOLON .)
    PLUS            reduce using rule 71 (assignment_statement -> IDENTIFIER PLUS PLUS SEMICOLON .)
    MINUS           reduce using rule 71 (assignment_statement -> IDENTIFIER PLUS PLUS SEMICOLON .)
    SOP             reduce using rule 71 (assignment_statement -> IDENTIFIER PLUS PLUS SEMICOLON .)
    THIS            reduce using rule 71 (assignment_statement -> IDENTIFIER PLUS PLUS SEMICOLON .)
    SWITCH          reduce using rule 71 (assignment_statement -> IDENTIFIER PLUS PLUS SEMICOLON .)
    RETURN          reduce using rule 71 (assignment_statement -> IDENTIFIER PLUS PLUS SEMICOLON .)
    WHILE           reduce using rule 71 (assignment_statement -> IDENTIFIER PLUS PLUS SEMICOLON .)
    FOR             reduce using rule 71 (assignment_statement -> IDENTIFIER PLUS PLUS SEMICOLON .)
    TRY             reduce using rule 71 (assignment_statement -> IDENTIFIER PLUS PLUS SEMICOLON .)
    STATIC          reduce using rule 71 (assignment_statement -> IDENTIFIER PLUS PLUS SEMICOLON .)
    IF              reduce using rule 71 (assignment_statement -> IDENTIFIER PLUS PLUS SEMICOLON .)
    $end            reduce using rule 71 (assignment_statement -> IDENTIFIER PLUS PLUS SEMICOLON .)
    NUMBER          reduce using rule 71 (assignment_statement -> IDENTIFIER PLUS PLUS SEMICOLON .)
    RBRACE          reduce using rule 71 (assignment_statement -> IDENTIFIER PLUS PLUS SEMICOLON .)
    CASE            reduce using rule 71 (assignment_statement -> IDENTIFIER PLUS PLUS SEMICOLON .)
    DEFAULT         reduce using rule 71 (assignment_statement -> IDENTIFIER PLUS PLUS SEMICOLON .)


state 128

    (67) assignment_statement -> IDENTIFIER PLUS ASSIGN expression . SEMICOLON
    (86) expression -> expression . PLUS
    (87) expression -> expression . MINUS
    (88) expression -> expression . PLUS expression
    (89) expression -> expression . MINUS expression
    (90) expression -> expression . TIMES expression
    (91) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 180
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109
    TIMES           shift and go to state 110
    DIVIDE          shift and go to state 111


state 129

    (72) assignment_statement -> IDENTIFIER MINUS MINUS SEMICOLON .

    ACCESS          reduce using rule 72 (assignment_statement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    PASS            reduce using rule 72 (assignment_statement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    BREAK           reduce using rule 72 (assignment_statement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    RETURNTYPE      reduce using rule 72 (assignment_statement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    IDENTIFIER      reduce using rule 72 (assignment_statement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    PLUS            reduce using rule 72 (assignment_statement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    MINUS           reduce using rule 72 (assignment_statement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    SOP             reduce using rule 72 (assignment_statement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    THIS            reduce using rule 72 (assignment_statement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    SWITCH          reduce using rule 72 (assignment_statement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    RETURN          reduce using rule 72 (assignment_statement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    WHILE           reduce using rule 72 (assignment_statement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    FOR             reduce using rule 72 (assignment_statement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    TRY             reduce using rule 72 (assignment_statement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    STATIC          reduce using rule 72 (assignment_statement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    IF              reduce using rule 72 (assignment_statement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    $end            reduce using rule 72 (assignment_statement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    NUMBER          reduce using rule 72 (assignment_statement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    RBRACE          reduce using rule 72 (assignment_statement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    CASE            reduce using rule 72 (assignment_statement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    DEFAULT         reduce using rule 72 (assignment_statement -> IDENTIFIER MINUS MINUS SEMICOLON .)


state 130

    (68) assignment_statement -> IDENTIFIER MINUS ASSIGN expression . SEMICOLON
    (86) expression -> expression . PLUS
    (87) expression -> expression . MINUS
    (88) expression -> expression . PLUS expression
    (89) expression -> expression . MINUS expression
    (90) expression -> expression . TIMES expression
    (91) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 181
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109
    TIMES           shift and go to state 110
    DIVIDE          shift and go to state 111


state 131

    (69) assignment_statement -> IDENTIFIER TIMES ASSIGN expression . SEMICOLON
    (86) expression -> expression . PLUS
    (87) expression -> expression . MINUS
    (88) expression -> expression . PLUS expression
    (89) expression -> expression . MINUS expression
    (90) expression -> expression . TIMES expression
    (91) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 182
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109
    TIMES           shift and go to state 110
    DIVIDE          shift and go to state 111


state 132

    (70) assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression . SEMICOLON
    (86) expression -> expression . PLUS
    (87) expression -> expression . MINUS
    (88) expression -> expression . PLUS expression
    (89) expression -> expression . MINUS expression
    (90) expression -> expression . TIMES expression
    (91) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 183
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109
    TIMES           shift and go to state 110
    DIVIDE          shift and go to state 111


state 133

    (77) assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET . ASSIGN expression SEMICOLON
    (78) assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET . ASSIGN LBRACE items RBRACE SEMICOLON

    ASSIGN          shift and go to state 184


state 134

    (79) assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN . LBRACE items RBRACE SEMICOLON

    LBRACE          shift and go to state 185


state 135

    (27) function_call -> IDENTIFIER LPAREN params RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 186


state 136

    (28) function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .

    ACCESS          reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    PASS            reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    RETURNTYPE      reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    PLUS            reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    MINUS           reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    SOP             reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    THIS            reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    SWITCH          reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    TRY             reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    STATIC          reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    CASE            reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)


state 137

    (51) params -> param LOGICAL . params
    (50) params -> . param
    (51) params -> . param LOGICAL params
    (52) param -> . IDENTIFIER
    (53) param -> . NUMBER

    IDENTIFIER      shift and go to state 86
    NUMBER          shift and go to state 90

    param                          shift and go to state 89
    params                         shift and go to state 187

state 138

    (59) assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression . SEMICOLON
    (86) expression -> expression . PLUS
    (87) expression -> expression . MINUS
    (88) expression -> expression . PLUS expression
    (89) expression -> expression . MINUS expression
    (90) expression -> expression . TIMES expression
    (91) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 188
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109
    TIMES           shift and go to state 110
    DIVIDE          shift and go to state 111


state 139

    (65) assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS . SEMICOLON

    SEMICOLON       shift and go to state 189


state 140

    (61) assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN . expression SEMICOLON
    (84) expression -> . IDENTIFIER
    (85) expression -> . NUMBER
    (86) expression -> . expression PLUS
    (87) expression -> . expression MINUS
    (88) expression -> . expression PLUS expression
    (89) expression -> . expression MINUS expression
    (90) expression -> . expression TIMES expression
    (91) expression -> . expression DIVIDE expression
    (92) expression -> . STRING
    (93) expression -> . CHAR

    IDENTIFIER      shift and go to state 76
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    CHAR            shift and go to state 62

    expression                     shift and go to state 190

state 141

    (62) assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN . expression SEMICOLON
    (84) expression -> . IDENTIFIER
    (85) expression -> . NUMBER
    (86) expression -> . expression PLUS
    (87) expression -> . expression MINUS
    (88) expression -> . expression PLUS expression
    (89) expression -> . expression MINUS expression
    (90) expression -> . expression TIMES expression
    (91) expression -> . expression DIVIDE expression
    (92) expression -> . STRING
    (93) expression -> . CHAR

    IDENTIFIER      shift and go to state 76
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    CHAR            shift and go to state 62

    expression                     shift and go to state 191

state 142

    (63) assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN . expression SEMICOLON
    (84) expression -> . IDENTIFIER
    (85) expression -> . NUMBER
    (86) expression -> . expression PLUS
    (87) expression -> . expression MINUS
    (88) expression -> . expression PLUS expression
    (89) expression -> . expression MINUS expression
    (90) expression -> . expression TIMES expression
    (91) expression -> . expression DIVIDE expression
    (92) expression -> . STRING
    (93) expression -> . CHAR

    IDENTIFIER      shift and go to state 76
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    CHAR            shift and go to state 62

    expression                     shift and go to state 192

state 143

    (64) assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN . expression SEMICOLON
    (84) expression -> . IDENTIFIER
    (85) expression -> . NUMBER
    (86) expression -> . expression PLUS
    (87) expression -> . expression MINUS
    (88) expression -> . expression PLUS expression
    (89) expression -> . expression MINUS expression
    (90) expression -> . expression TIMES expression
    (91) expression -> . expression DIVIDE expression
    (92) expression -> . STRING
    (93) expression -> . CHAR

    IDENTIFIER      shift and go to state 76
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    CHAR            shift and go to state 62

    expression                     shift and go to state 193

state 144

    (75) assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET . ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET . ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET . ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON

    ASSIGN          shift and go to state 194


state 145

    (23) parameter -> RETURNTYPE . IDENTIFIER
    (24) parameter -> RETURNTYPE . LBRACKET RBRACKET IDENTIFIER

    IDENTIFIER      shift and go to state 195
    LBRACKET        shift and go to state 196


state 146

    (13) function -> RETURNTYPE IDENTIFIER LPAREN parameters . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 197


state 147

    (14) function -> RETURNTYPE IDENTIFIER LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 198


state 148

    (21) parameters -> parameter .
    (22) parameters -> parameter . COMMA parameters

    RPAREN          reduce using rule 21 (parameters -> parameter .)
    COMMA           shift and go to state 199


state 149

    (76) assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER . ASSIGN LBRACE items RBRACE SEMICOLON

    ASSIGN          shift and go to state 200


state 150

    (73) assignment_statement -> PLUS PLUS IDENTIFIER SEMICOLON .

    ACCESS          reduce using rule 73 (assignment_statement -> PLUS PLUS IDENTIFIER SEMICOLON .)
    PASS            reduce using rule 73 (assignment_statement -> PLUS PLUS IDENTIFIER SEMICOLON .)
    BREAK           reduce using rule 73 (assignment_statement -> PLUS PLUS IDENTIFIER SEMICOLON .)
    RETURNTYPE      reduce using rule 73 (assignment_statement -> PLUS PLUS IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 73 (assignment_statement -> PLUS PLUS IDENTIFIER SEMICOLON .)
    PLUS            reduce using rule 73 (assignment_statement -> PLUS PLUS IDENTIFIER SEMICOLON .)
    MINUS           reduce using rule 73 (assignment_statement -> PLUS PLUS IDENTIFIER SEMICOLON .)
    SOP             reduce using rule 73 (assignment_statement -> PLUS PLUS IDENTIFIER SEMICOLON .)
    THIS            reduce using rule 73 (assignment_statement -> PLUS PLUS IDENTIFIER SEMICOLON .)
    SWITCH          reduce using rule 73 (assignment_statement -> PLUS PLUS IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 73 (assignment_statement -> PLUS PLUS IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 73 (assignment_statement -> PLUS PLUS IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 73 (assignment_statement -> PLUS PLUS IDENTIFIER SEMICOLON .)
    TRY             reduce using rule 73 (assignment_statement -> PLUS PLUS IDENTIFIER SEMICOLON .)
    STATIC          reduce using rule 73 (assignment_statement -> PLUS PLUS IDENTIFIER SEMICOLON .)
    IF              reduce using rule 73 (assignment_statement -> PLUS PLUS IDENTIFIER SEMICOLON .)
    $end            reduce using rule 73 (assignment_statement -> PLUS PLUS IDENTIFIER SEMICOLON .)
    NUMBER          reduce using rule 73 (assignment_statement -> PLUS PLUS IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 73 (assignment_statement -> PLUS PLUS IDENTIFIER SEMICOLON .)
    CASE            reduce using rule 73 (assignment_statement -> PLUS PLUS IDENTIFIER SEMICOLON .)
    DEFAULT         reduce using rule 73 (assignment_statement -> PLUS PLUS IDENTIFIER SEMICOLON .)


state 151

    (74) assignment_statement -> MINUS MINUS IDENTIFIER SEMICOLON .

    ACCESS          reduce using rule 74 (assignment_statement -> MINUS MINUS IDENTIFIER SEMICOLON .)
    PASS            reduce using rule 74 (assignment_statement -> MINUS MINUS IDENTIFIER SEMICOLON .)
    BREAK           reduce using rule 74 (assignment_statement -> MINUS MINUS IDENTIFIER SEMICOLON .)
    RETURNTYPE      reduce using rule 74 (assignment_statement -> MINUS MINUS IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 74 (assignment_statement -> MINUS MINUS IDENTIFIER SEMICOLON .)
    PLUS            reduce using rule 74 (assignment_statement -> MINUS MINUS IDENTIFIER SEMICOLON .)
    MINUS           reduce using rule 74 (assignment_statement -> MINUS MINUS IDENTIFIER SEMICOLON .)
    SOP             reduce using rule 74 (assignment_statement -> MINUS MINUS IDENTIFIER SEMICOLON .)
    THIS            reduce using rule 74 (assignment_statement -> MINUS MINUS IDENTIFIER SEMICOLON .)
    SWITCH          reduce using rule 74 (assignment_statement -> MINUS MINUS IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 74 (assignment_statement -> MINUS MINUS IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 74 (assignment_statement -> MINUS MINUS IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 74 (assignment_statement -> MINUS MINUS IDENTIFIER SEMICOLON .)
    TRY             reduce using rule 74 (assignment_statement -> MINUS MINUS IDENTIFIER SEMICOLON .)
    STATIC          reduce using rule 74 (assignment_statement -> MINUS MINUS IDENTIFIER SEMICOLON .)
    IF              reduce using rule 74 (assignment_statement -> MINUS MINUS IDENTIFIER SEMICOLON .)
    $end            reduce using rule 74 (assignment_statement -> MINUS MINUS IDENTIFIER SEMICOLON .)
    NUMBER          reduce using rule 74 (assignment_statement -> MINUS MINUS IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 74 (assignment_statement -> MINUS MINUS IDENTIFIER SEMICOLON .)
    CASE            reduce using rule 74 (assignment_statement -> MINUS MINUS IDENTIFIER SEMICOLON .)
    DEFAULT         reduce using rule 74 (assignment_statement -> MINUS MINUS IDENTIFIER SEMICOLON .)


state 152

    (82) print_statement -> SOP LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 201


state 153

    (83) print_statement -> SOP LPAREN RPAREN SEMICOLON .

    ACCESS          reduce using rule 83 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    PASS            reduce using rule 83 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 83 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    RETURNTYPE      reduce using rule 83 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 83 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    PLUS            reduce using rule 83 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    MINUS           reduce using rule 83 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    SOP             reduce using rule 83 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    THIS            reduce using rule 83 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    SWITCH          reduce using rule 83 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 83 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 83 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 83 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    TRY             reduce using rule 83 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    STATIC          reduce using rule 83 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 83 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 83 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 83 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    CASE            reduce using rule 83 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 83 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)


state 154

    (6) this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 202


state 155

    (44) switch -> SWITCH LPAREN IDENTIFIER RPAREN . LBRACE cases RBRACE

    LBRACE          shift and go to state 203


state 156

    (88) expression -> expression PLUS expression .
    (86) expression -> expression . PLUS
    (87) expression -> expression . MINUS
    (88) expression -> expression . PLUS expression
    (89) expression -> expression . MINUS expression
    (90) expression -> expression . TIMES expression
    (91) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 88 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 88 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 88 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109
    TIMES           shift and go to state 110
    DIVIDE          shift and go to state 111

  ! PLUS            [ reduce using rule 88 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 88 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 88 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 88 (expression -> expression PLUS expression .) ]


state 157

    (89) expression -> expression MINUS expression .
    (86) expression -> expression . PLUS
    (87) expression -> expression . MINUS
    (88) expression -> expression . PLUS expression
    (89) expression -> expression . MINUS expression
    (90) expression -> expression . TIMES expression
    (91) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 89 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 89 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 89 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109
    TIMES           shift and go to state 110
    DIVIDE          shift and go to state 111

  ! PLUS            [ reduce using rule 89 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 89 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 89 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 89 (expression -> expression MINUS expression .) ]


state 158

    (90) expression -> expression TIMES expression .
    (86) expression -> expression . PLUS
    (87) expression -> expression . MINUS
    (88) expression -> expression . PLUS expression
    (89) expression -> expression . MINUS expression
    (90) expression -> expression . TIMES expression
    (91) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 90 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 90 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 90 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109
    TIMES           shift and go to state 110
    DIVIDE          shift and go to state 111

  ! PLUS            [ reduce using rule 90 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 90 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 90 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 90 (expression -> expression TIMES expression .) ]


state 159

    (91) expression -> expression DIVIDE expression .
    (86) expression -> expression . PLUS
    (87) expression -> expression . MINUS
    (88) expression -> expression . PLUS expression
    (89) expression -> expression . MINUS expression
    (90) expression -> expression . TIMES expression
    (91) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 91 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 91 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 91 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109
    TIMES           shift and go to state 110
    DIVIDE          shift and go to state 111

  ! PLUS            [ reduce using rule 91 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 91 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 91 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 91 (expression -> expression DIVIDE expression .) ]


state 160

    (49) while -> WHILE LPAREN params RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 204


state 161

    (109) for -> FOR LPAREN assignment_statement params . SEMICOLON increment RPAREN LBRACE statements RBRACE

    SEMICOLON       shift and go to state 205


state 162

    (59) assignment_statement -> RETURNTYPE IDENTIFIER . ASSIGN expression SEMICOLON
    (60) assignment_statement -> RETURNTYPE IDENTIFIER . SEMICOLON
    (61) assignment_statement -> RETURNTYPE IDENTIFIER . PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> RETURNTYPE IDENTIFIER . MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> RETURNTYPE IDENTIFIER . TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> RETURNTYPE IDENTIFIER . DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> RETURNTYPE IDENTIFIER . PLUS PLUS SEMICOLON
    (75) assignment_statement -> RETURNTYPE IDENTIFIER . LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> RETURNTYPE IDENTIFIER . LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> RETURNTYPE IDENTIFIER . LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON

    ASSIGN          shift and go to state 91
    SEMICOLON       shift and go to state 92
    PLUS            shift and go to state 93
    MINUS           shift and go to state 94
    TIMES           shift and go to state 95
    DIVIDE          shift and go to state 96
    LBRACKET        shift and go to state 97


state 163

    (114) try_catch -> TRY LBRACE statements RBRACE . CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> TRY LBRACE statements RBRACE . CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

    CATCH           shift and go to state 206


state 164

    (26) statements -> statement statements .

    RBRACE          reduce using rule 26 (statements -> statement statements .)
    CASE            reduce using rule 26 (statements -> statement statements .)
    DEFAULT         reduce using rule 26 (statements -> statement statements .)


state 165

    (17) function -> STATIC RETURNTYPE IDENTIFIER LPAREN . parameters RPAREN LBRACE statements RBRACE
    (18) function -> STATIC RETURNTYPE IDENTIFIER LPAREN . RPAREN LBRACE statements RBRACE
    (21) parameters -> . parameter
    (22) parameters -> . parameter COMMA parameters
    (23) parameter -> . RETURNTYPE IDENTIFIER
    (24) parameter -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER

    RPAREN          shift and go to state 208
    RETURNTYPE      shift and go to state 145

    parameters                     shift and go to state 207
    parameter                      shift and go to state 148

state 166

    (105) else -> ELSE LBRACE statements . RBRACE

    RBRACE          shift and go to state 209


state 167

    (106) else_if -> ELSE . if
    (107) else_if -> ELSE . if else_if
    (108) else_if -> ELSE . if else
    (105) else -> ELSE . LBRACE statements RBRACE
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    LBRACE          shift and go to state 119
    IF              shift and go to state 33

    if                             shift and go to state 120

state 168

    (107) else_if -> ELSE if else_if .

    ACCESS          reduce using rule 107 (else_if -> ELSE if else_if .)
    PASS            reduce using rule 107 (else_if -> ELSE if else_if .)
    BREAK           reduce using rule 107 (else_if -> ELSE if else_if .)
    RETURNTYPE      reduce using rule 107 (else_if -> ELSE if else_if .)
    IDENTIFIER      reduce using rule 107 (else_if -> ELSE if else_if .)
    PLUS            reduce using rule 107 (else_if -> ELSE if else_if .)
    MINUS           reduce using rule 107 (else_if -> ELSE if else_if .)
    SOP             reduce using rule 107 (else_if -> ELSE if else_if .)
    THIS            reduce using rule 107 (else_if -> ELSE if else_if .)
    SWITCH          reduce using rule 107 (else_if -> ELSE if else_if .)
    RETURN          reduce using rule 107 (else_if -> ELSE if else_if .)
    WHILE           reduce using rule 107 (else_if -> ELSE if else_if .)
    FOR             reduce using rule 107 (else_if -> ELSE if else_if .)
    TRY             reduce using rule 107 (else_if -> ELSE if else_if .)
    STATIC          reduce using rule 107 (else_if -> ELSE if else_if .)
    IF              reduce using rule 107 (else_if -> ELSE if else_if .)
    $end            reduce using rule 107 (else_if -> ELSE if else_if .)
    RBRACE          reduce using rule 107 (else_if -> ELSE if else_if .)
    CASE            reduce using rule 107 (else_if -> ELSE if else_if .)
    DEFAULT         reduce using rule 107 (else_if -> ELSE if else_if .)


state 169

    (108) else_if -> ELSE if else .

    ACCESS          reduce using rule 108 (else_if -> ELSE if else .)
    PASS            reduce using rule 108 (else_if -> ELSE if else .)
    BREAK           reduce using rule 108 (else_if -> ELSE if else .)
    RETURNTYPE      reduce using rule 108 (else_if -> ELSE if else .)
    IDENTIFIER      reduce using rule 108 (else_if -> ELSE if else .)
    PLUS            reduce using rule 108 (else_if -> ELSE if else .)
    MINUS           reduce using rule 108 (else_if -> ELSE if else .)
    SOP             reduce using rule 108 (else_if -> ELSE if else .)
    THIS            reduce using rule 108 (else_if -> ELSE if else .)
    SWITCH          reduce using rule 108 (else_if -> ELSE if else .)
    RETURN          reduce using rule 108 (else_if -> ELSE if else .)
    WHILE           reduce using rule 108 (else_if -> ELSE if else .)
    FOR             reduce using rule 108 (else_if -> ELSE if else .)
    TRY             reduce using rule 108 (else_if -> ELSE if else .)
    STATIC          reduce using rule 108 (else_if -> ELSE if else .)
    IF              reduce using rule 108 (else_if -> ELSE if else .)
    $end            reduce using rule 108 (else_if -> ELSE if else .)
    RBRACE          reduce using rule 108 (else_if -> ELSE if else .)
    CASE            reduce using rule 108 (else_if -> ELSE if else .)
    DEFAULT         reduce using rule 108 (else_if -> ELSE if else .)


state 170

    (104) if -> IF LPAREN params RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 210


state 171

    (11) constructor -> ACCESS . IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (12) constructor -> ACCESS . IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (39) statement -> ACCESS . assignment_statement
    (15) function -> ACCESS . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> ACCESS . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> ACCESS . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> ACCESS . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON

    IDENTIFIER      shift and go to state 211
    RETURNTYPE      shift and go to state 38
    STATIC          shift and go to state 39
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23

    assignment_statement           shift and go to state 37

state 172

    (5) class -> ACCESS CLASS IDENTIFIER LBRACE stats . RBRACE

    RBRACE          shift and go to state 212


state 173

    (7) stats -> stat .
    (8) stats -> stat . stats
    (7) stats -> . stat
    (8) stats -> . stat stats
    (9) stat -> . constructor
    (10) stat -> . statement
    (11) constructor -> . ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (12) constructor -> . ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (82) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (83) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (94) return -> . RETURN IDENTIFIER SEMICOLON
    (95) return -> . RETURN SEMICOLON
    (96) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (109) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (114) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (101) ifblock -> . if
    (102) ifblock -> . if else
    (103) ifblock -> . if else_if
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    RBRACE          reduce using rule 7 (stats -> stat .)
    ACCESS          shift and go to state 171
    PASS            shift and go to state 16
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 24
    THIS            shift and go to state 25
    SWITCH          shift and go to state 26
    RETURN          shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    TRY             shift and go to state 30
    STATIC          shift and go to state 31
    IF              shift and go to state 33

    stat                           shift and go to state 173
    stats                          shift and go to state 213
    constructor                    shift and go to state 174
    statement                      shift and go to state 175
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    if                             shift and go to state 32

state 174

    (9) stat -> constructor .

    ACCESS          reduce using rule 9 (stat -> constructor .)
    PASS            reduce using rule 9 (stat -> constructor .)
    BREAK           reduce using rule 9 (stat -> constructor .)
    RETURNTYPE      reduce using rule 9 (stat -> constructor .)
    IDENTIFIER      reduce using rule 9 (stat -> constructor .)
    PLUS            reduce using rule 9 (stat -> constructor .)
    MINUS           reduce using rule 9 (stat -> constructor .)
    SOP             reduce using rule 9 (stat -> constructor .)
    THIS            reduce using rule 9 (stat -> constructor .)
    SWITCH          reduce using rule 9 (stat -> constructor .)
    RETURN          reduce using rule 9 (stat -> constructor .)
    WHILE           reduce using rule 9 (stat -> constructor .)
    FOR             reduce using rule 9 (stat -> constructor .)
    TRY             reduce using rule 9 (stat -> constructor .)
    STATIC          reduce using rule 9 (stat -> constructor .)
    IF              reduce using rule 9 (stat -> constructor .)
    RBRACE          reduce using rule 9 (stat -> constructor .)


state 175

    (10) stat -> statement .

    ACCESS          reduce using rule 10 (stat -> statement .)
    PASS            reduce using rule 10 (stat -> statement .)
    BREAK           reduce using rule 10 (stat -> statement .)
    RETURNTYPE      reduce using rule 10 (stat -> statement .)
    IDENTIFIER      reduce using rule 10 (stat -> statement .)
    PLUS            reduce using rule 10 (stat -> statement .)
    MINUS           reduce using rule 10 (stat -> statement .)
    SOP             reduce using rule 10 (stat -> statement .)
    THIS            reduce using rule 10 (stat -> statement .)
    SWITCH          reduce using rule 10 (stat -> statement .)
    RETURN          reduce using rule 10 (stat -> statement .)
    WHILE           reduce using rule 10 (stat -> statement .)
    FOR             reduce using rule 10 (stat -> statement .)
    TRY             reduce using rule 10 (stat -> statement .)
    STATIC          reduce using rule 10 (stat -> statement .)
    IF              reduce using rule 10 (stat -> statement .)
    RBRACE          reduce using rule 10 (stat -> statement .)


state 176

    (15) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 214


state 177

    (16) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 215


state 178

    (19) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN . parameters RPAREN LBRACE statements RBRACE
    (20) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN . RPAREN LBRACE statements RBRACE
    (21) parameters -> . parameter
    (22) parameters -> . parameter COMMA parameters
    (23) parameter -> . RETURNTYPE IDENTIFIER
    (24) parameter -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER

    RPAREN          shift and go to state 217
    RETURNTYPE      shift and go to state 145

    parameters                     shift and go to state 216
    parameter                      shift and go to state 148

state 179

    (55) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER . LPAREN RPAREN SEMICOLON
    (56) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER . LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER . LPAREN params RPAREN SEMICOLON
    (58) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER . LBRACKET NUMBER RBRACKET SEMICOLON

    LPAREN          shift and go to state 218
    LBRACKET        shift and go to state 219


state 180

    (67) assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 67 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 67 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 67 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 67 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 67 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 67 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 67 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 67 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 67 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 67 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 67 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 67 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 67 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 67 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 67 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    IF              reduce using rule 67 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    $end            reduce using rule 67 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 67 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 67 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 67 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 67 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)


state 181

    (68) assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 68 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 68 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 68 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 68 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 68 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 68 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 68 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 68 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 68 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 68 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 68 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 68 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 68 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 68 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 68 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    IF              reduce using rule 68 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    $end            reduce using rule 68 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 68 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 68 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 68 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 68 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)


state 182

    (69) assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 69 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 69 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 69 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 69 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 69 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 69 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 69 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 69 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 69 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 69 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 69 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 69 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 69 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 69 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 69 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    IF              reduce using rule 69 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    $end            reduce using rule 69 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 69 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 69 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 69 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 69 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)


state 183

    (70) assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 70 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 70 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 70 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 70 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 70 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 70 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 70 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 70 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 70 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 70 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 70 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 70 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 70 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 70 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 70 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    IF              reduce using rule 70 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    $end            reduce using rule 70 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 70 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 70 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 70 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 70 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)


state 184

    (77) assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN . expression SEMICOLON
    (78) assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN . LBRACE items RBRACE SEMICOLON
    (84) expression -> . IDENTIFIER
    (85) expression -> . NUMBER
    (86) expression -> . expression PLUS
    (87) expression -> . expression MINUS
    (88) expression -> . expression PLUS expression
    (89) expression -> . expression MINUS expression
    (90) expression -> . expression TIMES expression
    (91) expression -> . expression DIVIDE expression
    (92) expression -> . STRING
    (93) expression -> . CHAR

    LBRACE          shift and go to state 221
    IDENTIFIER      shift and go to state 76
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    CHAR            shift and go to state 62

    expression                     shift and go to state 220

state 185

    (79) assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE . items RBRACE SEMICOLON
    (97) items -> . item
    (98) items -> . item COMMA items
    (99) item -> . NUMBER
    (100) item -> . CHAR

    NUMBER          shift and go to state 224
    CHAR            shift and go to state 225

    items                          shift and go to state 222
    item                           shift and go to state 223

state 186

    (27) function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .

    ACCESS          reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    PASS            reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    BREAK           reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    RETURNTYPE      reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    PLUS            reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    MINUS           reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    SOP             reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    THIS            reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    SWITCH          reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    RETURN          reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    WHILE           reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    FOR             reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    TRY             reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    STATIC          reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    IF              reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    $end            reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    RBRACE          reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    CASE            reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)


state 187

    (51) params -> param LOGICAL params .

    RPAREN          reduce using rule 51 (params -> param LOGICAL params .)
    SEMICOLON       reduce using rule 51 (params -> param LOGICAL params .)


state 188

    (59) assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 59 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 59 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 59 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 59 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 59 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 59 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 59 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 59 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 59 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 59 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 59 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 59 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 59 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 59 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 59 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    IF              reduce using rule 59 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    $end            reduce using rule 59 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 59 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 59 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 59 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 59 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)


state 189

    (65) assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .

    ACCESS          reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    PASS            reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    BREAK           reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    RETURNTYPE      reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    IDENTIFIER      reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    PLUS            reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    MINUS           reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    SOP             reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    THIS            reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    SWITCH          reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    RETURN          reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    WHILE           reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    FOR             reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    TRY             reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    STATIC          reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    IF              reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    $end            reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    NUMBER          reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    RBRACE          reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    CASE            reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    DEFAULT         reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)


state 190

    (61) assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression . SEMICOLON
    (86) expression -> expression . PLUS
    (87) expression -> expression . MINUS
    (88) expression -> expression . PLUS expression
    (89) expression -> expression . MINUS expression
    (90) expression -> expression . TIMES expression
    (91) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 226
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109
    TIMES           shift and go to state 110
    DIVIDE          shift and go to state 111


state 191

    (62) assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression . SEMICOLON
    (86) expression -> expression . PLUS
    (87) expression -> expression . MINUS
    (88) expression -> expression . PLUS expression
    (89) expression -> expression . MINUS expression
    (90) expression -> expression . TIMES expression
    (91) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 227
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109
    TIMES           shift and go to state 110
    DIVIDE          shift and go to state 111


state 192

    (63) assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression . SEMICOLON
    (86) expression -> expression . PLUS
    (87) expression -> expression . MINUS
    (88) expression -> expression . PLUS expression
    (89) expression -> expression . MINUS expression
    (90) expression -> expression . TIMES expression
    (91) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 228
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109
    TIMES           shift and go to state 110
    DIVIDE          shift and go to state 111


state 193

    (64) assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression . SEMICOLON
    (86) expression -> expression . PLUS
    (87) expression -> expression . MINUS
    (88) expression -> expression . PLUS expression
    (89) expression -> expression . MINUS expression
    (90) expression -> expression . TIMES expression
    (91) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 229
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109
    TIMES           shift and go to state 110
    DIVIDE          shift and go to state 111


state 194

    (75) assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN . LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN . NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN . NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON

    LBRACE          shift and go to state 230
    NEW             shift and go to state 231


state 195

    (23) parameter -> RETURNTYPE IDENTIFIER .

    COMMA           reduce using rule 23 (parameter -> RETURNTYPE IDENTIFIER .)
    RPAREN          reduce using rule 23 (parameter -> RETURNTYPE IDENTIFIER .)


state 196

    (24) parameter -> RETURNTYPE LBRACKET . RBRACKET IDENTIFIER

    RBRACKET        shift and go to state 232


state 197

    (13) function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 233


state 198

    (14) function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (82) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (83) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (94) return -> . RETURN IDENTIFIER SEMICOLON
    (95) return -> . RETURN SEMICOLON
    (96) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (109) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (114) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (101) ifblock -> . if
    (102) ifblock -> . if else
    (103) ifblock -> . if else_if
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 117
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 24
    THIS            shift and go to state 25
    SWITCH          shift and go to state 26
    RETURN          shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    TRY             shift and go to state 30
    STATIC          shift and go to state 31
    IF              shift and go to state 33

    statements                     shift and go to state 234
    statement                      shift and go to state 116
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    if                             shift and go to state 32

state 199

    (22) parameters -> parameter COMMA . parameters
    (21) parameters -> . parameter
    (22) parameters -> . parameter COMMA parameters
    (23) parameter -> . RETURNTYPE IDENTIFIER
    (24) parameter -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER

    RETURNTYPE      shift and go to state 145

    parameter                      shift and go to state 148
    parameters                     shift and go to state 235

state 200

    (76) assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN . LBRACE items RBRACE SEMICOLON

    LBRACE          shift and go to state 236


state 201

    (82) print_statement -> SOP LPAREN expression RPAREN SEMICOLON .

    ACCESS          reduce using rule 82 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    PASS            reduce using rule 82 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    BREAK           reduce using rule 82 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    RETURNTYPE      reduce using rule 82 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 82 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    PLUS            reduce using rule 82 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    MINUS           reduce using rule 82 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    SOP             reduce using rule 82 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    THIS            reduce using rule 82 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    SWITCH          reduce using rule 82 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 82 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 82 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 82 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    TRY             reduce using rule 82 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    STATIC          reduce using rule 82 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 82 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 82 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 82 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    CASE            reduce using rule 82 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 82 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)


state 202

    (6) this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .

    ACCESS          reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    PASS            reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    BREAK           reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    RETURNTYPE      reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    PLUS            reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    MINUS           reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    SOP             reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    THIS            reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    SWITCH          reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    TRY             reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    STATIC          reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    IF              reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    $end            reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    CASE            reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    DEFAULT         reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)


state 203

    (44) switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE . cases RBRACE
    (45) cases -> . case
    (46) cases -> . case cases
    (47) case -> . CASE NUMBER SEMI statements
    (48) case -> . DEFAULT SEMI statements

    CASE            shift and go to state 239
    DEFAULT         shift and go to state 240

    cases                          shift and go to state 237
    case                           shift and go to state 238

state 204

    (49) while -> WHILE LPAREN params RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (82) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (83) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (94) return -> . RETURN IDENTIFIER SEMICOLON
    (95) return -> . RETURN SEMICOLON
    (96) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (109) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (114) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (101) ifblock -> . if
    (102) ifblock -> . if else
    (103) ifblock -> . if else_if
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 117
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 24
    THIS            shift and go to state 25
    SWITCH          shift and go to state 26
    RETURN          shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    TRY             shift and go to state 30
    STATIC          shift and go to state 31
    IF              shift and go to state 33

    statements                     shift and go to state 241
    statement                      shift and go to state 116
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    if                             shift and go to state 32

state 205

    (109) for -> FOR LPAREN assignment_statement params SEMICOLON . increment RPAREN LBRACE statements RBRACE
    (110) increment -> . PLUS PLUS IDENTIFIER
    (111) increment -> . MINUS MINUS IDENTIFIER
    (112) increment -> . IDENTIFIER PLUS PLUS
    (113) increment -> . IDENTIFIER MINUS MINUS

    PLUS            shift and go to state 243
    MINUS           shift and go to state 245
    IDENTIFIER      shift and go to state 244

    increment                      shift and go to state 242

state 206

    (114) try_catch -> TRY LBRACE statements RBRACE CATCH . LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> TRY LBRACE statements RBRACE CATCH . LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

    LPAREN          shift and go to state 246


state 207

    (17) function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 247


state 208

    (18) function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 248


state 209

    (105) else -> ELSE LBRACE statements RBRACE .

    ACCESS          reduce using rule 105 (else -> ELSE LBRACE statements RBRACE .)
    PASS            reduce using rule 105 (else -> ELSE LBRACE statements RBRACE .)
    BREAK           reduce using rule 105 (else -> ELSE LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 105 (else -> ELSE LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 105 (else -> ELSE LBRACE statements RBRACE .)
    PLUS            reduce using rule 105 (else -> ELSE LBRACE statements RBRACE .)
    MINUS           reduce using rule 105 (else -> ELSE LBRACE statements RBRACE .)
    SOP             reduce using rule 105 (else -> ELSE LBRACE statements RBRACE .)
    THIS            reduce using rule 105 (else -> ELSE LBRACE statements RBRACE .)
    SWITCH          reduce using rule 105 (else -> ELSE LBRACE statements RBRACE .)
    RETURN          reduce using rule 105 (else -> ELSE LBRACE statements RBRACE .)
    WHILE           reduce using rule 105 (else -> ELSE LBRACE statements RBRACE .)
    FOR             reduce using rule 105 (else -> ELSE LBRACE statements RBRACE .)
    TRY             reduce using rule 105 (else -> ELSE LBRACE statements RBRACE .)
    STATIC          reduce using rule 105 (else -> ELSE LBRACE statements RBRACE .)
    IF              reduce using rule 105 (else -> ELSE LBRACE statements RBRACE .)
    $end            reduce using rule 105 (else -> ELSE LBRACE statements RBRACE .)
    RBRACE          reduce using rule 105 (else -> ELSE LBRACE statements RBRACE .)
    CASE            reduce using rule 105 (else -> ELSE LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 105 (else -> ELSE LBRACE statements RBRACE .)


state 210

    (104) if -> IF LPAREN params RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (82) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (83) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (94) return -> . RETURN IDENTIFIER SEMICOLON
    (95) return -> . RETURN SEMICOLON
    (96) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (109) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (114) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (101) ifblock -> . if
    (102) ifblock -> . if else
    (103) ifblock -> . if else_if
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 117
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 24
    THIS            shift and go to state 25
    SWITCH          shift and go to state 26
    RETURN          shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    TRY             shift and go to state 30
    STATIC          shift and go to state 31
    IF              shift and go to state 33

    statements                     shift and go to state 249
    statement                      shift and go to state 116
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    if                             shift and go to state 32

state 211

    (11) constructor -> ACCESS IDENTIFIER . LPAREN parameters RPAREN LBRACE statements RBRACE
    (12) constructor -> ACCESS IDENTIFIER . LPAREN RPAREN LBRACE statements RBRACE
    (66) assignment_statement -> IDENTIFIER . ASSIGN expression SEMICOLON
    (67) assignment_statement -> IDENTIFIER . PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> IDENTIFIER . MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> IDENTIFIER . TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> IDENTIFIER . DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> IDENTIFIER . PLUS PLUS SEMICOLON
    (72) assignment_statement -> IDENTIFIER . MINUS MINUS SEMICOLON
    (77) assignment_statement -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> IDENTIFIER . LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON

    LPAREN          shift and go to state 250
    ASSIGN          shift and go to state 41
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    LBRACKET        shift and go to state 46


state 212

    (5) class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .

    ACCESS          reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    PASS            reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    BREAK           reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    RETURNTYPE      reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    IDENTIFIER      reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    PLUS            reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    MINUS           reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    SOP             reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    THIS            reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    SWITCH          reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    RETURN          reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    WHILE           reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    FOR             reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    TRY             reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    STATIC          reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    IF              reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    $end            reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)


state 213

    (8) stats -> stat stats .

    RBRACE          reduce using rule 8 (stats -> stat stats .)


state 214

    (15) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 251


state 215

    (16) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (82) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (83) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (94) return -> . RETURN IDENTIFIER SEMICOLON
    (95) return -> . RETURN SEMICOLON
    (96) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (109) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (114) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (101) ifblock -> . if
    (102) ifblock -> . if else
    (103) ifblock -> . if else_if
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 117
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 24
    THIS            shift and go to state 25
    SWITCH          shift and go to state 26
    RETURN          shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    TRY             shift and go to state 30
    STATIC          shift and go to state 31
    IF              shift and go to state 33

    statements                     shift and go to state 252
    statement                      shift and go to state 116
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    if                             shift and go to state 32

state 216

    (19) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 253


state 217

    (20) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 254


state 218

    (55) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN . RPAREN SEMICOLON
    (57) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN . params RPAREN SEMICOLON
    (50) params -> . param
    (51) params -> . param LOGICAL params
    (52) param -> . IDENTIFIER
    (53) param -> . NUMBER

    RPAREN          shift and go to state 255
    IDENTIFIER      shift and go to state 86
    NUMBER          shift and go to state 90

    params                         shift and go to state 256
    param                          shift and go to state 89

state 219

    (56) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET . RBRACKET SEMICOLON
    (58) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET . NUMBER RBRACKET SEMICOLON

    RBRACKET        shift and go to state 257
    NUMBER          shift and go to state 258


state 220

    (77) assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression . SEMICOLON
    (86) expression -> expression . PLUS
    (87) expression -> expression . MINUS
    (88) expression -> expression . PLUS expression
    (89) expression -> expression . MINUS expression
    (90) expression -> expression . TIMES expression
    (91) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 259
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109
    TIMES           shift and go to state 110
    DIVIDE          shift and go to state 111


state 221

    (78) assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE . items RBRACE SEMICOLON
    (97) items -> . item
    (98) items -> . item COMMA items
    (99) item -> . NUMBER
    (100) item -> . CHAR

    NUMBER          shift and go to state 224
    CHAR            shift and go to state 225

    items                          shift and go to state 260
    item                           shift and go to state 223

state 222

    (79) assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items . RBRACE SEMICOLON

    RBRACE          shift and go to state 261


state 223

    (97) items -> item .
    (98) items -> item . COMMA items

    RBRACE          reduce using rule 97 (items -> item .)
    COMMA           shift and go to state 262


state 224

    (99) item -> NUMBER .

    COMMA           reduce using rule 99 (item -> NUMBER .)
    RBRACE          reduce using rule 99 (item -> NUMBER .)


state 225

    (100) item -> CHAR .

    COMMA           reduce using rule 100 (item -> CHAR .)
    RBRACE          reduce using rule 100 (item -> CHAR .)


state 226

    (61) assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 61 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 61 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 61 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 61 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 61 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 61 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 61 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 61 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 61 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 61 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 61 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 61 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 61 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 61 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 61 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    IF              reduce using rule 61 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    $end            reduce using rule 61 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 61 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 61 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 61 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 61 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)


state 227

    (62) assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 62 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 62 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 62 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 62 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 62 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 62 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 62 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 62 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 62 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 62 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 62 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 62 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 62 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 62 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 62 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    IF              reduce using rule 62 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    $end            reduce using rule 62 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 62 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 62 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 62 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 62 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)


state 228

    (63) assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 63 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 63 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 63 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 63 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 63 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 63 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 63 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 63 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 63 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 63 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 63 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 63 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 63 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 63 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 63 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    IF              reduce using rule 63 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    $end            reduce using rule 63 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 63 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 63 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 63 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 63 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)


state 229

    (64) assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 64 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 64 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 64 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 64 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 64 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 64 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 64 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 64 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 64 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 64 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 64 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 64 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 64 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 64 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 64 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    IF              reduce using rule 64 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    $end            reduce using rule 64 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 64 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 64 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 64 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 64 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)


state 230

    (75) assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE . items RBRACE SEMICOLON
    (97) items -> . item
    (98) items -> . item COMMA items
    (99) item -> . NUMBER
    (100) item -> . CHAR

    NUMBER          shift and go to state 224
    CHAR            shift and go to state 225

    items                          shift and go to state 263
    item                           shift and go to state 223

state 231

    (80) assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW . RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW . RETURNTYPE LBRACKET RBRACKET SEMICOLON

    RETURNTYPE      shift and go to state 264


state 232

    (24) parameter -> RETURNTYPE LBRACKET RBRACKET . IDENTIFIER

    IDENTIFIER      shift and go to state 265


state 233

    (13) function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (82) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (83) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (94) return -> . RETURN IDENTIFIER SEMICOLON
    (95) return -> . RETURN SEMICOLON
    (96) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (109) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (114) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (101) ifblock -> . if
    (102) ifblock -> . if else
    (103) ifblock -> . if else_if
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 117
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 24
    THIS            shift and go to state 25
    SWITCH          shift and go to state 26
    RETURN          shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    TRY             shift and go to state 30
    STATIC          shift and go to state 31
    IF              shift and go to state 33

    statements                     shift and go to state 266
    statement                      shift and go to state 116
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    if                             shift and go to state 32

state 234

    (14) function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 267


state 235

    (22) parameters -> parameter COMMA parameters .

    RPAREN          reduce using rule 22 (parameters -> parameter COMMA parameters .)


state 236

    (76) assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE . items RBRACE SEMICOLON
    (97) items -> . item
    (98) items -> . item COMMA items
    (99) item -> . NUMBER
    (100) item -> . CHAR

    NUMBER          shift and go to state 224
    CHAR            shift and go to state 225

    items                          shift and go to state 268
    item                           shift and go to state 223

state 237

    (44) switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases . RBRACE

    RBRACE          shift and go to state 269


state 238

    (45) cases -> case .
    (46) cases -> case . cases
    (45) cases -> . case
    (46) cases -> . case cases
    (47) case -> . CASE NUMBER SEMI statements
    (48) case -> . DEFAULT SEMI statements

    RBRACE          reduce using rule 45 (cases -> case .)
    CASE            shift and go to state 239
    DEFAULT         shift and go to state 240

    case                           shift and go to state 238
    cases                          shift and go to state 270

state 239

    (47) case -> CASE . NUMBER SEMI statements

    NUMBER          shift and go to state 271


state 240

    (48) case -> DEFAULT . SEMI statements

    SEMI            shift and go to state 272


state 241

    (49) while -> WHILE LPAREN params RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 273


state 242

    (109) for -> FOR LPAREN assignment_statement params SEMICOLON increment . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 274


state 243

    (110) increment -> PLUS . PLUS IDENTIFIER

    PLUS            shift and go to state 275


state 244

    (112) increment -> IDENTIFIER . PLUS PLUS
    (113) increment -> IDENTIFIER . MINUS MINUS

    PLUS            shift and go to state 276
    MINUS           shift and go to state 277


state 245

    (111) increment -> MINUS . MINUS IDENTIFIER

    MINUS           shift and go to state 278


state 246

    (114) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN . IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN . IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

    IDENTIFIER      shift and go to state 279


state 247

    (17) function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 280


state 248

    (18) function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (82) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (83) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (94) return -> . RETURN IDENTIFIER SEMICOLON
    (95) return -> . RETURN SEMICOLON
    (96) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (109) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (114) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (101) ifblock -> . if
    (102) ifblock -> . if else
    (103) ifblock -> . if else_if
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 117
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 24
    THIS            shift and go to state 25
    SWITCH          shift and go to state 26
    RETURN          shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    TRY             shift and go to state 30
    STATIC          shift and go to state 31
    IF              shift and go to state 33

    statements                     shift and go to state 281
    statement                      shift and go to state 116
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    if                             shift and go to state 32

state 249

    (104) if -> IF LPAREN params RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 282


state 250

    (11) constructor -> ACCESS IDENTIFIER LPAREN . parameters RPAREN LBRACE statements RBRACE
    (12) constructor -> ACCESS IDENTIFIER LPAREN . RPAREN LBRACE statements RBRACE
    (21) parameters -> . parameter
    (22) parameters -> . parameter COMMA parameters
    (23) parameter -> . RETURNTYPE IDENTIFIER
    (24) parameter -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER

    RPAREN          shift and go to state 284
    RETURNTYPE      shift and go to state 145

    parameters                     shift and go to state 283
    parameter                      shift and go to state 148

state 251

    (15) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (82) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (83) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (94) return -> . RETURN IDENTIFIER SEMICOLON
    (95) return -> . RETURN SEMICOLON
    (96) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (109) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (114) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (101) ifblock -> . if
    (102) ifblock -> . if else
    (103) ifblock -> . if else_if
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 117
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 24
    THIS            shift and go to state 25
    SWITCH          shift and go to state 26
    RETURN          shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    TRY             shift and go to state 30
    STATIC          shift and go to state 31
    IF              shift and go to state 33

    statements                     shift and go to state 285
    statement                      shift and go to state 116
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    if                             shift and go to state 32

state 252

    (16) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 286


state 253

    (19) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 287


state 254

    (20) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (82) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (83) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (94) return -> . RETURN IDENTIFIER SEMICOLON
    (95) return -> . RETURN SEMICOLON
    (96) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (109) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (114) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (101) ifblock -> . if
    (102) ifblock -> . if else
    (103) ifblock -> . if else_if
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 117
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 24
    THIS            shift and go to state 25
    SWITCH          shift and go to state 26
    RETURN          shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    TRY             shift and go to state 30
    STATIC          shift and go to state 31
    IF              shift and go to state 33

    statements                     shift and go to state 288
    statement                      shift and go to state 116
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    if                             shift and go to state 32

state 255

    (55) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 289


state 256

    (57) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params . RPAREN SEMICOLON

    RPAREN          shift and go to state 290


state 257

    (56) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 291


state 258

    (58) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 292


state 259

    (77) assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 77 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 77 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 77 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 77 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 77 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 77 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 77 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 77 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 77 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 77 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 77 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 77 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 77 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 77 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 77 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    IF              reduce using rule 77 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    $end            reduce using rule 77 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 77 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 77 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 77 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 77 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)


state 260

    (78) assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items . RBRACE SEMICOLON

    RBRACE          shift and go to state 293


state 261

    (79) assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 294


state 262

    (98) items -> item COMMA . items
    (97) items -> . item
    (98) items -> . item COMMA items
    (99) item -> . NUMBER
    (100) item -> . CHAR

    NUMBER          shift and go to state 224
    CHAR            shift and go to state 225

    item                           shift and go to state 223
    items                          shift and go to state 295

state 263

    (75) assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items . RBRACE SEMICOLON

    RBRACE          shift and go to state 296


state 264

    (80) assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE . LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE . LBRACKET RBRACKET SEMICOLON

    LBRACKET        shift and go to state 297


state 265

    (24) parameter -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER .

    COMMA           reduce using rule 24 (parameter -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER .)
    RPAREN          reduce using rule 24 (parameter -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER .)


state 266

    (13) function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 298


state 267

    (14) function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)


state 268

    (76) assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items . RBRACE SEMICOLON

    RBRACE          shift and go to state 299


state 269

    (44) switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .

    ACCESS          reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    PASS            reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    BREAK           reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    RETURNTYPE      reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    IDENTIFIER      reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    PLUS            reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    MINUS           reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    SOP             reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    THIS            reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    SWITCH          reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    RETURN          reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    WHILE           reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    FOR             reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    TRY             reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    STATIC          reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    IF              reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    $end            reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    RBRACE          reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    CASE            reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    DEFAULT         reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)


state 270

    (46) cases -> case cases .

    RBRACE          reduce using rule 46 (cases -> case cases .)


state 271

    (47) case -> CASE NUMBER . SEMI statements

    SEMI            shift and go to state 300


state 272

    (48) case -> DEFAULT SEMI . statements
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (82) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (83) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (94) return -> . RETURN IDENTIFIER SEMICOLON
    (95) return -> . RETURN SEMICOLON
    (96) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (109) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (114) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (101) ifblock -> . if
    (102) ifblock -> . if else
    (103) ifblock -> . if else_if
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 117
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 24
    THIS            shift and go to state 25
    SWITCH          shift and go to state 26
    RETURN          shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    TRY             shift and go to state 30
    STATIC          shift and go to state 31
    IF              shift and go to state 33

    statements                     shift and go to state 301
    statement                      shift and go to state 116
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    if                             shift and go to state 32

state 273

    (49) while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)


state 274

    (109) for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 302


state 275

    (110) increment -> PLUS PLUS . IDENTIFIER

    IDENTIFIER      shift and go to state 303


state 276

    (112) increment -> IDENTIFIER PLUS . PLUS

    PLUS            shift and go to state 304


state 277

    (113) increment -> IDENTIFIER MINUS . MINUS

    MINUS           shift and go to state 305


state 278

    (111) increment -> MINUS MINUS . IDENTIFIER

    IDENTIFIER      shift and go to state 306


state 279

    (114) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER . IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER . IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

    IDENTIFIER      shift and go to state 307


state 280

    (17) function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (82) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (83) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (94) return -> . RETURN IDENTIFIER SEMICOLON
    (95) return -> . RETURN SEMICOLON
    (96) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (109) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (114) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (101) ifblock -> . if
    (102) ifblock -> . if else
    (103) ifblock -> . if else_if
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 117
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 24
    THIS            shift and go to state 25
    SWITCH          shift and go to state 26
    RETURN          shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    TRY             shift and go to state 30
    STATIC          shift and go to state 31
    IF              shift and go to state 33

    statements                     shift and go to state 308
    statement                      shift and go to state 116
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    if                             shift and go to state 32

state 281

    (18) function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 309


state 282

    (104) if -> IF LPAREN params RPAREN LBRACE statements RBRACE .

    ELSE            reduce using rule 104 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    ACCESS          reduce using rule 104 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 104 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 104 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 104 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 104 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 104 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 104 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 104 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 104 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 104 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 104 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 104 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 104 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 104 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 104 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 104 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 104 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 104 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 104 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 104 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)


state 283

    (11) constructor -> ACCESS IDENTIFIER LPAREN parameters . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 310


state 284

    (12) constructor -> ACCESS IDENTIFIER LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 311


state 285

    (15) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 312


state 286

    (16) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)


state 287

    (19) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (82) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (83) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (94) return -> . RETURN IDENTIFIER SEMICOLON
    (95) return -> . RETURN SEMICOLON
    (96) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (109) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (114) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (101) ifblock -> . if
    (102) ifblock -> . if else
    (103) ifblock -> . if else_if
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 117
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 24
    THIS            shift and go to state 25
    SWITCH          shift and go to state 26
    RETURN          shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    TRY             shift and go to state 30
    STATIC          shift and go to state 31
    IF              shift and go to state 33

    statements                     shift and go to state 313
    statement                      shift and go to state 116
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    if                             shift and go to state 32

state 288

    (20) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 314


state 289

    (55) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .

    ACCESS          reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    PASS            reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    RETURNTYPE      reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    PLUS            reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    MINUS           reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    SOP             reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    THIS            reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    SWITCH          reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    TRY             reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    STATIC          reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    CASE            reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)


state 290

    (57) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 315


state 291

    (56) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .

    ACCESS          reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    PASS            reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    BREAK           reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    RETURNTYPE      reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    PLUS            reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    MINUS           reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SOP             reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    THIS            reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SWITCH          reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    RETURN          reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    WHILE           reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    FOR             reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    TRY             reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    STATIC          reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    IF              reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    $end            reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    CASE            reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    DEFAULT         reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)


state 292

    (58) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 316


state 293

    (78) assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 317


state 294

    (79) assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .

    ACCESS          reduce using rule 79 (assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    PASS            reduce using rule 79 (assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    BREAK           reduce using rule 79 (assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    RETURNTYPE      reduce using rule 79 (assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    IDENTIFIER      reduce using rule 79 (assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    PLUS            reduce using rule 79 (assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    MINUS           reduce using rule 79 (assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    SOP             reduce using rule 79 (assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    THIS            reduce using rule 79 (assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    SWITCH          reduce using rule 79 (assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    RETURN          reduce using rule 79 (assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    WHILE           reduce using rule 79 (assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    FOR             reduce using rule 79 (assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    TRY             reduce using rule 79 (assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    STATIC          reduce using rule 79 (assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    IF              reduce using rule 79 (assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    $end            reduce using rule 79 (assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    NUMBER          reduce using rule 79 (assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    RBRACE          reduce using rule 79 (assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    CASE            reduce using rule 79 (assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    DEFAULT         reduce using rule 79 (assignment_statement -> IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)


state 295

    (98) items -> item COMMA items .

    RBRACE          reduce using rule 98 (items -> item COMMA items .)


state 296

    (75) assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 318


state 297

    (80) assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET . NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET . RBRACKET SEMICOLON

    NUMBER          shift and go to state 320
    RBRACKET        shift and go to state 319


state 298

    (13) function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 299

    (76) assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 321


state 300

    (47) case -> CASE NUMBER SEMI . statements
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (82) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (83) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (94) return -> . RETURN IDENTIFIER SEMICOLON
    (95) return -> . RETURN SEMICOLON
    (96) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (109) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (114) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (101) ifblock -> . if
    (102) ifblock -> . if else
    (103) ifblock -> . if else_if
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 117
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 24
    THIS            shift and go to state 25
    SWITCH          shift and go to state 26
    RETURN          shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    TRY             shift and go to state 30
    STATIC          shift and go to state 31
    IF              shift and go to state 33

    statements                     shift and go to state 322
    statement                      shift and go to state 116
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    if                             shift and go to state 32

state 301

    (48) case -> DEFAULT SEMI statements .

    CASE            reduce using rule 48 (case -> DEFAULT SEMI statements .)
    DEFAULT         reduce using rule 48 (case -> DEFAULT SEMI statements .)
    RBRACE          reduce using rule 48 (case -> DEFAULT SEMI statements .)


state 302

    (109) for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (82) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (83) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (94) return -> . RETURN IDENTIFIER SEMICOLON
    (95) return -> . RETURN SEMICOLON
    (96) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (109) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (114) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (101) ifblock -> . if
    (102) ifblock -> . if else
    (103) ifblock -> . if else_if
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 117
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 24
    THIS            shift and go to state 25
    SWITCH          shift and go to state 26
    RETURN          shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    TRY             shift and go to state 30
    STATIC          shift and go to state 31
    IF              shift and go to state 33

    assignment_statement           shift and go to state 7
    statements                     shift and go to state 323
    statement                      shift and go to state 116
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    if                             shift and go to state 32

state 303

    (110) increment -> PLUS PLUS IDENTIFIER .

    RPAREN          reduce using rule 110 (increment -> PLUS PLUS IDENTIFIER .)


state 304

    (112) increment -> IDENTIFIER PLUS PLUS .

    RPAREN          reduce using rule 112 (increment -> IDENTIFIER PLUS PLUS .)


state 305

    (113) increment -> IDENTIFIER MINUS MINUS .

    RPAREN          reduce using rule 113 (increment -> IDENTIFIER MINUS MINUS .)


state 306

    (111) increment -> MINUS MINUS IDENTIFIER .

    RPAREN          reduce using rule 111 (increment -> MINUS MINUS IDENTIFIER .)


state 307

    (114) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER . RPAREN LBRACE statements RBRACE
    (115) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER . RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

    RPAREN          shift and go to state 324


state 308

    (17) function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 325


state 309

    (18) function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)


state 310

    (11) constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 326


state 311

    (12) constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (82) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (83) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (94) return -> . RETURN IDENTIFIER SEMICOLON
    (95) return -> . RETURN SEMICOLON
    (96) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (109) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (114) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (101) ifblock -> . if
    (102) ifblock -> . if else
    (103) ifblock -> . if else_if
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 117
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 24
    THIS            shift and go to state 25
    SWITCH          shift and go to state 26
    RETURN          shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    TRY             shift and go to state 30
    STATIC          shift and go to state 31
    IF              shift and go to state 33

    statements                     shift and go to state 327
    statement                      shift and go to state 116
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    if                             shift and go to state 32

state 312

    (15) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 313

    (19) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 328


state 314

    (20) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)


state 315

    (57) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .

    ACCESS          reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    PASS            reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    BREAK           reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    RETURNTYPE      reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    PLUS            reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    MINUS           reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    SOP             reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    THIS            reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    SWITCH          reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    RETURN          reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    WHILE           reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    FOR             reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    TRY             reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    STATIC          reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    IF              reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    $end            reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    RBRACE          reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    CASE            reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)


state 316

    (58) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .

    ACCESS          reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    PASS            reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    BREAK           reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    RETURNTYPE      reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    PLUS            reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    MINUS           reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    SOP             reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    THIS            reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    SWITCH          reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    RETURN          reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    WHILE           reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    FOR             reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    TRY             reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    STATIC          reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    IF              reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    $end            reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    CASE            reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    DEFAULT         reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)


state 317

    (78) assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .

    ACCESS          reduce using rule 78 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    PASS            reduce using rule 78 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    BREAK           reduce using rule 78 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    RETURNTYPE      reduce using rule 78 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    IDENTIFIER      reduce using rule 78 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    PLUS            reduce using rule 78 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    MINUS           reduce using rule 78 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    SOP             reduce using rule 78 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    THIS            reduce using rule 78 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    SWITCH          reduce using rule 78 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    RETURN          reduce using rule 78 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    WHILE           reduce using rule 78 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    FOR             reduce using rule 78 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    TRY             reduce using rule 78 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    STATIC          reduce using rule 78 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    IF              reduce using rule 78 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    $end            reduce using rule 78 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    NUMBER          reduce using rule 78 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    RBRACE          reduce using rule 78 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    CASE            reduce using rule 78 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    DEFAULT         reduce using rule 78 (assignment_statement -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)


state 318

    (75) assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .

    ACCESS          reduce using rule 75 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    PASS            reduce using rule 75 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    BREAK           reduce using rule 75 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    RETURNTYPE      reduce using rule 75 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    IDENTIFIER      reduce using rule 75 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    PLUS            reduce using rule 75 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    MINUS           reduce using rule 75 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    SOP             reduce using rule 75 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    THIS            reduce using rule 75 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    SWITCH          reduce using rule 75 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    RETURN          reduce using rule 75 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    WHILE           reduce using rule 75 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    FOR             reduce using rule 75 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    TRY             reduce using rule 75 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    STATIC          reduce using rule 75 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    IF              reduce using rule 75 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    $end            reduce using rule 75 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    NUMBER          reduce using rule 75 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    RBRACE          reduce using rule 75 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    CASE            reduce using rule 75 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)
    DEFAULT         reduce using rule 75 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON .)


state 319

    (81) assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 329


state 320

    (80) assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 330


state 321

    (76) assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .

    ACCESS          reduce using rule 76 (assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    PASS            reduce using rule 76 (assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    BREAK           reduce using rule 76 (assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    RETURNTYPE      reduce using rule 76 (assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    IDENTIFIER      reduce using rule 76 (assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    PLUS            reduce using rule 76 (assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    MINUS           reduce using rule 76 (assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    SOP             reduce using rule 76 (assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    THIS            reduce using rule 76 (assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    SWITCH          reduce using rule 76 (assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    RETURN          reduce using rule 76 (assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    WHILE           reduce using rule 76 (assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    FOR             reduce using rule 76 (assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    TRY             reduce using rule 76 (assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    STATIC          reduce using rule 76 (assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    IF              reduce using rule 76 (assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    $end            reduce using rule 76 (assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    NUMBER          reduce using rule 76 (assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    RBRACE          reduce using rule 76 (assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    CASE            reduce using rule 76 (assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    DEFAULT         reduce using rule 76 (assignment_statement -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)


state 322

    (47) case -> CASE NUMBER SEMI statements .

    CASE            reduce using rule 47 (case -> CASE NUMBER SEMI statements .)
    DEFAULT         reduce using rule 47 (case -> CASE NUMBER SEMI statements .)
    RBRACE          reduce using rule 47 (case -> CASE NUMBER SEMI statements .)


state 323

    (109) for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 331


state 324

    (114) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN . LBRACE statements RBRACE
    (115) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN . LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

    LBRACE          shift and go to state 332


state 325

    (17) function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 326

    (11) constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (82) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (83) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (94) return -> . RETURN IDENTIFIER SEMICOLON
    (95) return -> . RETURN SEMICOLON
    (96) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (109) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (114) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (101) ifblock -> . if
    (102) ifblock -> . if else
    (103) ifblock -> . if else_if
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 117
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 24
    THIS            shift and go to state 25
    SWITCH          shift and go to state 26
    RETURN          shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    TRY             shift and go to state 30
    STATIC          shift and go to state 31
    IF              shift and go to state 33

    statements                     shift and go to state 333
    statement                      shift and go to state 116
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    if                             shift and go to state 32

state 327

    (12) constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 334


state 328

    (19) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 329

    (81) assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON .

    ACCESS          reduce using rule 81 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON .)
    PASS            reduce using rule 81 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON .)
    BREAK           reduce using rule 81 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON .)
    RETURNTYPE      reduce using rule 81 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 81 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON .)
    PLUS            reduce using rule 81 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON .)
    MINUS           reduce using rule 81 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON .)
    SOP             reduce using rule 81 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON .)
    THIS            reduce using rule 81 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON .)
    SWITCH          reduce using rule 81 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON .)
    RETURN          reduce using rule 81 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON .)
    WHILE           reduce using rule 81 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON .)
    FOR             reduce using rule 81 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON .)
    TRY             reduce using rule 81 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON .)
    STATIC          reduce using rule 81 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON .)
    IF              reduce using rule 81 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON .)
    $end            reduce using rule 81 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON .)
    NUMBER          reduce using rule 81 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 81 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON .)
    CASE            reduce using rule 81 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON .)
    DEFAULT         reduce using rule 81 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON .)


state 330

    (80) assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 335


state 331

    (109) for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 109 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 109 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 109 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 109 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 109 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 109 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 109 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 109 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 109 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 109 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 109 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 109 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 109 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 109 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 109 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 109 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 109 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 109 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 109 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 109 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)


state 332

    (114) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE . statements RBRACE
    (115) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE . statements RBRACE FINALLY LBRACE statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (82) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (83) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (94) return -> . RETURN IDENTIFIER SEMICOLON
    (95) return -> . RETURN SEMICOLON
    (96) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (109) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (114) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (101) ifblock -> . if
    (102) ifblock -> . if else
    (103) ifblock -> . if else_if
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 117
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 24
    THIS            shift and go to state 25
    SWITCH          shift and go to state 26
    RETURN          shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    TRY             shift and go to state 30
    STATIC          shift and go to state 31
    IF              shift and go to state 33

    statements                     shift and go to state 336
    statement                      shift and go to state 116
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    if                             shift and go to state 32

state 333

    (11) constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 337


state 334

    (12) constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)


state 335

    (80) assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON .

    ACCESS          reduce using rule 80 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON .)
    PASS            reduce using rule 80 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON .)
    BREAK           reduce using rule 80 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON .)
    RETURNTYPE      reduce using rule 80 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 80 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON .)
    PLUS            reduce using rule 80 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON .)
    MINUS           reduce using rule 80 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON .)
    SOP             reduce using rule 80 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON .)
    THIS            reduce using rule 80 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON .)
    SWITCH          reduce using rule 80 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON .)
    RETURN          reduce using rule 80 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON .)
    WHILE           reduce using rule 80 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON .)
    FOR             reduce using rule 80 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON .)
    TRY             reduce using rule 80 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON .)
    STATIC          reduce using rule 80 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON .)
    IF              reduce using rule 80 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON .)
    $end            reduce using rule 80 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON .)
    NUMBER          reduce using rule 80 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 80 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON .)
    CASE            reduce using rule 80 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON .)
    DEFAULT         reduce using rule 80 (assignment_statement -> RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON .)


state 336

    (114) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements . RBRACE
    (115) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements . RBRACE FINALLY LBRACE statements RBRACE

    RBRACE          shift and go to state 338


state 337

    (11) constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 338

    (114) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .
    (115) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE . FINALLY LBRACE statements RBRACE

    ACCESS          reduce using rule 114 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 114 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 114 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 114 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 114 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 114 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 114 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 114 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 114 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 114 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 114 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 114 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 114 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 114 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 114 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 114 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 114 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 114 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 114 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 114 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    FINALLY         shift and go to state 339


state 339

    (115) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY . LBRACE statements RBRACE

    LBRACE          shift and go to state 340


state 340

    (115) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (59) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (60) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (61) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (62) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (63) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (64) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (66) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (67) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER MINUS MINUS SEMICOLON
    (73) assignment_statement -> . PLUS PLUS IDENTIFIER SEMICOLON
    (74) assignment_statement -> . MINUS MINUS IDENTIFIER SEMICOLON
    (75) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (76) assignment_statement -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (77) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (78) assignment_statement -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (79) assignment_statement -> . IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE items RBRACE SEMICOLON
    (80) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET NUMBER RBRACKET SEMICOLON
    (81) assignment_statement -> . RETURNTYPE IDENTIFIER LBRACKET RBRACKET ASSIGN NEW RETURNTYPE LBRACKET RBRACKET SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (82) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (83) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (94) return -> . RETURN IDENTIFIER SEMICOLON
    (95) return -> . RETURN SEMICOLON
    (96) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (109) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (114) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (115) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (101) ifblock -> . if
    (102) ifblock -> . if else
    (103) ifblock -> . if else_if
    (104) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 117
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 24
    THIS            shift and go to state 25
    SWITCH          shift and go to state 26
    RETURN          shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    TRY             shift and go to state 30
    STATIC          shift and go to state 31
    IF              shift and go to state 33

    statements                     shift and go to state 341
    statement                      shift and go to state 116
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    if                             shift and go to state 32

state 341

    (115) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements . RBRACE

    RBRACE          shift and go to state 342


state 342

    (115) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .

    ACCESS          reduce using rule 115 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    PASS            reduce using rule 115 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    BREAK           reduce using rule 115 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 115 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 115 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    PLUS            reduce using rule 115 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    MINUS           reduce using rule 115 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    SOP             reduce using rule 115 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    THIS            reduce using rule 115 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    SWITCH          reduce using rule 115 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    RETURN          reduce using rule 115 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    WHILE           reduce using rule 115 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    FOR             reduce using rule 115 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    TRY             reduce using rule 115 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    STATIC          reduce using rule 115 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    IF              reduce using rule 115 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    $end            reduce using rule 115 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    RBRACE          reduce using rule 115 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    CASE            reduce using rule 115 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 115 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 57 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 156 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 156 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 156 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 156 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 157 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 157 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 157 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 157 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 158 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 158 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 158 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 158 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 159 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 159 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 159 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 159 resolved as shift
