Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programs
Rule 1     programs -> program
Rule 2     programs -> program programs
Rule 3     program -> class
Rule 4     program -> statement
Rule 5     class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE
Rule 6     this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
Rule 7     stats -> stat
Rule 8     stats -> stat stats
Rule 9     stat -> constructor
Rule 10    stat -> statement
Rule 11    constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 12    constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
Rule 13    function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 14    function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
Rule 15    function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 16    function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
Rule 17    function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 18    function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
Rule 19    function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 20    function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
Rule 21    parameters -> parameter
Rule 22    parameters -> parameter COMMA parameters
Rule 23    parameter -> RETURNTYPE IDENTIFIER
Rule 24    parameter -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER
Rule 25    statements -> statement
Rule 26    statements -> statement statements
Rule 27    function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON
Rule 28    function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON
Rule 29    statement -> assignment_statement
Rule 30    statement -> class_statement
Rule 31    statement -> print_statement
Rule 32    statement -> this_assign
Rule 33    statement -> switch
Rule 34    statement -> return
Rule 35    statement -> while
Rule 36    statement -> for
Rule 37    statement -> try_catch
Rule 38    statement -> PASS SEMICOLON
Rule 39    statement -> ACCESS assignment_statement
Rule 40    statement -> function
Rule 41    statement -> function_call
Rule 42    statement -> ifblock
Rule 43    statement -> BREAK SEMICOLON
Rule 44    switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
Rule 45    cases -> case
Rule 46    cases -> case cases
Rule 47    case -> CASE NUMBER COLON statements
Rule 48    case -> DEFAULT COLON statements
Rule 49    while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE
Rule 50    params -> param
Rule 51    params -> param LOGICAL params
Rule 52    param -> increment
Rule 53    param -> expression
Rule 54    class_statement -> IDENTIFIER IDENTIFIER SEMICOLON
Rule 55    class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
Rule 56    class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
Rule 57    class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
Rule 58    class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
Rule 59    arrays -> LBRACKET RBRACKET
Rule 60    arrays -> LBRACKET RBRACKET arrays
Rule 61    arrays -> LBRACKET expression RBRACKET arrays
Rule 62    arrays -> LBRACKET expression RBRACKET
Rule 63    bool -> TRUE
Rule 64    bool -> FALSE
Rule 65    assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
Rule 66    assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON
Rule 67    assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
Rule 68    assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
Rule 69    assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
Rule 70    assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
Rule 71    assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
Rule 72    assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON
Rule 73    assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON
Rule 74    assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON
Rule 75    assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON
Rule 76    assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
Rule 77    assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON
Rule 78    assignment_statement -> increment SEMICOLON
Rule 79    assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON
Rule 80    assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON
Rule 81    assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON
Rule 82    assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
Rule 83    assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
Rule 84    assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON
Rule 85    assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
Rule 86    assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
Rule 87    assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
Rule 88    print_statement -> SOP LPAREN expression RPAREN SEMICOLON
Rule 89    print_statement -> SOP LPAREN RPAREN SEMICOLON
Rule 90    array_access -> IDENTIFIER arrays
Rule 91    expression -> IDENTIFIER
Rule 92    expression -> NUMBER
Rule 93    expression -> array_access
Rule 94    expression -> expression PLUS
Rule 95    expression -> expression MINUS
Rule 96    expression -> expression PLUS expression
Rule 97    expression -> expression MINUS expression
Rule 98    expression -> expression TIMES expression
Rule 99    expression -> expression DIVIDE expression
Rule 100   expression -> STRING
Rule 101   expression -> CHAR
Rule 102   expression -> bool
Rule 103   return -> RETURN IDENTIFIER SEMICOLON
Rule 104   return -> RETURN SEMICOLON
Rule 105   return -> RETURN expression SEMICOLON
Rule 106   items -> item
Rule 107   items -> item COMMA items
Rule 108   item -> NUMBER
Rule 109   item -> CHAR
Rule 110   ifblock -> if
Rule 111   ifblock -> if else
Rule 112   ifblock -> if else_if
Rule 113   if -> IF LPAREN params RPAREN LBRACE statements RBRACE
Rule 114   else -> ELSE LBRACE statements RBRACE
Rule 115   else_if -> ELSE if
Rule 116   else_if -> ELSE if else_if
Rule 117   else_if -> ELSE if else
Rule 118   for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
Rule 119   increment -> PLUS PLUS IDENTIFIER
Rule 120   increment -> MINUS MINUS IDENTIFIER
Rule 121   increment -> IDENTIFIER PLUS PLUS
Rule 122   increment -> IDENTIFIER MINUS MINUS
Rule 123   try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
Rule 124   try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

Terminals, with rules where they appear

ACCESS               : 5 11 12 15 16 19 20 39
ASSIGN               : 6 55 56 57 58 65 67 68 69 70 72 73 74 75 76 82 83 84 85 86 87
BREAK                : 43
CASE                 : 47
CATCH                : 123 124
CHAR                 : 101 109
CLASS                : 5
COLON                : 47 48
COMMA                : 22 107
DEFAULT              : 48
DIVIDE               : 70 76 99
ELSE                 : 114 115 116 117
FALSE                : 64
FINALLY              : 124
FOR                  : 118
IDENTIFIER           : 5 6 6 11 12 13 14 15 16 17 18 19 20 23 24 27 28 44 54 54 55 55 55 56 56 56 57 57 57 58 58 58 65 66 67 68 69 70 71 72 73 74 75 76 77 79 80 81 82 83 84 85 86 87 90 91 103 119 120 121 122 123 123 124 124
IF                   : 113
LBRACE               : 5 11 12 13 14 15 16 17 18 19 20 44 49 82 83 85 113 114 118 123 123 124 124 124
LBRACKET             : 24 56 58 59 60 61 62
LOGICAL              : 51
LPAREN               : 11 12 13 14 15 16 17 18 19 20 27 28 44 49 55 57 88 89 113 118 123 124
MINUS                : 68 74 79 79 81 81 95 97 120 120 122 122
NEW                  : 55 56 57 58 86 87
NUMBER               : 47 58 92 108
PASS                 : 38
PLUS                 : 67 71 71 73 77 77 80 80 94 96 119 119 121 121
RBRACE               : 5 11 12 13 14 15 16 17 18 19 20 44 49 82 83 85 113 114 118 123 123 124 124 124
RBRACKET             : 24 56 58 59 60 61 62
RETURN               : 103 104 105
RETURNTYPE           : 13 14 15 16 17 18 19 20 23 24 65 66 67 68 69 70 71 82 83 86 86 87 87
RPAREN               : 11 12 13 14 15 16 17 18 19 20 27 28 44 49 55 57 88 89 113 118 123 124
SEMICOLON            : 6 27 28 38 43 54 55 56 57 58 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 103 104 105 118
SOP                  : 88 89
STATIC               : 17 18 19 20
STRING               : 100
SWITCH               : 44
THIS                 : 6
TIMES                : 69 75 98
TRUE                 : 63
TRY                  : 123 124
WHILE                : 49
error                : 

Nonterminals, with rules where they appear

array_access         : 93
arrays               : 60 61 77 79 80 81 82 83 84 85 86 86 87 87 90
assignment_statement : 29 39 118
bool                 : 102
case                 : 45 46
cases                : 44 46
class                : 3
class_statement      : 30
constructor          : 9
else                 : 111 117
else_if              : 112 116
expression           : 53 61 62 65 67 68 69 70 72 73 74 75 76 84 88 94 95 96 96 97 97 98 98 99 99 105
for                  : 36
function             : 40
function_call        : 41
if                   : 110 111 112 115 116 117
ifblock              : 42
increment            : 52 78 118
item                 : 106 107
items                : 82 83 85 107
param                : 50 51
parameter            : 21 22
parameters           : 11 13 15 17 19 22
params               : 27 49 51 57 113 118
print_statement      : 31
program              : 1 2
programs             : 2 0
return               : 34
stat                 : 7 8
statement            : 4 10 25 26
statements           : 11 12 13 14 15 16 17 18 19 20 26 47 48 49 113 114 118 123 123 124 124 124
stats                : 5 8
switch               : 33
this_assign          : 32
try_catch            : 37
while                : 35

Parsing method: LALR

state 0

    (0) S' -> . programs
    (1) programs -> . program
    (2) programs -> . program programs
    (3) program -> . class
    (4) program -> . statement
    (5) class -> . ACCESS CLASS IDENTIFIER LBRACE stats RBRACE
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (88) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (89) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (103) return -> . RETURN IDENTIFIER SEMICOLON
    (104) return -> . RETURN SEMICOLON
    (105) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (118) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (123) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (110) ifblock -> . if
    (111) ifblock -> . if else
    (112) ifblock -> . if else_if
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    ACCESS          shift and go to state 5
    PASS            shift and go to state 16
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 25
    THIS            shift and go to state 26
    SWITCH          shift and go to state 27
    RETURN          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    TRY             shift and go to state 31
    STATIC          shift and go to state 32
    IF              shift and go to state 34

    programs                       shift and go to state 1
    program                        shift and go to state 2
    class                          shift and go to state 3
    statement                      shift and go to state 4
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    increment                      shift and go to state 24
    if                             shift and go to state 33

state 1

    (0) S' -> programs .



state 2

    (1) programs -> program .
    (2) programs -> program . programs
    (1) programs -> . program
    (2) programs -> . program programs
    (3) program -> . class
    (4) program -> . statement
    (5) class -> . ACCESS CLASS IDENTIFIER LBRACE stats RBRACE
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (88) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (89) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (103) return -> . RETURN IDENTIFIER SEMICOLON
    (104) return -> . RETURN SEMICOLON
    (105) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (118) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (123) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (110) ifblock -> . if
    (111) ifblock -> . if else
    (112) ifblock -> . if else_if
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    $end            reduce using rule 1 (programs -> program .)
    ACCESS          shift and go to state 5
    PASS            shift and go to state 16
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 25
    THIS            shift and go to state 26
    SWITCH          shift and go to state 27
    RETURN          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    TRY             shift and go to state 31
    STATIC          shift and go to state 32
    IF              shift and go to state 34

    program                        shift and go to state 2
    programs                       shift and go to state 35
    class                          shift and go to state 3
    statement                      shift and go to state 4
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    increment                      shift and go to state 24
    if                             shift and go to state 33

state 3

    (3) program -> class .

    ACCESS          reduce using rule 3 (program -> class .)
    PASS            reduce using rule 3 (program -> class .)
    BREAK           reduce using rule 3 (program -> class .)
    RETURNTYPE      reduce using rule 3 (program -> class .)
    IDENTIFIER      reduce using rule 3 (program -> class .)
    PLUS            reduce using rule 3 (program -> class .)
    MINUS           reduce using rule 3 (program -> class .)
    SOP             reduce using rule 3 (program -> class .)
    THIS            reduce using rule 3 (program -> class .)
    SWITCH          reduce using rule 3 (program -> class .)
    RETURN          reduce using rule 3 (program -> class .)
    WHILE           reduce using rule 3 (program -> class .)
    FOR             reduce using rule 3 (program -> class .)
    TRY             reduce using rule 3 (program -> class .)
    STATIC          reduce using rule 3 (program -> class .)
    IF              reduce using rule 3 (program -> class .)
    $end            reduce using rule 3 (program -> class .)


state 4

    (4) program -> statement .

    ACCESS          reduce using rule 4 (program -> statement .)
    PASS            reduce using rule 4 (program -> statement .)
    BREAK           reduce using rule 4 (program -> statement .)
    RETURNTYPE      reduce using rule 4 (program -> statement .)
    IDENTIFIER      reduce using rule 4 (program -> statement .)
    PLUS            reduce using rule 4 (program -> statement .)
    MINUS           reduce using rule 4 (program -> statement .)
    SOP             reduce using rule 4 (program -> statement .)
    THIS            reduce using rule 4 (program -> statement .)
    SWITCH          reduce using rule 4 (program -> statement .)
    RETURN          reduce using rule 4 (program -> statement .)
    WHILE           reduce using rule 4 (program -> statement .)
    FOR             reduce using rule 4 (program -> statement .)
    TRY             reduce using rule 4 (program -> statement .)
    STATIC          reduce using rule 4 (program -> statement .)
    IF              reduce using rule 4 (program -> statement .)
    $end            reduce using rule 4 (program -> statement .)


state 5

    (5) class -> ACCESS . CLASS IDENTIFIER LBRACE stats RBRACE
    (39) statement -> ACCESS . assignment_statement
    (15) function -> ACCESS . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> ACCESS . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> ACCESS . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> ACCESS . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS

    CLASS           shift and go to state 36
    RETURNTYPE      shift and go to state 39
    STATIC          shift and go to state 40
    IDENTIFIER      shift and go to state 37
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23

    assignment_statement           shift and go to state 38
    increment                      shift and go to state 24

state 6

    (72) assignment_statement -> IDENTIFIER . ASSIGN expression SEMICOLON
    (73) assignment_statement -> IDENTIFIER . PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> IDENTIFIER . MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> IDENTIFIER . TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> IDENTIFIER . DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> IDENTIFIER . arrays PLUS PLUS SEMICOLON
    (79) assignment_statement -> IDENTIFIER . arrays MINUS MINUS SEMICOLON
    (84) assignment_statement -> IDENTIFIER . arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> IDENTIFIER . arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (54) class_statement -> IDENTIFIER . IDENTIFIER SEMICOLON
    (55) class_statement -> IDENTIFIER . IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> IDENTIFIER . IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> IDENTIFIER . IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> IDENTIFIER . IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (27) function_call -> IDENTIFIER . LPAREN params RPAREN SEMICOLON
    (28) function_call -> IDENTIFIER . LPAREN RPAREN SEMICOLON
    (121) increment -> IDENTIFIER . PLUS PLUS
    (122) increment -> IDENTIFIER . MINUS MINUS
    (59) arrays -> . LBRACKET RBRACKET
    (60) arrays -> . LBRACKET RBRACKET arrays
    (61) arrays -> . LBRACKET expression RBRACKET arrays
    (62) arrays -> . LBRACKET expression RBRACKET

    ASSIGN          shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    IDENTIFIER      shift and go to state 41
    LPAREN          shift and go to state 48
    LBRACKET        shift and go to state 49

    arrays                         shift and go to state 47

state 7

    (29) statement -> assignment_statement .

    ACCESS          reduce using rule 29 (statement -> assignment_statement .)
    PASS            reduce using rule 29 (statement -> assignment_statement .)
    BREAK           reduce using rule 29 (statement -> assignment_statement .)
    RETURNTYPE      reduce using rule 29 (statement -> assignment_statement .)
    IDENTIFIER      reduce using rule 29 (statement -> assignment_statement .)
    PLUS            reduce using rule 29 (statement -> assignment_statement .)
    MINUS           reduce using rule 29 (statement -> assignment_statement .)
    SOP             reduce using rule 29 (statement -> assignment_statement .)
    THIS            reduce using rule 29 (statement -> assignment_statement .)
    SWITCH          reduce using rule 29 (statement -> assignment_statement .)
    RETURN          reduce using rule 29 (statement -> assignment_statement .)
    WHILE           reduce using rule 29 (statement -> assignment_statement .)
    FOR             reduce using rule 29 (statement -> assignment_statement .)
    TRY             reduce using rule 29 (statement -> assignment_statement .)
    STATIC          reduce using rule 29 (statement -> assignment_statement .)
    IF              reduce using rule 29 (statement -> assignment_statement .)
    $end            reduce using rule 29 (statement -> assignment_statement .)
    RBRACE          reduce using rule 29 (statement -> assignment_statement .)
    CASE            reduce using rule 29 (statement -> assignment_statement .)
    DEFAULT         reduce using rule 29 (statement -> assignment_statement .)


state 8

    (30) statement -> class_statement .

    ACCESS          reduce using rule 30 (statement -> class_statement .)
    PASS            reduce using rule 30 (statement -> class_statement .)
    BREAK           reduce using rule 30 (statement -> class_statement .)
    RETURNTYPE      reduce using rule 30 (statement -> class_statement .)
    IDENTIFIER      reduce using rule 30 (statement -> class_statement .)
    PLUS            reduce using rule 30 (statement -> class_statement .)
    MINUS           reduce using rule 30 (statement -> class_statement .)
    SOP             reduce using rule 30 (statement -> class_statement .)
    THIS            reduce using rule 30 (statement -> class_statement .)
    SWITCH          reduce using rule 30 (statement -> class_statement .)
    RETURN          reduce using rule 30 (statement -> class_statement .)
    WHILE           reduce using rule 30 (statement -> class_statement .)
    FOR             reduce using rule 30 (statement -> class_statement .)
    TRY             reduce using rule 30 (statement -> class_statement .)
    STATIC          reduce using rule 30 (statement -> class_statement .)
    IF              reduce using rule 30 (statement -> class_statement .)
    $end            reduce using rule 30 (statement -> class_statement .)
    RBRACE          reduce using rule 30 (statement -> class_statement .)
    CASE            reduce using rule 30 (statement -> class_statement .)
    DEFAULT         reduce using rule 30 (statement -> class_statement .)


state 9

    (31) statement -> print_statement .

    ACCESS          reduce using rule 31 (statement -> print_statement .)
    PASS            reduce using rule 31 (statement -> print_statement .)
    BREAK           reduce using rule 31 (statement -> print_statement .)
    RETURNTYPE      reduce using rule 31 (statement -> print_statement .)
    IDENTIFIER      reduce using rule 31 (statement -> print_statement .)
    PLUS            reduce using rule 31 (statement -> print_statement .)
    MINUS           reduce using rule 31 (statement -> print_statement .)
    SOP             reduce using rule 31 (statement -> print_statement .)
    THIS            reduce using rule 31 (statement -> print_statement .)
    SWITCH          reduce using rule 31 (statement -> print_statement .)
    RETURN          reduce using rule 31 (statement -> print_statement .)
    WHILE           reduce using rule 31 (statement -> print_statement .)
    FOR             reduce using rule 31 (statement -> print_statement .)
    TRY             reduce using rule 31 (statement -> print_statement .)
    STATIC          reduce using rule 31 (statement -> print_statement .)
    IF              reduce using rule 31 (statement -> print_statement .)
    $end            reduce using rule 31 (statement -> print_statement .)
    RBRACE          reduce using rule 31 (statement -> print_statement .)
    CASE            reduce using rule 31 (statement -> print_statement .)
    DEFAULT         reduce using rule 31 (statement -> print_statement .)


state 10

    (32) statement -> this_assign .

    ACCESS          reduce using rule 32 (statement -> this_assign .)
    PASS            reduce using rule 32 (statement -> this_assign .)
    BREAK           reduce using rule 32 (statement -> this_assign .)
    RETURNTYPE      reduce using rule 32 (statement -> this_assign .)
    IDENTIFIER      reduce using rule 32 (statement -> this_assign .)
    PLUS            reduce using rule 32 (statement -> this_assign .)
    MINUS           reduce using rule 32 (statement -> this_assign .)
    SOP             reduce using rule 32 (statement -> this_assign .)
    THIS            reduce using rule 32 (statement -> this_assign .)
    SWITCH          reduce using rule 32 (statement -> this_assign .)
    RETURN          reduce using rule 32 (statement -> this_assign .)
    WHILE           reduce using rule 32 (statement -> this_assign .)
    FOR             reduce using rule 32 (statement -> this_assign .)
    TRY             reduce using rule 32 (statement -> this_assign .)
    STATIC          reduce using rule 32 (statement -> this_assign .)
    IF              reduce using rule 32 (statement -> this_assign .)
    $end            reduce using rule 32 (statement -> this_assign .)
    RBRACE          reduce using rule 32 (statement -> this_assign .)
    CASE            reduce using rule 32 (statement -> this_assign .)
    DEFAULT         reduce using rule 32 (statement -> this_assign .)


state 11

    (33) statement -> switch .

    ACCESS          reduce using rule 33 (statement -> switch .)
    PASS            reduce using rule 33 (statement -> switch .)
    BREAK           reduce using rule 33 (statement -> switch .)
    RETURNTYPE      reduce using rule 33 (statement -> switch .)
    IDENTIFIER      reduce using rule 33 (statement -> switch .)
    PLUS            reduce using rule 33 (statement -> switch .)
    MINUS           reduce using rule 33 (statement -> switch .)
    SOP             reduce using rule 33 (statement -> switch .)
    THIS            reduce using rule 33 (statement -> switch .)
    SWITCH          reduce using rule 33 (statement -> switch .)
    RETURN          reduce using rule 33 (statement -> switch .)
    WHILE           reduce using rule 33 (statement -> switch .)
    FOR             reduce using rule 33 (statement -> switch .)
    TRY             reduce using rule 33 (statement -> switch .)
    STATIC          reduce using rule 33 (statement -> switch .)
    IF              reduce using rule 33 (statement -> switch .)
    $end            reduce using rule 33 (statement -> switch .)
    RBRACE          reduce using rule 33 (statement -> switch .)
    CASE            reduce using rule 33 (statement -> switch .)
    DEFAULT         reduce using rule 33 (statement -> switch .)


state 12

    (34) statement -> return .

    ACCESS          reduce using rule 34 (statement -> return .)
    PASS            reduce using rule 34 (statement -> return .)
    BREAK           reduce using rule 34 (statement -> return .)
    RETURNTYPE      reduce using rule 34 (statement -> return .)
    IDENTIFIER      reduce using rule 34 (statement -> return .)
    PLUS            reduce using rule 34 (statement -> return .)
    MINUS           reduce using rule 34 (statement -> return .)
    SOP             reduce using rule 34 (statement -> return .)
    THIS            reduce using rule 34 (statement -> return .)
    SWITCH          reduce using rule 34 (statement -> return .)
    RETURN          reduce using rule 34 (statement -> return .)
    WHILE           reduce using rule 34 (statement -> return .)
    FOR             reduce using rule 34 (statement -> return .)
    TRY             reduce using rule 34 (statement -> return .)
    STATIC          reduce using rule 34 (statement -> return .)
    IF              reduce using rule 34 (statement -> return .)
    $end            reduce using rule 34 (statement -> return .)
    RBRACE          reduce using rule 34 (statement -> return .)
    CASE            reduce using rule 34 (statement -> return .)
    DEFAULT         reduce using rule 34 (statement -> return .)


state 13

    (35) statement -> while .

    ACCESS          reduce using rule 35 (statement -> while .)
    PASS            reduce using rule 35 (statement -> while .)
    BREAK           reduce using rule 35 (statement -> while .)
    RETURNTYPE      reduce using rule 35 (statement -> while .)
    IDENTIFIER      reduce using rule 35 (statement -> while .)
    PLUS            reduce using rule 35 (statement -> while .)
    MINUS           reduce using rule 35 (statement -> while .)
    SOP             reduce using rule 35 (statement -> while .)
    THIS            reduce using rule 35 (statement -> while .)
    SWITCH          reduce using rule 35 (statement -> while .)
    RETURN          reduce using rule 35 (statement -> while .)
    WHILE           reduce using rule 35 (statement -> while .)
    FOR             reduce using rule 35 (statement -> while .)
    TRY             reduce using rule 35 (statement -> while .)
    STATIC          reduce using rule 35 (statement -> while .)
    IF              reduce using rule 35 (statement -> while .)
    $end            reduce using rule 35 (statement -> while .)
    RBRACE          reduce using rule 35 (statement -> while .)
    CASE            reduce using rule 35 (statement -> while .)
    DEFAULT         reduce using rule 35 (statement -> while .)


state 14

    (36) statement -> for .

    ACCESS          reduce using rule 36 (statement -> for .)
    PASS            reduce using rule 36 (statement -> for .)
    BREAK           reduce using rule 36 (statement -> for .)
    RETURNTYPE      reduce using rule 36 (statement -> for .)
    IDENTIFIER      reduce using rule 36 (statement -> for .)
    PLUS            reduce using rule 36 (statement -> for .)
    MINUS           reduce using rule 36 (statement -> for .)
    SOP             reduce using rule 36 (statement -> for .)
    THIS            reduce using rule 36 (statement -> for .)
    SWITCH          reduce using rule 36 (statement -> for .)
    RETURN          reduce using rule 36 (statement -> for .)
    WHILE           reduce using rule 36 (statement -> for .)
    FOR             reduce using rule 36 (statement -> for .)
    TRY             reduce using rule 36 (statement -> for .)
    STATIC          reduce using rule 36 (statement -> for .)
    IF              reduce using rule 36 (statement -> for .)
    $end            reduce using rule 36 (statement -> for .)
    RBRACE          reduce using rule 36 (statement -> for .)
    CASE            reduce using rule 36 (statement -> for .)
    DEFAULT         reduce using rule 36 (statement -> for .)


state 15

    (37) statement -> try_catch .

    ACCESS          reduce using rule 37 (statement -> try_catch .)
    PASS            reduce using rule 37 (statement -> try_catch .)
    BREAK           reduce using rule 37 (statement -> try_catch .)
    RETURNTYPE      reduce using rule 37 (statement -> try_catch .)
    IDENTIFIER      reduce using rule 37 (statement -> try_catch .)
    PLUS            reduce using rule 37 (statement -> try_catch .)
    MINUS           reduce using rule 37 (statement -> try_catch .)
    SOP             reduce using rule 37 (statement -> try_catch .)
    THIS            reduce using rule 37 (statement -> try_catch .)
    SWITCH          reduce using rule 37 (statement -> try_catch .)
    RETURN          reduce using rule 37 (statement -> try_catch .)
    WHILE           reduce using rule 37 (statement -> try_catch .)
    FOR             reduce using rule 37 (statement -> try_catch .)
    TRY             reduce using rule 37 (statement -> try_catch .)
    STATIC          reduce using rule 37 (statement -> try_catch .)
    IF              reduce using rule 37 (statement -> try_catch .)
    $end            reduce using rule 37 (statement -> try_catch .)
    RBRACE          reduce using rule 37 (statement -> try_catch .)
    CASE            reduce using rule 37 (statement -> try_catch .)
    DEFAULT         reduce using rule 37 (statement -> try_catch .)


state 16

    (38) statement -> PASS . SEMICOLON

    SEMICOLON       shift and go to state 50


state 17

    (40) statement -> function .

    ACCESS          reduce using rule 40 (statement -> function .)
    PASS            reduce using rule 40 (statement -> function .)
    BREAK           reduce using rule 40 (statement -> function .)
    RETURNTYPE      reduce using rule 40 (statement -> function .)
    IDENTIFIER      reduce using rule 40 (statement -> function .)
    PLUS            reduce using rule 40 (statement -> function .)
    MINUS           reduce using rule 40 (statement -> function .)
    SOP             reduce using rule 40 (statement -> function .)
    THIS            reduce using rule 40 (statement -> function .)
    SWITCH          reduce using rule 40 (statement -> function .)
    RETURN          reduce using rule 40 (statement -> function .)
    WHILE           reduce using rule 40 (statement -> function .)
    FOR             reduce using rule 40 (statement -> function .)
    TRY             reduce using rule 40 (statement -> function .)
    STATIC          reduce using rule 40 (statement -> function .)
    IF              reduce using rule 40 (statement -> function .)
    $end            reduce using rule 40 (statement -> function .)
    RBRACE          reduce using rule 40 (statement -> function .)
    CASE            reduce using rule 40 (statement -> function .)
    DEFAULT         reduce using rule 40 (statement -> function .)


state 18

    (41) statement -> function_call .

    ACCESS          reduce using rule 41 (statement -> function_call .)
    PASS            reduce using rule 41 (statement -> function_call .)
    BREAK           reduce using rule 41 (statement -> function_call .)
    RETURNTYPE      reduce using rule 41 (statement -> function_call .)
    IDENTIFIER      reduce using rule 41 (statement -> function_call .)
    PLUS            reduce using rule 41 (statement -> function_call .)
    MINUS           reduce using rule 41 (statement -> function_call .)
    SOP             reduce using rule 41 (statement -> function_call .)
    THIS            reduce using rule 41 (statement -> function_call .)
    SWITCH          reduce using rule 41 (statement -> function_call .)
    RETURN          reduce using rule 41 (statement -> function_call .)
    WHILE           reduce using rule 41 (statement -> function_call .)
    FOR             reduce using rule 41 (statement -> function_call .)
    TRY             reduce using rule 41 (statement -> function_call .)
    STATIC          reduce using rule 41 (statement -> function_call .)
    IF              reduce using rule 41 (statement -> function_call .)
    $end            reduce using rule 41 (statement -> function_call .)
    RBRACE          reduce using rule 41 (statement -> function_call .)
    CASE            reduce using rule 41 (statement -> function_call .)
    DEFAULT         reduce using rule 41 (statement -> function_call .)


state 19

    (42) statement -> ifblock .

    ACCESS          reduce using rule 42 (statement -> ifblock .)
    PASS            reduce using rule 42 (statement -> ifblock .)
    BREAK           reduce using rule 42 (statement -> ifblock .)
    RETURNTYPE      reduce using rule 42 (statement -> ifblock .)
    IDENTIFIER      reduce using rule 42 (statement -> ifblock .)
    PLUS            reduce using rule 42 (statement -> ifblock .)
    MINUS           reduce using rule 42 (statement -> ifblock .)
    SOP             reduce using rule 42 (statement -> ifblock .)
    THIS            reduce using rule 42 (statement -> ifblock .)
    SWITCH          reduce using rule 42 (statement -> ifblock .)
    RETURN          reduce using rule 42 (statement -> ifblock .)
    WHILE           reduce using rule 42 (statement -> ifblock .)
    FOR             reduce using rule 42 (statement -> ifblock .)
    TRY             reduce using rule 42 (statement -> ifblock .)
    STATIC          reduce using rule 42 (statement -> ifblock .)
    IF              reduce using rule 42 (statement -> ifblock .)
    $end            reduce using rule 42 (statement -> ifblock .)
    RBRACE          reduce using rule 42 (statement -> ifblock .)
    CASE            reduce using rule 42 (statement -> ifblock .)
    DEFAULT         reduce using rule 42 (statement -> ifblock .)


state 20

    (43) statement -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 51


state 21

    (65) assignment_statement -> RETURNTYPE . IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> RETURNTYPE . IDENTIFIER SEMICOLON
    (67) assignment_statement -> RETURNTYPE . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> RETURNTYPE . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> RETURNTYPE . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> RETURNTYPE . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> RETURNTYPE . IDENTIFIER PLUS PLUS SEMICOLON
    (82) assignment_statement -> RETURNTYPE . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> RETURNTYPE . arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> RETURNTYPE . IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> RETURNTYPE . arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (13) function -> RETURNTYPE . IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> RETURNTYPE . IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (59) arrays -> . LBRACKET RBRACKET
    (60) arrays -> . LBRACKET RBRACKET arrays
    (61) arrays -> . LBRACKET expression RBRACKET arrays
    (62) arrays -> . LBRACKET expression RBRACKET

    IDENTIFIER      shift and go to state 52
    LBRACKET        shift and go to state 49

    arrays                         shift and go to state 53

state 22

    (80) assignment_statement -> PLUS . PLUS IDENTIFIER arrays SEMICOLON
    (119) increment -> PLUS . PLUS IDENTIFIER

    PLUS            shift and go to state 54


state 23

    (81) assignment_statement -> MINUS . MINUS IDENTIFIER arrays SEMICOLON
    (120) increment -> MINUS . MINUS IDENTIFIER

    MINUS           shift and go to state 55


state 24

    (78) assignment_statement -> increment . SEMICOLON

    SEMICOLON       shift and go to state 56


state 25

    (88) print_statement -> SOP . LPAREN expression RPAREN SEMICOLON
    (89) print_statement -> SOP . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 57


state 26

    (6) this_assign -> THIS . IDENTIFIER ASSIGN IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 58


state 27

    (44) switch -> SWITCH . LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE

    LPAREN          shift and go to state 59


state 28

    (103) return -> RETURN . IDENTIFIER SEMICOLON
    (104) return -> RETURN . SEMICOLON
    (105) return -> RETURN . expression SEMICOLON
    (91) expression -> . IDENTIFIER
    (92) expression -> . NUMBER
    (93) expression -> . array_access
    (94) expression -> . expression PLUS
    (95) expression -> . expression MINUS
    (96) expression -> . expression PLUS expression
    (97) expression -> . expression MINUS expression
    (98) expression -> . expression TIMES expression
    (99) expression -> . expression DIVIDE expression
    (100) expression -> . STRING
    (101) expression -> . CHAR
    (102) expression -> . bool
    (90) array_access -> . IDENTIFIER arrays
    (63) bool -> . TRUE
    (64) bool -> . FALSE

    IDENTIFIER      shift and go to state 60
    SEMICOLON       shift and go to state 61
    NUMBER          shift and go to state 63
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 62
    array_access                   shift and go to state 64
    bool                           shift and go to state 67

state 29

    (49) while -> WHILE . LPAREN params RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 70


state 30

    (118) for -> FOR . LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 71


state 31

    (123) try_catch -> TRY . LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> TRY . LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

    LBRACE          shift and go to state 72


state 32

    (17) function -> STATIC . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> STATIC . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE

    RETURNTYPE      shift and go to state 73


state 33

    (110) ifblock -> if .
    (111) ifblock -> if . else
    (112) ifblock -> if . else_if
    (114) else -> . ELSE LBRACE statements RBRACE
    (115) else_if -> . ELSE if
    (116) else_if -> . ELSE if else_if
    (117) else_if -> . ELSE if else

    ACCESS          reduce using rule 110 (ifblock -> if .)
    PASS            reduce using rule 110 (ifblock -> if .)
    BREAK           reduce using rule 110 (ifblock -> if .)
    RETURNTYPE      reduce using rule 110 (ifblock -> if .)
    IDENTIFIER      reduce using rule 110 (ifblock -> if .)
    PLUS            reduce using rule 110 (ifblock -> if .)
    MINUS           reduce using rule 110 (ifblock -> if .)
    SOP             reduce using rule 110 (ifblock -> if .)
    THIS            reduce using rule 110 (ifblock -> if .)
    SWITCH          reduce using rule 110 (ifblock -> if .)
    RETURN          reduce using rule 110 (ifblock -> if .)
    WHILE           reduce using rule 110 (ifblock -> if .)
    FOR             reduce using rule 110 (ifblock -> if .)
    TRY             reduce using rule 110 (ifblock -> if .)
    STATIC          reduce using rule 110 (ifblock -> if .)
    IF              reduce using rule 110 (ifblock -> if .)
    $end            reduce using rule 110 (ifblock -> if .)
    RBRACE          reduce using rule 110 (ifblock -> if .)
    CASE            reduce using rule 110 (ifblock -> if .)
    DEFAULT         reduce using rule 110 (ifblock -> if .)
    ELSE            shift and go to state 76

    else                           shift and go to state 74
    else_if                        shift and go to state 75

state 34

    (113) if -> IF . LPAREN params RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 77


state 35

    (2) programs -> program programs .

    $end            reduce using rule 2 (programs -> program programs .)


state 36

    (5) class -> ACCESS CLASS . IDENTIFIER LBRACE stats RBRACE

    IDENTIFIER      shift and go to state 78


state 37

    (72) assignment_statement -> IDENTIFIER . ASSIGN expression SEMICOLON
    (73) assignment_statement -> IDENTIFIER . PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> IDENTIFIER . MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> IDENTIFIER . TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> IDENTIFIER . DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> IDENTIFIER . arrays PLUS PLUS SEMICOLON
    (79) assignment_statement -> IDENTIFIER . arrays MINUS MINUS SEMICOLON
    (84) assignment_statement -> IDENTIFIER . arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> IDENTIFIER . arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (121) increment -> IDENTIFIER . PLUS PLUS
    (122) increment -> IDENTIFIER . MINUS MINUS
    (59) arrays -> . LBRACKET RBRACKET
    (60) arrays -> . LBRACKET RBRACKET arrays
    (61) arrays -> . LBRACKET expression RBRACKET arrays
    (62) arrays -> . LBRACKET expression RBRACKET

    ASSIGN          shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    LBRACKET        shift and go to state 49

    arrays                         shift and go to state 47

state 38

    (39) statement -> ACCESS assignment_statement .

    ACCESS          reduce using rule 39 (statement -> ACCESS assignment_statement .)
    PASS            reduce using rule 39 (statement -> ACCESS assignment_statement .)
    BREAK           reduce using rule 39 (statement -> ACCESS assignment_statement .)
    RETURNTYPE      reduce using rule 39 (statement -> ACCESS assignment_statement .)
    IDENTIFIER      reduce using rule 39 (statement -> ACCESS assignment_statement .)
    PLUS            reduce using rule 39 (statement -> ACCESS assignment_statement .)
    MINUS           reduce using rule 39 (statement -> ACCESS assignment_statement .)
    SOP             reduce using rule 39 (statement -> ACCESS assignment_statement .)
    THIS            reduce using rule 39 (statement -> ACCESS assignment_statement .)
    SWITCH          reduce using rule 39 (statement -> ACCESS assignment_statement .)
    RETURN          reduce using rule 39 (statement -> ACCESS assignment_statement .)
    WHILE           reduce using rule 39 (statement -> ACCESS assignment_statement .)
    FOR             reduce using rule 39 (statement -> ACCESS assignment_statement .)
    TRY             reduce using rule 39 (statement -> ACCESS assignment_statement .)
    STATIC          reduce using rule 39 (statement -> ACCESS assignment_statement .)
    IF              reduce using rule 39 (statement -> ACCESS assignment_statement .)
    $end            reduce using rule 39 (statement -> ACCESS assignment_statement .)
    RBRACE          reduce using rule 39 (statement -> ACCESS assignment_statement .)
    CASE            reduce using rule 39 (statement -> ACCESS assignment_statement .)
    DEFAULT         reduce using rule 39 (statement -> ACCESS assignment_statement .)


state 39

    (15) function -> ACCESS RETURNTYPE . IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> ACCESS RETURNTYPE . IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (65) assignment_statement -> RETURNTYPE . IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> RETURNTYPE . IDENTIFIER SEMICOLON
    (67) assignment_statement -> RETURNTYPE . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> RETURNTYPE . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> RETURNTYPE . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> RETURNTYPE . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> RETURNTYPE . IDENTIFIER PLUS PLUS SEMICOLON
    (82) assignment_statement -> RETURNTYPE . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> RETURNTYPE . arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> RETURNTYPE . IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> RETURNTYPE . arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (59) arrays -> . LBRACKET RBRACKET
    (60) arrays -> . LBRACKET RBRACKET arrays
    (61) arrays -> . LBRACKET expression RBRACKET arrays
    (62) arrays -> . LBRACKET expression RBRACKET

    IDENTIFIER      shift and go to state 79
    LBRACKET        shift and go to state 49

    arrays                         shift and go to state 53

state 40

    (19) function -> ACCESS STATIC . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> ACCESS STATIC . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE

    RETURNTYPE      shift and go to state 80


state 41

    (54) class_statement -> IDENTIFIER IDENTIFIER . SEMICOLON
    (55) class_statement -> IDENTIFIER IDENTIFIER . ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> IDENTIFIER IDENTIFIER . ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> IDENTIFIER IDENTIFIER . ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> IDENTIFIER IDENTIFIER . ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON

    SEMICOLON       shift and go to state 81
    ASSIGN          shift and go to state 82


state 42

    (72) assignment_statement -> IDENTIFIER ASSIGN . expression SEMICOLON
    (91) expression -> . IDENTIFIER
    (92) expression -> . NUMBER
    (93) expression -> . array_access
    (94) expression -> . expression PLUS
    (95) expression -> . expression MINUS
    (96) expression -> . expression PLUS expression
    (97) expression -> . expression MINUS expression
    (98) expression -> . expression TIMES expression
    (99) expression -> . expression DIVIDE expression
    (100) expression -> . STRING
    (101) expression -> . CHAR
    (102) expression -> . bool
    (90) array_access -> . IDENTIFIER arrays
    (63) bool -> . TRUE
    (64) bool -> . FALSE

    IDENTIFIER      shift and go to state 83
    NUMBER          shift and go to state 63
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 84
    array_access                   shift and go to state 64
    bool                           shift and go to state 67

state 43

    (73) assignment_statement -> IDENTIFIER PLUS . ASSIGN expression SEMICOLON
    (121) increment -> IDENTIFIER PLUS . PLUS

    ASSIGN          shift and go to state 86
    PLUS            shift and go to state 85


state 44

    (74) assignment_statement -> IDENTIFIER MINUS . ASSIGN expression SEMICOLON
    (122) increment -> IDENTIFIER MINUS . MINUS

    ASSIGN          shift and go to state 88
    MINUS           shift and go to state 87


state 45

    (75) assignment_statement -> IDENTIFIER TIMES . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 89


state 46

    (76) assignment_statement -> IDENTIFIER DIVIDE . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 90


state 47

    (77) assignment_statement -> IDENTIFIER arrays . PLUS PLUS SEMICOLON
    (79) assignment_statement -> IDENTIFIER arrays . MINUS MINUS SEMICOLON
    (84) assignment_statement -> IDENTIFIER arrays . ASSIGN expression SEMICOLON
    (85) assignment_statement -> IDENTIFIER arrays . ASSIGN LBRACE items RBRACE SEMICOLON

    PLUS            shift and go to state 91
    MINUS           shift and go to state 92
    ASSIGN          shift and go to state 93


state 48

    (27) function_call -> IDENTIFIER LPAREN . params RPAREN SEMICOLON
    (28) function_call -> IDENTIFIER LPAREN . RPAREN SEMICOLON
    (50) params -> . param
    (51) params -> . param LOGICAL params
    (52) param -> . increment
    (53) param -> . expression
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (91) expression -> . IDENTIFIER
    (92) expression -> . NUMBER
    (93) expression -> . array_access
    (94) expression -> . expression PLUS
    (95) expression -> . expression MINUS
    (96) expression -> . expression PLUS expression
    (97) expression -> . expression MINUS expression
    (98) expression -> . expression TIMES expression
    (99) expression -> . expression DIVIDE expression
    (100) expression -> . STRING
    (101) expression -> . CHAR
    (102) expression -> . bool
    (90) array_access -> . IDENTIFIER arrays
    (63) bool -> . TRUE
    (64) bool -> . FALSE

    RPAREN          shift and go to state 96
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    IDENTIFIER      shift and go to state 94
    NUMBER          shift and go to state 63
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    params                         shift and go to state 95
    param                          shift and go to state 97
    increment                      shift and go to state 98
    expression                     shift and go to state 99
    array_access                   shift and go to state 64
    bool                           shift and go to state 67

state 49

    (59) arrays -> LBRACKET . RBRACKET
    (60) arrays -> LBRACKET . RBRACKET arrays
    (61) arrays -> LBRACKET . expression RBRACKET arrays
    (62) arrays -> LBRACKET . expression RBRACKET
    (91) expression -> . IDENTIFIER
    (92) expression -> . NUMBER
    (93) expression -> . array_access
    (94) expression -> . expression PLUS
    (95) expression -> . expression MINUS
    (96) expression -> . expression PLUS expression
    (97) expression -> . expression MINUS expression
    (98) expression -> . expression TIMES expression
    (99) expression -> . expression DIVIDE expression
    (100) expression -> . STRING
    (101) expression -> . CHAR
    (102) expression -> . bool
    (90) array_access -> . IDENTIFIER arrays
    (63) bool -> . TRUE
    (64) bool -> . FALSE

    RBRACKET        shift and go to state 102
    IDENTIFIER      shift and go to state 83
    NUMBER          shift and go to state 63
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 103
    array_access                   shift and go to state 64
    bool                           shift and go to state 67

state 50

    (38) statement -> PASS SEMICOLON .

    ACCESS          reduce using rule 38 (statement -> PASS SEMICOLON .)
    PASS            reduce using rule 38 (statement -> PASS SEMICOLON .)
    BREAK           reduce using rule 38 (statement -> PASS SEMICOLON .)
    RETURNTYPE      reduce using rule 38 (statement -> PASS SEMICOLON .)
    IDENTIFIER      reduce using rule 38 (statement -> PASS SEMICOLON .)
    PLUS            reduce using rule 38 (statement -> PASS SEMICOLON .)
    MINUS           reduce using rule 38 (statement -> PASS SEMICOLON .)
    SOP             reduce using rule 38 (statement -> PASS SEMICOLON .)
    THIS            reduce using rule 38 (statement -> PASS SEMICOLON .)
    SWITCH          reduce using rule 38 (statement -> PASS SEMICOLON .)
    RETURN          reduce using rule 38 (statement -> PASS SEMICOLON .)
    WHILE           reduce using rule 38 (statement -> PASS SEMICOLON .)
    FOR             reduce using rule 38 (statement -> PASS SEMICOLON .)
    TRY             reduce using rule 38 (statement -> PASS SEMICOLON .)
    STATIC          reduce using rule 38 (statement -> PASS SEMICOLON .)
    IF              reduce using rule 38 (statement -> PASS SEMICOLON .)
    $end            reduce using rule 38 (statement -> PASS SEMICOLON .)
    RBRACE          reduce using rule 38 (statement -> PASS SEMICOLON .)
    CASE            reduce using rule 38 (statement -> PASS SEMICOLON .)
    DEFAULT         reduce using rule 38 (statement -> PASS SEMICOLON .)


state 51

    (43) statement -> BREAK SEMICOLON .

    ACCESS          reduce using rule 43 (statement -> BREAK SEMICOLON .)
    PASS            reduce using rule 43 (statement -> BREAK SEMICOLON .)
    BREAK           reduce using rule 43 (statement -> BREAK SEMICOLON .)
    RETURNTYPE      reduce using rule 43 (statement -> BREAK SEMICOLON .)
    IDENTIFIER      reduce using rule 43 (statement -> BREAK SEMICOLON .)
    PLUS            reduce using rule 43 (statement -> BREAK SEMICOLON .)
    MINUS           reduce using rule 43 (statement -> BREAK SEMICOLON .)
    SOP             reduce using rule 43 (statement -> BREAK SEMICOLON .)
    THIS            reduce using rule 43 (statement -> BREAK SEMICOLON .)
    SWITCH          reduce using rule 43 (statement -> BREAK SEMICOLON .)
    RETURN          reduce using rule 43 (statement -> BREAK SEMICOLON .)
    WHILE           reduce using rule 43 (statement -> BREAK SEMICOLON .)
    FOR             reduce using rule 43 (statement -> BREAK SEMICOLON .)
    TRY             reduce using rule 43 (statement -> BREAK SEMICOLON .)
    STATIC          reduce using rule 43 (statement -> BREAK SEMICOLON .)
    IF              reduce using rule 43 (statement -> BREAK SEMICOLON .)
    $end            reduce using rule 43 (statement -> BREAK SEMICOLON .)
    RBRACE          reduce using rule 43 (statement -> BREAK SEMICOLON .)
    CASE            reduce using rule 43 (statement -> BREAK SEMICOLON .)
    DEFAULT         reduce using rule 43 (statement -> BREAK SEMICOLON .)


state 52

    (65) assignment_statement -> RETURNTYPE IDENTIFIER . ASSIGN expression SEMICOLON
    (66) assignment_statement -> RETURNTYPE IDENTIFIER . SEMICOLON
    (67) assignment_statement -> RETURNTYPE IDENTIFIER . PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> RETURNTYPE IDENTIFIER . MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> RETURNTYPE IDENTIFIER . TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> RETURNTYPE IDENTIFIER . DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> RETURNTYPE IDENTIFIER . PLUS PLUS SEMICOLON
    (82) assignment_statement -> RETURNTYPE IDENTIFIER . arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> RETURNTYPE IDENTIFIER . arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (13) function -> RETURNTYPE IDENTIFIER . LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> RETURNTYPE IDENTIFIER . LPAREN RPAREN LBRACE statements RBRACE
    (59) arrays -> . LBRACKET RBRACKET
    (60) arrays -> . LBRACKET RBRACKET arrays
    (61) arrays -> . LBRACKET expression RBRACKET arrays
    (62) arrays -> . LBRACKET expression RBRACKET

    ASSIGN          shift and go to state 104
    SEMICOLON       shift and go to state 105
    PLUS            shift and go to state 106
    MINUS           shift and go to state 107
    TIMES           shift and go to state 108
    DIVIDE          shift and go to state 109
    LPAREN          shift and go to state 111
    LBRACKET        shift and go to state 49

    arrays                         shift and go to state 110

state 53

    (83) assignment_statement -> RETURNTYPE arrays . IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> RETURNTYPE arrays . IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON

    IDENTIFIER      shift and go to state 112


state 54

    (80) assignment_statement -> PLUS PLUS . IDENTIFIER arrays SEMICOLON
    (119) increment -> PLUS PLUS . IDENTIFIER

    IDENTIFIER      shift and go to state 113


state 55

    (81) assignment_statement -> MINUS MINUS . IDENTIFIER arrays SEMICOLON
    (120) increment -> MINUS MINUS . IDENTIFIER

    IDENTIFIER      shift and go to state 114


state 56

    (78) assignment_statement -> increment SEMICOLON .

    ACCESS          reduce using rule 78 (assignment_statement -> increment SEMICOLON .)
    PASS            reduce using rule 78 (assignment_statement -> increment SEMICOLON .)
    BREAK           reduce using rule 78 (assignment_statement -> increment SEMICOLON .)
    RETURNTYPE      reduce using rule 78 (assignment_statement -> increment SEMICOLON .)
    IDENTIFIER      reduce using rule 78 (assignment_statement -> increment SEMICOLON .)
    PLUS            reduce using rule 78 (assignment_statement -> increment SEMICOLON .)
    MINUS           reduce using rule 78 (assignment_statement -> increment SEMICOLON .)
    SOP             reduce using rule 78 (assignment_statement -> increment SEMICOLON .)
    THIS            reduce using rule 78 (assignment_statement -> increment SEMICOLON .)
    SWITCH          reduce using rule 78 (assignment_statement -> increment SEMICOLON .)
    RETURN          reduce using rule 78 (assignment_statement -> increment SEMICOLON .)
    WHILE           reduce using rule 78 (assignment_statement -> increment SEMICOLON .)
    FOR             reduce using rule 78 (assignment_statement -> increment SEMICOLON .)
    TRY             reduce using rule 78 (assignment_statement -> increment SEMICOLON .)
    STATIC          reduce using rule 78 (assignment_statement -> increment SEMICOLON .)
    IF              reduce using rule 78 (assignment_statement -> increment SEMICOLON .)
    $end            reduce using rule 78 (assignment_statement -> increment SEMICOLON .)
    NUMBER          reduce using rule 78 (assignment_statement -> increment SEMICOLON .)
    STRING          reduce using rule 78 (assignment_statement -> increment SEMICOLON .)
    CHAR            reduce using rule 78 (assignment_statement -> increment SEMICOLON .)
    TRUE            reduce using rule 78 (assignment_statement -> increment SEMICOLON .)
    FALSE           reduce using rule 78 (assignment_statement -> increment SEMICOLON .)
    RBRACE          reduce using rule 78 (assignment_statement -> increment SEMICOLON .)
    CASE            reduce using rule 78 (assignment_statement -> increment SEMICOLON .)
    DEFAULT         reduce using rule 78 (assignment_statement -> increment SEMICOLON .)


state 57

    (88) print_statement -> SOP LPAREN . expression RPAREN SEMICOLON
    (89) print_statement -> SOP LPAREN . RPAREN SEMICOLON
    (91) expression -> . IDENTIFIER
    (92) expression -> . NUMBER
    (93) expression -> . array_access
    (94) expression -> . expression PLUS
    (95) expression -> . expression MINUS
    (96) expression -> . expression PLUS expression
    (97) expression -> . expression MINUS expression
    (98) expression -> . expression TIMES expression
    (99) expression -> . expression DIVIDE expression
    (100) expression -> . STRING
    (101) expression -> . CHAR
    (102) expression -> . bool
    (90) array_access -> . IDENTIFIER arrays
    (63) bool -> . TRUE
    (64) bool -> . FALSE

    RPAREN          shift and go to state 116
    IDENTIFIER      shift and go to state 83
    NUMBER          shift and go to state 63
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 115
    array_access                   shift and go to state 64
    bool                           shift and go to state 67

state 58

    (6) this_assign -> THIS IDENTIFIER . ASSIGN IDENTIFIER SEMICOLON

    ASSIGN          shift and go to state 117


state 59

    (44) switch -> SWITCH LPAREN . IDENTIFIER RPAREN LBRACE cases RBRACE

    IDENTIFIER      shift and go to state 118


state 60

    (103) return -> RETURN IDENTIFIER . SEMICOLON
    (91) expression -> IDENTIFIER .
    (90) array_access -> IDENTIFIER . arrays
    (59) arrays -> . LBRACKET RBRACKET
    (60) arrays -> . LBRACKET RBRACKET arrays
    (61) arrays -> . LBRACKET expression RBRACKET arrays
    (62) arrays -> . LBRACKET expression RBRACKET

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 119
    PLUS            reduce using rule 91 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 91 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 91 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 91 (expression -> IDENTIFIER .)
    LBRACKET        shift and go to state 49

  ! SEMICOLON       [ reduce using rule 91 (expression -> IDENTIFIER .) ]

    arrays                         shift and go to state 120

state 61

    (104) return -> RETURN SEMICOLON .

    ACCESS          reduce using rule 104 (return -> RETURN SEMICOLON .)
    PASS            reduce using rule 104 (return -> RETURN SEMICOLON .)
    BREAK           reduce using rule 104 (return -> RETURN SEMICOLON .)
    RETURNTYPE      reduce using rule 104 (return -> RETURN SEMICOLON .)
    IDENTIFIER      reduce using rule 104 (return -> RETURN SEMICOLON .)
    PLUS            reduce using rule 104 (return -> RETURN SEMICOLON .)
    MINUS           reduce using rule 104 (return -> RETURN SEMICOLON .)
    SOP             reduce using rule 104 (return -> RETURN SEMICOLON .)
    THIS            reduce using rule 104 (return -> RETURN SEMICOLON .)
    SWITCH          reduce using rule 104 (return -> RETURN SEMICOLON .)
    RETURN          reduce using rule 104 (return -> RETURN SEMICOLON .)
    WHILE           reduce using rule 104 (return -> RETURN SEMICOLON .)
    FOR             reduce using rule 104 (return -> RETURN SEMICOLON .)
    TRY             reduce using rule 104 (return -> RETURN SEMICOLON .)
    STATIC          reduce using rule 104 (return -> RETURN SEMICOLON .)
    IF              reduce using rule 104 (return -> RETURN SEMICOLON .)
    $end            reduce using rule 104 (return -> RETURN SEMICOLON .)
    RBRACE          reduce using rule 104 (return -> RETURN SEMICOLON .)
    CASE            reduce using rule 104 (return -> RETURN SEMICOLON .)
    DEFAULT         reduce using rule 104 (return -> RETURN SEMICOLON .)


state 62

    (105) return -> RETURN expression . SEMICOLON
    (94) expression -> expression . PLUS
    (95) expression -> expression . MINUS
    (96) expression -> expression . PLUS expression
    (97) expression -> expression . MINUS expression
    (98) expression -> expression . TIMES expression
    (99) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 121
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123
    TIMES           shift and go to state 124
    DIVIDE          shift and go to state 125


state 63

    (92) expression -> NUMBER .

    SEMICOLON       reduce using rule 92 (expression -> NUMBER .)
    PLUS            reduce using rule 92 (expression -> NUMBER .)
    MINUS           reduce using rule 92 (expression -> NUMBER .)
    TIMES           reduce using rule 92 (expression -> NUMBER .)
    DIVIDE          reduce using rule 92 (expression -> NUMBER .)
    LOGICAL         reduce using rule 92 (expression -> NUMBER .)
    RPAREN          reduce using rule 92 (expression -> NUMBER .)
    RBRACKET        reduce using rule 92 (expression -> NUMBER .)


state 64

    (93) expression -> array_access .

    SEMICOLON       reduce using rule 93 (expression -> array_access .)
    PLUS            reduce using rule 93 (expression -> array_access .)
    MINUS           reduce using rule 93 (expression -> array_access .)
    TIMES           reduce using rule 93 (expression -> array_access .)
    DIVIDE          reduce using rule 93 (expression -> array_access .)
    LOGICAL         reduce using rule 93 (expression -> array_access .)
    RPAREN          reduce using rule 93 (expression -> array_access .)
    RBRACKET        reduce using rule 93 (expression -> array_access .)


state 65

    (100) expression -> STRING .

    SEMICOLON       reduce using rule 100 (expression -> STRING .)
    PLUS            reduce using rule 100 (expression -> STRING .)
    MINUS           reduce using rule 100 (expression -> STRING .)
    TIMES           reduce using rule 100 (expression -> STRING .)
    DIVIDE          reduce using rule 100 (expression -> STRING .)
    LOGICAL         reduce using rule 100 (expression -> STRING .)
    RPAREN          reduce using rule 100 (expression -> STRING .)
    RBRACKET        reduce using rule 100 (expression -> STRING .)


state 66

    (101) expression -> CHAR .

    SEMICOLON       reduce using rule 101 (expression -> CHAR .)
    PLUS            reduce using rule 101 (expression -> CHAR .)
    MINUS           reduce using rule 101 (expression -> CHAR .)
    TIMES           reduce using rule 101 (expression -> CHAR .)
    DIVIDE          reduce using rule 101 (expression -> CHAR .)
    LOGICAL         reduce using rule 101 (expression -> CHAR .)
    RPAREN          reduce using rule 101 (expression -> CHAR .)
    RBRACKET        reduce using rule 101 (expression -> CHAR .)


state 67

    (102) expression -> bool .

    SEMICOLON       reduce using rule 102 (expression -> bool .)
    PLUS            reduce using rule 102 (expression -> bool .)
    MINUS           reduce using rule 102 (expression -> bool .)
    TIMES           reduce using rule 102 (expression -> bool .)
    DIVIDE          reduce using rule 102 (expression -> bool .)
    LOGICAL         reduce using rule 102 (expression -> bool .)
    RPAREN          reduce using rule 102 (expression -> bool .)
    RBRACKET        reduce using rule 102 (expression -> bool .)


state 68

    (63) bool -> TRUE .

    SEMICOLON       reduce using rule 63 (bool -> TRUE .)
    PLUS            reduce using rule 63 (bool -> TRUE .)
    MINUS           reduce using rule 63 (bool -> TRUE .)
    TIMES           reduce using rule 63 (bool -> TRUE .)
    DIVIDE          reduce using rule 63 (bool -> TRUE .)
    LOGICAL         reduce using rule 63 (bool -> TRUE .)
    RPAREN          reduce using rule 63 (bool -> TRUE .)
    RBRACKET        reduce using rule 63 (bool -> TRUE .)


state 69

    (64) bool -> FALSE .

    SEMICOLON       reduce using rule 64 (bool -> FALSE .)
    PLUS            reduce using rule 64 (bool -> FALSE .)
    MINUS           reduce using rule 64 (bool -> FALSE .)
    TIMES           reduce using rule 64 (bool -> FALSE .)
    DIVIDE          reduce using rule 64 (bool -> FALSE .)
    LOGICAL         reduce using rule 64 (bool -> FALSE .)
    RPAREN          reduce using rule 64 (bool -> FALSE .)
    RBRACKET        reduce using rule 64 (bool -> FALSE .)


state 70

    (49) while -> WHILE LPAREN . params RPAREN LBRACE statements RBRACE
    (50) params -> . param
    (51) params -> . param LOGICAL params
    (52) param -> . increment
    (53) param -> . expression
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (91) expression -> . IDENTIFIER
    (92) expression -> . NUMBER
    (93) expression -> . array_access
    (94) expression -> . expression PLUS
    (95) expression -> . expression MINUS
    (96) expression -> . expression PLUS expression
    (97) expression -> . expression MINUS expression
    (98) expression -> . expression TIMES expression
    (99) expression -> . expression DIVIDE expression
    (100) expression -> . STRING
    (101) expression -> . CHAR
    (102) expression -> . bool
    (90) array_access -> . IDENTIFIER arrays
    (63) bool -> . TRUE
    (64) bool -> . FALSE

    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    IDENTIFIER      shift and go to state 94
    NUMBER          shift and go to state 63
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    params                         shift and go to state 126
    param                          shift and go to state 97
    increment                      shift and go to state 98
    expression                     shift and go to state 99
    array_access                   shift and go to state 64
    bool                           shift and go to state 67

state 71

    (118) for -> FOR LPAREN . assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS

    RETURNTYPE      shift and go to state 128
    IDENTIFIER      shift and go to state 37
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23

    assignment_statement           shift and go to state 127
    increment                      shift and go to state 24

state 72

    (123) try_catch -> TRY LBRACE . statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> TRY LBRACE . statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (88) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (89) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (103) return -> . RETURN IDENTIFIER SEMICOLON
    (104) return -> . RETURN SEMICOLON
    (105) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (118) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (123) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (110) ifblock -> . if
    (111) ifblock -> . if else
    (112) ifblock -> . if else_if
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 131
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 25
    THIS            shift and go to state 26
    SWITCH          shift and go to state 27
    RETURN          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    TRY             shift and go to state 31
    STATIC          shift and go to state 32
    IF              shift and go to state 34

    statements                     shift and go to state 129
    statement                      shift and go to state 130
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    increment                      shift and go to state 24
    if                             shift and go to state 33

state 73

    (17) function -> STATIC RETURNTYPE . IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> STATIC RETURNTYPE . IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE

    IDENTIFIER      shift and go to state 132


state 74

    (111) ifblock -> if else .

    ACCESS          reduce using rule 111 (ifblock -> if else .)
    PASS            reduce using rule 111 (ifblock -> if else .)
    BREAK           reduce using rule 111 (ifblock -> if else .)
    RETURNTYPE      reduce using rule 111 (ifblock -> if else .)
    IDENTIFIER      reduce using rule 111 (ifblock -> if else .)
    PLUS            reduce using rule 111 (ifblock -> if else .)
    MINUS           reduce using rule 111 (ifblock -> if else .)
    SOP             reduce using rule 111 (ifblock -> if else .)
    THIS            reduce using rule 111 (ifblock -> if else .)
    SWITCH          reduce using rule 111 (ifblock -> if else .)
    RETURN          reduce using rule 111 (ifblock -> if else .)
    WHILE           reduce using rule 111 (ifblock -> if else .)
    FOR             reduce using rule 111 (ifblock -> if else .)
    TRY             reduce using rule 111 (ifblock -> if else .)
    STATIC          reduce using rule 111 (ifblock -> if else .)
    IF              reduce using rule 111 (ifblock -> if else .)
    $end            reduce using rule 111 (ifblock -> if else .)
    RBRACE          reduce using rule 111 (ifblock -> if else .)
    CASE            reduce using rule 111 (ifblock -> if else .)
    DEFAULT         reduce using rule 111 (ifblock -> if else .)


state 75

    (112) ifblock -> if else_if .

    ACCESS          reduce using rule 112 (ifblock -> if else_if .)
    PASS            reduce using rule 112 (ifblock -> if else_if .)
    BREAK           reduce using rule 112 (ifblock -> if else_if .)
    RETURNTYPE      reduce using rule 112 (ifblock -> if else_if .)
    IDENTIFIER      reduce using rule 112 (ifblock -> if else_if .)
    PLUS            reduce using rule 112 (ifblock -> if else_if .)
    MINUS           reduce using rule 112 (ifblock -> if else_if .)
    SOP             reduce using rule 112 (ifblock -> if else_if .)
    THIS            reduce using rule 112 (ifblock -> if else_if .)
    SWITCH          reduce using rule 112 (ifblock -> if else_if .)
    RETURN          reduce using rule 112 (ifblock -> if else_if .)
    WHILE           reduce using rule 112 (ifblock -> if else_if .)
    FOR             reduce using rule 112 (ifblock -> if else_if .)
    TRY             reduce using rule 112 (ifblock -> if else_if .)
    STATIC          reduce using rule 112 (ifblock -> if else_if .)
    IF              reduce using rule 112 (ifblock -> if else_if .)
    $end            reduce using rule 112 (ifblock -> if else_if .)
    RBRACE          reduce using rule 112 (ifblock -> if else_if .)
    CASE            reduce using rule 112 (ifblock -> if else_if .)
    DEFAULT         reduce using rule 112 (ifblock -> if else_if .)


state 76

    (114) else -> ELSE . LBRACE statements RBRACE
    (115) else_if -> ELSE . if
    (116) else_if -> ELSE . if else_if
    (117) else_if -> ELSE . if else
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    LBRACE          shift and go to state 133
    IF              shift and go to state 34

    if                             shift and go to state 134

state 77

    (113) if -> IF LPAREN . params RPAREN LBRACE statements RBRACE
    (50) params -> . param
    (51) params -> . param LOGICAL params
    (52) param -> . increment
    (53) param -> . expression
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (91) expression -> . IDENTIFIER
    (92) expression -> . NUMBER
    (93) expression -> . array_access
    (94) expression -> . expression PLUS
    (95) expression -> . expression MINUS
    (96) expression -> . expression PLUS expression
    (97) expression -> . expression MINUS expression
    (98) expression -> . expression TIMES expression
    (99) expression -> . expression DIVIDE expression
    (100) expression -> . STRING
    (101) expression -> . CHAR
    (102) expression -> . bool
    (90) array_access -> . IDENTIFIER arrays
    (63) bool -> . TRUE
    (64) bool -> . FALSE

    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    IDENTIFIER      shift and go to state 94
    NUMBER          shift and go to state 63
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    params                         shift and go to state 135
    param                          shift and go to state 97
    increment                      shift and go to state 98
    expression                     shift and go to state 99
    array_access                   shift and go to state 64
    bool                           shift and go to state 67

state 78

    (5) class -> ACCESS CLASS IDENTIFIER . LBRACE stats RBRACE

    LBRACE          shift and go to state 136


state 79

    (15) function -> ACCESS RETURNTYPE IDENTIFIER . LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> ACCESS RETURNTYPE IDENTIFIER . LPAREN RPAREN LBRACE statements RBRACE
    (65) assignment_statement -> RETURNTYPE IDENTIFIER . ASSIGN expression SEMICOLON
    (66) assignment_statement -> RETURNTYPE IDENTIFIER . SEMICOLON
    (67) assignment_statement -> RETURNTYPE IDENTIFIER . PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> RETURNTYPE IDENTIFIER . MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> RETURNTYPE IDENTIFIER . TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> RETURNTYPE IDENTIFIER . DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> RETURNTYPE IDENTIFIER . PLUS PLUS SEMICOLON
    (82) assignment_statement -> RETURNTYPE IDENTIFIER . arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> RETURNTYPE IDENTIFIER . arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (59) arrays -> . LBRACKET RBRACKET
    (60) arrays -> . LBRACKET RBRACKET arrays
    (61) arrays -> . LBRACKET expression RBRACKET arrays
    (62) arrays -> . LBRACKET expression RBRACKET

    LPAREN          shift and go to state 137
    ASSIGN          shift and go to state 104
    SEMICOLON       shift and go to state 105
    PLUS            shift and go to state 106
    MINUS           shift and go to state 107
    TIMES           shift and go to state 108
    DIVIDE          shift and go to state 109
    LBRACKET        shift and go to state 49

    arrays                         shift and go to state 110

state 80

    (19) function -> ACCESS STATIC RETURNTYPE . IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> ACCESS STATIC RETURNTYPE . IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE

    IDENTIFIER      shift and go to state 138


state 81

    (54) class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .

    ACCESS          reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    PASS            reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    BREAK           reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    RETURNTYPE      reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    PLUS            reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    MINUS           reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    SOP             reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    THIS            reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    SWITCH          reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    TRY             reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    STATIC          reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    IF              reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    $end            reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    CASE            reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)
    DEFAULT         reduce using rule 54 (class_statement -> IDENTIFIER IDENTIFIER SEMICOLON .)


state 82

    (55) class_statement -> IDENTIFIER IDENTIFIER ASSIGN . NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> IDENTIFIER IDENTIFIER ASSIGN . NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> IDENTIFIER IDENTIFIER ASSIGN . NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> IDENTIFIER IDENTIFIER ASSIGN . NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON

    NEW             shift and go to state 139


state 83

    (91) expression -> IDENTIFIER .
    (90) array_access -> IDENTIFIER . arrays
    (59) arrays -> . LBRACKET RBRACKET
    (60) arrays -> . LBRACKET RBRACKET arrays
    (61) arrays -> . LBRACKET expression RBRACKET arrays
    (62) arrays -> . LBRACKET expression RBRACKET

    SEMICOLON       reduce using rule 91 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 91 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 91 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 91 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 91 (expression -> IDENTIFIER .)
    RBRACKET        reduce using rule 91 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 91 (expression -> IDENTIFIER .)
    LOGICAL         reduce using rule 91 (expression -> IDENTIFIER .)
    LBRACKET        shift and go to state 49

    arrays                         shift and go to state 120

state 84

    (72) assignment_statement -> IDENTIFIER ASSIGN expression . SEMICOLON
    (94) expression -> expression . PLUS
    (95) expression -> expression . MINUS
    (96) expression -> expression . PLUS expression
    (97) expression -> expression . MINUS expression
    (98) expression -> expression . TIMES expression
    (99) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 140
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123
    TIMES           shift and go to state 124
    DIVIDE          shift and go to state 125


state 85

    (121) increment -> IDENTIFIER PLUS PLUS .

    SEMICOLON       reduce using rule 121 (increment -> IDENTIFIER PLUS PLUS .)
    LOGICAL         reduce using rule 121 (increment -> IDENTIFIER PLUS PLUS .)
    RPAREN          reduce using rule 121 (increment -> IDENTIFIER PLUS PLUS .)


state 86

    (73) assignment_statement -> IDENTIFIER PLUS ASSIGN . expression SEMICOLON
    (91) expression -> . IDENTIFIER
    (92) expression -> . NUMBER
    (93) expression -> . array_access
    (94) expression -> . expression PLUS
    (95) expression -> . expression MINUS
    (96) expression -> . expression PLUS expression
    (97) expression -> . expression MINUS expression
    (98) expression -> . expression TIMES expression
    (99) expression -> . expression DIVIDE expression
    (100) expression -> . STRING
    (101) expression -> . CHAR
    (102) expression -> . bool
    (90) array_access -> . IDENTIFIER arrays
    (63) bool -> . TRUE
    (64) bool -> . FALSE

    IDENTIFIER      shift and go to state 83
    NUMBER          shift and go to state 63
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 141
    array_access                   shift and go to state 64
    bool                           shift and go to state 67

state 87

    (122) increment -> IDENTIFIER MINUS MINUS .

    SEMICOLON       reduce using rule 122 (increment -> IDENTIFIER MINUS MINUS .)
    LOGICAL         reduce using rule 122 (increment -> IDENTIFIER MINUS MINUS .)
    RPAREN          reduce using rule 122 (increment -> IDENTIFIER MINUS MINUS .)


state 88

    (74) assignment_statement -> IDENTIFIER MINUS ASSIGN . expression SEMICOLON
    (91) expression -> . IDENTIFIER
    (92) expression -> . NUMBER
    (93) expression -> . array_access
    (94) expression -> . expression PLUS
    (95) expression -> . expression MINUS
    (96) expression -> . expression PLUS expression
    (97) expression -> . expression MINUS expression
    (98) expression -> . expression TIMES expression
    (99) expression -> . expression DIVIDE expression
    (100) expression -> . STRING
    (101) expression -> . CHAR
    (102) expression -> . bool
    (90) array_access -> . IDENTIFIER arrays
    (63) bool -> . TRUE
    (64) bool -> . FALSE

    IDENTIFIER      shift and go to state 83
    NUMBER          shift and go to state 63
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 142
    array_access                   shift and go to state 64
    bool                           shift and go to state 67

state 89

    (75) assignment_statement -> IDENTIFIER TIMES ASSIGN . expression SEMICOLON
    (91) expression -> . IDENTIFIER
    (92) expression -> . NUMBER
    (93) expression -> . array_access
    (94) expression -> . expression PLUS
    (95) expression -> . expression MINUS
    (96) expression -> . expression PLUS expression
    (97) expression -> . expression MINUS expression
    (98) expression -> . expression TIMES expression
    (99) expression -> . expression DIVIDE expression
    (100) expression -> . STRING
    (101) expression -> . CHAR
    (102) expression -> . bool
    (90) array_access -> . IDENTIFIER arrays
    (63) bool -> . TRUE
    (64) bool -> . FALSE

    IDENTIFIER      shift and go to state 83
    NUMBER          shift and go to state 63
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 143
    array_access                   shift and go to state 64
    bool                           shift and go to state 67

state 90

    (76) assignment_statement -> IDENTIFIER DIVIDE ASSIGN . expression SEMICOLON
    (91) expression -> . IDENTIFIER
    (92) expression -> . NUMBER
    (93) expression -> . array_access
    (94) expression -> . expression PLUS
    (95) expression -> . expression MINUS
    (96) expression -> . expression PLUS expression
    (97) expression -> . expression MINUS expression
    (98) expression -> . expression TIMES expression
    (99) expression -> . expression DIVIDE expression
    (100) expression -> . STRING
    (101) expression -> . CHAR
    (102) expression -> . bool
    (90) array_access -> . IDENTIFIER arrays
    (63) bool -> . TRUE
    (64) bool -> . FALSE

    IDENTIFIER      shift and go to state 83
    NUMBER          shift and go to state 63
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 144
    array_access                   shift and go to state 64
    bool                           shift and go to state 67

state 91

    (77) assignment_statement -> IDENTIFIER arrays PLUS . PLUS SEMICOLON

    PLUS            shift and go to state 145


state 92

    (79) assignment_statement -> IDENTIFIER arrays MINUS . MINUS SEMICOLON

    MINUS           shift and go to state 146


state 93

    (84) assignment_statement -> IDENTIFIER arrays ASSIGN . expression SEMICOLON
    (85) assignment_statement -> IDENTIFIER arrays ASSIGN . LBRACE items RBRACE SEMICOLON
    (91) expression -> . IDENTIFIER
    (92) expression -> . NUMBER
    (93) expression -> . array_access
    (94) expression -> . expression PLUS
    (95) expression -> . expression MINUS
    (96) expression -> . expression PLUS expression
    (97) expression -> . expression MINUS expression
    (98) expression -> . expression TIMES expression
    (99) expression -> . expression DIVIDE expression
    (100) expression -> . STRING
    (101) expression -> . CHAR
    (102) expression -> . bool
    (90) array_access -> . IDENTIFIER arrays
    (63) bool -> . TRUE
    (64) bool -> . FALSE

    LBRACE          shift and go to state 148
    IDENTIFIER      shift and go to state 83
    NUMBER          shift and go to state 63
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 147
    array_access                   shift and go to state 64
    bool                           shift and go to state 67

state 94

    (121) increment -> IDENTIFIER . PLUS PLUS
    (122) increment -> IDENTIFIER . MINUS MINUS
    (91) expression -> IDENTIFIER .
    (90) array_access -> IDENTIFIER . arrays
    (59) arrays -> . LBRACKET RBRACKET
    (60) arrays -> . LBRACKET RBRACKET arrays
    (61) arrays -> . LBRACKET expression RBRACKET arrays
    (62) arrays -> . LBRACKET expression RBRACKET

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    PLUS            shift and go to state 149
    MINUS           shift and go to state 150
    TIMES           reduce using rule 91 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 91 (expression -> IDENTIFIER .)
    LOGICAL         reduce using rule 91 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 91 (expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 91 (expression -> IDENTIFIER .)
    LBRACKET        shift and go to state 49

  ! PLUS            [ reduce using rule 91 (expression -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 91 (expression -> IDENTIFIER .) ]

    arrays                         shift and go to state 120

state 95

    (27) function_call -> IDENTIFIER LPAREN params . RPAREN SEMICOLON

    RPAREN          shift and go to state 151


state 96

    (28) function_call -> IDENTIFIER LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 152


state 97

    (50) params -> param .
    (51) params -> param . LOGICAL params

    RPAREN          reduce using rule 50 (params -> param .)
    SEMICOLON       reduce using rule 50 (params -> param .)
    LOGICAL         shift and go to state 153


state 98

    (52) param -> increment .

    LOGICAL         reduce using rule 52 (param -> increment .)
    RPAREN          reduce using rule 52 (param -> increment .)
    SEMICOLON       reduce using rule 52 (param -> increment .)


state 99

    (53) param -> expression .
    (94) expression -> expression . PLUS
    (95) expression -> expression . MINUS
    (96) expression -> expression . PLUS expression
    (97) expression -> expression . MINUS expression
    (98) expression -> expression . TIMES expression
    (99) expression -> expression . DIVIDE expression

    LOGICAL         reduce using rule 53 (param -> expression .)
    RPAREN          reduce using rule 53 (param -> expression .)
    SEMICOLON       reduce using rule 53 (param -> expression .)
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123
    TIMES           shift and go to state 124
    DIVIDE          shift and go to state 125


state 100

    (119) increment -> PLUS . PLUS IDENTIFIER

    PLUS            shift and go to state 154


state 101

    (120) increment -> MINUS . MINUS IDENTIFIER

    MINUS           shift and go to state 155


state 102

    (59) arrays -> LBRACKET RBRACKET .
    (60) arrays -> LBRACKET RBRACKET . arrays
    (59) arrays -> . LBRACKET RBRACKET
    (60) arrays -> . LBRACKET RBRACKET arrays
    (61) arrays -> . LBRACKET expression RBRACKET arrays
    (62) arrays -> . LBRACKET expression RBRACKET

    PLUS            reduce using rule 59 (arrays -> LBRACKET RBRACKET .)
    MINUS           reduce using rule 59 (arrays -> LBRACKET RBRACKET .)
    ASSIGN          reduce using rule 59 (arrays -> LBRACKET RBRACKET .)
    IDENTIFIER      reduce using rule 59 (arrays -> LBRACKET RBRACKET .)
    SEMICOLON       reduce using rule 59 (arrays -> LBRACKET RBRACKET .)
    TIMES           reduce using rule 59 (arrays -> LBRACKET RBRACKET .)
    DIVIDE          reduce using rule 59 (arrays -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 59 (arrays -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 59 (arrays -> LBRACKET RBRACKET .)
    LOGICAL         reduce using rule 59 (arrays -> LBRACKET RBRACKET .)
    LBRACKET        shift and go to state 49

    arrays                         shift and go to state 156

state 103

    (61) arrays -> LBRACKET expression . RBRACKET arrays
    (62) arrays -> LBRACKET expression . RBRACKET
    (94) expression -> expression . PLUS
    (95) expression -> expression . MINUS
    (96) expression -> expression . PLUS expression
    (97) expression -> expression . MINUS expression
    (98) expression -> expression . TIMES expression
    (99) expression -> expression . DIVIDE expression

    RBRACKET        shift and go to state 157
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123
    TIMES           shift and go to state 124
    DIVIDE          shift and go to state 125


state 104

    (65) assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN . expression SEMICOLON
    (91) expression -> . IDENTIFIER
    (92) expression -> . NUMBER
    (93) expression -> . array_access
    (94) expression -> . expression PLUS
    (95) expression -> . expression MINUS
    (96) expression -> . expression PLUS expression
    (97) expression -> . expression MINUS expression
    (98) expression -> . expression TIMES expression
    (99) expression -> . expression DIVIDE expression
    (100) expression -> . STRING
    (101) expression -> . CHAR
    (102) expression -> . bool
    (90) array_access -> . IDENTIFIER arrays
    (63) bool -> . TRUE
    (64) bool -> . FALSE

    IDENTIFIER      shift and go to state 83
    NUMBER          shift and go to state 63
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 158
    array_access                   shift and go to state 64
    bool                           shift and go to state 67

state 105

    (66) assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .

    ACCESS          reduce using rule 66 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    PASS            reduce using rule 66 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    BREAK           reduce using rule 66 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    RETURNTYPE      reduce using rule 66 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 66 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    PLUS            reduce using rule 66 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    MINUS           reduce using rule 66 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    SOP             reduce using rule 66 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    THIS            reduce using rule 66 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    SWITCH          reduce using rule 66 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 66 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 66 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 66 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    TRY             reduce using rule 66 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    STATIC          reduce using rule 66 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    IF              reduce using rule 66 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    $end            reduce using rule 66 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    NUMBER          reduce using rule 66 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    STRING          reduce using rule 66 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    CHAR            reduce using rule 66 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    TRUE            reduce using rule 66 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    FALSE           reduce using rule 66 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 66 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    CASE            reduce using rule 66 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)
    DEFAULT         reduce using rule 66 (assignment_statement -> RETURNTYPE IDENTIFIER SEMICOLON .)


state 106

    (67) assignment_statement -> RETURNTYPE IDENTIFIER PLUS . ASSIGN expression SEMICOLON
    (71) assignment_statement -> RETURNTYPE IDENTIFIER PLUS . PLUS SEMICOLON

    ASSIGN          shift and go to state 160
    PLUS            shift and go to state 159


state 107

    (68) assignment_statement -> RETURNTYPE IDENTIFIER MINUS . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 161


state 108

    (69) assignment_statement -> RETURNTYPE IDENTIFIER TIMES . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 162


state 109

    (70) assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 163


state 110

    (82) assignment_statement -> RETURNTYPE IDENTIFIER arrays . ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> RETURNTYPE IDENTIFIER arrays . ASSIGN NEW RETURNTYPE arrays SEMICOLON

    ASSIGN          shift and go to state 164


state 111

    (13) function -> RETURNTYPE IDENTIFIER LPAREN . parameters RPAREN LBRACE statements RBRACE
    (14) function -> RETURNTYPE IDENTIFIER LPAREN . RPAREN LBRACE statements RBRACE
    (21) parameters -> . parameter
    (22) parameters -> . parameter COMMA parameters
    (23) parameter -> . RETURNTYPE IDENTIFIER
    (24) parameter -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER

    RPAREN          shift and go to state 167
    RETURNTYPE      shift and go to state 165

    parameters                     shift and go to state 166
    parameter                      shift and go to state 168

state 112

    (83) assignment_statement -> RETURNTYPE arrays IDENTIFIER . ASSIGN LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> RETURNTYPE arrays IDENTIFIER . ASSIGN NEW RETURNTYPE arrays SEMICOLON

    ASSIGN          shift and go to state 169


state 113

    (80) assignment_statement -> PLUS PLUS IDENTIFIER . arrays SEMICOLON
    (119) increment -> PLUS PLUS IDENTIFIER .
    (59) arrays -> . LBRACKET RBRACKET
    (60) arrays -> . LBRACKET RBRACKET arrays
    (61) arrays -> . LBRACKET expression RBRACKET arrays
    (62) arrays -> . LBRACKET expression RBRACKET

    SEMICOLON       reduce using rule 119 (increment -> PLUS PLUS IDENTIFIER .)
    LBRACKET        shift and go to state 49

    arrays                         shift and go to state 170

state 114

    (81) assignment_statement -> MINUS MINUS IDENTIFIER . arrays SEMICOLON
    (120) increment -> MINUS MINUS IDENTIFIER .
    (59) arrays -> . LBRACKET RBRACKET
    (60) arrays -> . LBRACKET RBRACKET arrays
    (61) arrays -> . LBRACKET expression RBRACKET arrays
    (62) arrays -> . LBRACKET expression RBRACKET

    SEMICOLON       reduce using rule 120 (increment -> MINUS MINUS IDENTIFIER .)
    LBRACKET        shift and go to state 49

    arrays                         shift and go to state 171

state 115

    (88) print_statement -> SOP LPAREN expression . RPAREN SEMICOLON
    (94) expression -> expression . PLUS
    (95) expression -> expression . MINUS
    (96) expression -> expression . PLUS expression
    (97) expression -> expression . MINUS expression
    (98) expression -> expression . TIMES expression
    (99) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 172
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123
    TIMES           shift and go to state 124
    DIVIDE          shift and go to state 125


state 116

    (89) print_statement -> SOP LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 173


state 117

    (6) this_assign -> THIS IDENTIFIER ASSIGN . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 174


state 118

    (44) switch -> SWITCH LPAREN IDENTIFIER . RPAREN LBRACE cases RBRACE

    RPAREN          shift and go to state 175


state 119

    (103) return -> RETURN IDENTIFIER SEMICOLON .

    ACCESS          reduce using rule 103 (return -> RETURN IDENTIFIER SEMICOLON .)
    PASS            reduce using rule 103 (return -> RETURN IDENTIFIER SEMICOLON .)
    BREAK           reduce using rule 103 (return -> RETURN IDENTIFIER SEMICOLON .)
    RETURNTYPE      reduce using rule 103 (return -> RETURN IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 103 (return -> RETURN IDENTIFIER SEMICOLON .)
    PLUS            reduce using rule 103 (return -> RETURN IDENTIFIER SEMICOLON .)
    MINUS           reduce using rule 103 (return -> RETURN IDENTIFIER SEMICOLON .)
    SOP             reduce using rule 103 (return -> RETURN IDENTIFIER SEMICOLON .)
    THIS            reduce using rule 103 (return -> RETURN IDENTIFIER SEMICOLON .)
    SWITCH          reduce using rule 103 (return -> RETURN IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 103 (return -> RETURN IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 103 (return -> RETURN IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 103 (return -> RETURN IDENTIFIER SEMICOLON .)
    TRY             reduce using rule 103 (return -> RETURN IDENTIFIER SEMICOLON .)
    STATIC          reduce using rule 103 (return -> RETURN IDENTIFIER SEMICOLON .)
    IF              reduce using rule 103 (return -> RETURN IDENTIFIER SEMICOLON .)
    $end            reduce using rule 103 (return -> RETURN IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 103 (return -> RETURN IDENTIFIER SEMICOLON .)
    CASE            reduce using rule 103 (return -> RETURN IDENTIFIER SEMICOLON .)
    DEFAULT         reduce using rule 103 (return -> RETURN IDENTIFIER SEMICOLON .)


state 120

    (90) array_access -> IDENTIFIER arrays .

    SEMICOLON       reduce using rule 90 (array_access -> IDENTIFIER arrays .)
    PLUS            reduce using rule 90 (array_access -> IDENTIFIER arrays .)
    MINUS           reduce using rule 90 (array_access -> IDENTIFIER arrays .)
    TIMES           reduce using rule 90 (array_access -> IDENTIFIER arrays .)
    DIVIDE          reduce using rule 90 (array_access -> IDENTIFIER arrays .)
    LOGICAL         reduce using rule 90 (array_access -> IDENTIFIER arrays .)
    RPAREN          reduce using rule 90 (array_access -> IDENTIFIER arrays .)
    RBRACKET        reduce using rule 90 (array_access -> IDENTIFIER arrays .)


state 121

    (105) return -> RETURN expression SEMICOLON .

    ACCESS          reduce using rule 105 (return -> RETURN expression SEMICOLON .)
    PASS            reduce using rule 105 (return -> RETURN expression SEMICOLON .)
    BREAK           reduce using rule 105 (return -> RETURN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 105 (return -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 105 (return -> RETURN expression SEMICOLON .)
    PLUS            reduce using rule 105 (return -> RETURN expression SEMICOLON .)
    MINUS           reduce using rule 105 (return -> RETURN expression SEMICOLON .)
    SOP             reduce using rule 105 (return -> RETURN expression SEMICOLON .)
    THIS            reduce using rule 105 (return -> RETURN expression SEMICOLON .)
    SWITCH          reduce using rule 105 (return -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 105 (return -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 105 (return -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 105 (return -> RETURN expression SEMICOLON .)
    TRY             reduce using rule 105 (return -> RETURN expression SEMICOLON .)
    STATIC          reduce using rule 105 (return -> RETURN expression SEMICOLON .)
    IF              reduce using rule 105 (return -> RETURN expression SEMICOLON .)
    $end            reduce using rule 105 (return -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 105 (return -> RETURN expression SEMICOLON .)
    CASE            reduce using rule 105 (return -> RETURN expression SEMICOLON .)
    DEFAULT         reduce using rule 105 (return -> RETURN expression SEMICOLON .)


state 122

    (94) expression -> expression PLUS .
    (96) expression -> expression PLUS . expression
    (91) expression -> . IDENTIFIER
    (92) expression -> . NUMBER
    (93) expression -> . array_access
    (94) expression -> . expression PLUS
    (95) expression -> . expression MINUS
    (96) expression -> . expression PLUS expression
    (97) expression -> . expression MINUS expression
    (98) expression -> . expression TIMES expression
    (99) expression -> . expression DIVIDE expression
    (100) expression -> . STRING
    (101) expression -> . CHAR
    (102) expression -> . bool
    (90) array_access -> . IDENTIFIER arrays
    (63) bool -> . TRUE
    (64) bool -> . FALSE

    SEMICOLON       reduce using rule 94 (expression -> expression PLUS .)
    PLUS            reduce using rule 94 (expression -> expression PLUS .)
    MINUS           reduce using rule 94 (expression -> expression PLUS .)
    TIMES           reduce using rule 94 (expression -> expression PLUS .)
    DIVIDE          reduce using rule 94 (expression -> expression PLUS .)
    LOGICAL         reduce using rule 94 (expression -> expression PLUS .)
    RPAREN          reduce using rule 94 (expression -> expression PLUS .)
    RBRACKET        reduce using rule 94 (expression -> expression PLUS .)
    IDENTIFIER      shift and go to state 83
    NUMBER          shift and go to state 63
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 176
    array_access                   shift and go to state 64
    bool                           shift and go to state 67

state 123

    (95) expression -> expression MINUS .
    (97) expression -> expression MINUS . expression
    (91) expression -> . IDENTIFIER
    (92) expression -> . NUMBER
    (93) expression -> . array_access
    (94) expression -> . expression PLUS
    (95) expression -> . expression MINUS
    (96) expression -> . expression PLUS expression
    (97) expression -> . expression MINUS expression
    (98) expression -> . expression TIMES expression
    (99) expression -> . expression DIVIDE expression
    (100) expression -> . STRING
    (101) expression -> . CHAR
    (102) expression -> . bool
    (90) array_access -> . IDENTIFIER arrays
    (63) bool -> . TRUE
    (64) bool -> . FALSE

    SEMICOLON       reduce using rule 95 (expression -> expression MINUS .)
    PLUS            reduce using rule 95 (expression -> expression MINUS .)
    MINUS           reduce using rule 95 (expression -> expression MINUS .)
    TIMES           reduce using rule 95 (expression -> expression MINUS .)
    DIVIDE          reduce using rule 95 (expression -> expression MINUS .)
    LOGICAL         reduce using rule 95 (expression -> expression MINUS .)
    RPAREN          reduce using rule 95 (expression -> expression MINUS .)
    RBRACKET        reduce using rule 95 (expression -> expression MINUS .)
    IDENTIFIER      shift and go to state 83
    NUMBER          shift and go to state 63
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 177
    array_access                   shift and go to state 64
    bool                           shift and go to state 67

state 124

    (98) expression -> expression TIMES . expression
    (91) expression -> . IDENTIFIER
    (92) expression -> . NUMBER
    (93) expression -> . array_access
    (94) expression -> . expression PLUS
    (95) expression -> . expression MINUS
    (96) expression -> . expression PLUS expression
    (97) expression -> . expression MINUS expression
    (98) expression -> . expression TIMES expression
    (99) expression -> . expression DIVIDE expression
    (100) expression -> . STRING
    (101) expression -> . CHAR
    (102) expression -> . bool
    (90) array_access -> . IDENTIFIER arrays
    (63) bool -> . TRUE
    (64) bool -> . FALSE

    IDENTIFIER      shift and go to state 83
    NUMBER          shift and go to state 63
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 178
    array_access                   shift and go to state 64
    bool                           shift and go to state 67

state 125

    (99) expression -> expression DIVIDE . expression
    (91) expression -> . IDENTIFIER
    (92) expression -> . NUMBER
    (93) expression -> . array_access
    (94) expression -> . expression PLUS
    (95) expression -> . expression MINUS
    (96) expression -> . expression PLUS expression
    (97) expression -> . expression MINUS expression
    (98) expression -> . expression TIMES expression
    (99) expression -> . expression DIVIDE expression
    (100) expression -> . STRING
    (101) expression -> . CHAR
    (102) expression -> . bool
    (90) array_access -> . IDENTIFIER arrays
    (63) bool -> . TRUE
    (64) bool -> . FALSE

    IDENTIFIER      shift and go to state 83
    NUMBER          shift and go to state 63
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 179
    array_access                   shift and go to state 64
    bool                           shift and go to state 67

state 126

    (49) while -> WHILE LPAREN params . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 180


state 127

    (118) for -> FOR LPAREN assignment_statement . params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (50) params -> . param
    (51) params -> . param LOGICAL params
    (52) param -> . increment
    (53) param -> . expression
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (91) expression -> . IDENTIFIER
    (92) expression -> . NUMBER
    (93) expression -> . array_access
    (94) expression -> . expression PLUS
    (95) expression -> . expression MINUS
    (96) expression -> . expression PLUS expression
    (97) expression -> . expression MINUS expression
    (98) expression -> . expression TIMES expression
    (99) expression -> . expression DIVIDE expression
    (100) expression -> . STRING
    (101) expression -> . CHAR
    (102) expression -> . bool
    (90) array_access -> . IDENTIFIER arrays
    (63) bool -> . TRUE
    (64) bool -> . FALSE

    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    IDENTIFIER      shift and go to state 94
    NUMBER          shift and go to state 63
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    params                         shift and go to state 181
    increment                      shift and go to state 98
    param                          shift and go to state 97
    expression                     shift and go to state 99
    array_access                   shift and go to state 64
    bool                           shift and go to state 67

state 128

    (65) assignment_statement -> RETURNTYPE . IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> RETURNTYPE . IDENTIFIER SEMICOLON
    (67) assignment_statement -> RETURNTYPE . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> RETURNTYPE . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> RETURNTYPE . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> RETURNTYPE . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> RETURNTYPE . IDENTIFIER PLUS PLUS SEMICOLON
    (82) assignment_statement -> RETURNTYPE . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> RETURNTYPE . arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> RETURNTYPE . IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> RETURNTYPE . arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (59) arrays -> . LBRACKET RBRACKET
    (60) arrays -> . LBRACKET RBRACKET arrays
    (61) arrays -> . LBRACKET expression RBRACKET arrays
    (62) arrays -> . LBRACKET expression RBRACKET

    IDENTIFIER      shift and go to state 182
    LBRACKET        shift and go to state 49

    arrays                         shift and go to state 53

state 129

    (123) try_catch -> TRY LBRACE statements . RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> TRY LBRACE statements . RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

    RBRACE          shift and go to state 183


state 130

    (25) statements -> statement .
    (26) statements -> statement . statements
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (88) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (89) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (103) return -> . RETURN IDENTIFIER SEMICOLON
    (104) return -> . RETURN SEMICOLON
    (105) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (118) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (123) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (110) ifblock -> . if
    (111) ifblock -> . if else
    (112) ifblock -> . if else_if
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    RBRACE          reduce using rule 25 (statements -> statement .)
    CASE            reduce using rule 25 (statements -> statement .)
    DEFAULT         reduce using rule 25 (statements -> statement .)
    PASS            shift and go to state 16
    ACCESS          shift and go to state 131
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 25
    THIS            shift and go to state 26
    SWITCH          shift and go to state 27
    RETURN          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    TRY             shift and go to state 31
    STATIC          shift and go to state 32
    IF              shift and go to state 34

    statement                      shift and go to state 130
    statements                     shift and go to state 184
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    increment                      shift and go to state 24
    if                             shift and go to state 33

state 131

    (39) statement -> ACCESS . assignment_statement
    (15) function -> ACCESS . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> ACCESS . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> ACCESS . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> ACCESS . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS

    RETURNTYPE      shift and go to state 39
    STATIC          shift and go to state 40
    IDENTIFIER      shift and go to state 37
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23

    assignment_statement           shift and go to state 38
    increment                      shift and go to state 24

state 132

    (17) function -> STATIC RETURNTYPE IDENTIFIER . LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> STATIC RETURNTYPE IDENTIFIER . LPAREN RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 185


state 133

    (114) else -> ELSE LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (88) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (89) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (103) return -> . RETURN IDENTIFIER SEMICOLON
    (104) return -> . RETURN SEMICOLON
    (105) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (118) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (123) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (110) ifblock -> . if
    (111) ifblock -> . if else
    (112) ifblock -> . if else_if
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 131
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 25
    THIS            shift and go to state 26
    SWITCH          shift and go to state 27
    RETURN          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    TRY             shift and go to state 31
    STATIC          shift and go to state 32
    IF              shift and go to state 34

    statements                     shift and go to state 186
    statement                      shift and go to state 130
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    increment                      shift and go to state 24
    if                             shift and go to state 33

state 134

    (115) else_if -> ELSE if .
    (116) else_if -> ELSE if . else_if
    (117) else_if -> ELSE if . else
    (115) else_if -> . ELSE if
    (116) else_if -> . ELSE if else_if
    (117) else_if -> . ELSE if else
    (114) else -> . ELSE LBRACE statements RBRACE

    ACCESS          reduce using rule 115 (else_if -> ELSE if .)
    PASS            reduce using rule 115 (else_if -> ELSE if .)
    BREAK           reduce using rule 115 (else_if -> ELSE if .)
    RETURNTYPE      reduce using rule 115 (else_if -> ELSE if .)
    IDENTIFIER      reduce using rule 115 (else_if -> ELSE if .)
    PLUS            reduce using rule 115 (else_if -> ELSE if .)
    MINUS           reduce using rule 115 (else_if -> ELSE if .)
    SOP             reduce using rule 115 (else_if -> ELSE if .)
    THIS            reduce using rule 115 (else_if -> ELSE if .)
    SWITCH          reduce using rule 115 (else_if -> ELSE if .)
    RETURN          reduce using rule 115 (else_if -> ELSE if .)
    WHILE           reduce using rule 115 (else_if -> ELSE if .)
    FOR             reduce using rule 115 (else_if -> ELSE if .)
    TRY             reduce using rule 115 (else_if -> ELSE if .)
    STATIC          reduce using rule 115 (else_if -> ELSE if .)
    IF              reduce using rule 115 (else_if -> ELSE if .)
    $end            reduce using rule 115 (else_if -> ELSE if .)
    RBRACE          reduce using rule 115 (else_if -> ELSE if .)
    CASE            reduce using rule 115 (else_if -> ELSE if .)
    DEFAULT         reduce using rule 115 (else_if -> ELSE if .)
    ELSE            shift and go to state 187

    else_if                        shift and go to state 188
    else                           shift and go to state 189

state 135

    (113) if -> IF LPAREN params . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 190


state 136

    (5) class -> ACCESS CLASS IDENTIFIER LBRACE . stats RBRACE
    (7) stats -> . stat
    (8) stats -> . stat stats
    (9) stat -> . constructor
    (10) stat -> . statement
    (11) constructor -> . ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (12) constructor -> . ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (88) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (89) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (103) return -> . RETURN IDENTIFIER SEMICOLON
    (104) return -> . RETURN SEMICOLON
    (105) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (118) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (123) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (110) ifblock -> . if
    (111) ifblock -> . if else
    (112) ifblock -> . if else_if
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    ACCESS          shift and go to state 191
    PASS            shift and go to state 16
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 25
    THIS            shift and go to state 26
    SWITCH          shift and go to state 27
    RETURN          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    TRY             shift and go to state 31
    STATIC          shift and go to state 32
    IF              shift and go to state 34

    stats                          shift and go to state 192
    stat                           shift and go to state 193
    constructor                    shift and go to state 194
    statement                      shift and go to state 195
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    increment                      shift and go to state 24
    if                             shift and go to state 33

state 137

    (15) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN . parameters RPAREN LBRACE statements RBRACE
    (16) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN . RPAREN LBRACE statements RBRACE
    (21) parameters -> . parameter
    (22) parameters -> . parameter COMMA parameters
    (23) parameter -> . RETURNTYPE IDENTIFIER
    (24) parameter -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER

    RPAREN          shift and go to state 197
    RETURNTYPE      shift and go to state 165

    parameters                     shift and go to state 196
    parameter                      shift and go to state 168

state 138

    (19) function -> ACCESS STATIC RETURNTYPE IDENTIFIER . LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> ACCESS STATIC RETURNTYPE IDENTIFIER . LPAREN RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 198


state 139

    (55) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW . IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW . IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW . IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON

    IDENTIFIER      shift and go to state 199


state 140

    (72) assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 72 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 72 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 72 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 72 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 72 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 72 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 72 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 72 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 72 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 72 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 72 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 72 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 72 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 72 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 72 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    IF              reduce using rule 72 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    $end            reduce using rule 72 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 72 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 72 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 72 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 72 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 72 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 72 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 72 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 72 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)


state 141

    (73) assignment_statement -> IDENTIFIER PLUS ASSIGN expression . SEMICOLON
    (94) expression -> expression . PLUS
    (95) expression -> expression . MINUS
    (96) expression -> expression . PLUS expression
    (97) expression -> expression . MINUS expression
    (98) expression -> expression . TIMES expression
    (99) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 200
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123
    TIMES           shift and go to state 124
    DIVIDE          shift and go to state 125


state 142

    (74) assignment_statement -> IDENTIFIER MINUS ASSIGN expression . SEMICOLON
    (94) expression -> expression . PLUS
    (95) expression -> expression . MINUS
    (96) expression -> expression . PLUS expression
    (97) expression -> expression . MINUS expression
    (98) expression -> expression . TIMES expression
    (99) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 201
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123
    TIMES           shift and go to state 124
    DIVIDE          shift and go to state 125


state 143

    (75) assignment_statement -> IDENTIFIER TIMES ASSIGN expression . SEMICOLON
    (94) expression -> expression . PLUS
    (95) expression -> expression . MINUS
    (96) expression -> expression . PLUS expression
    (97) expression -> expression . MINUS expression
    (98) expression -> expression . TIMES expression
    (99) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 202
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123
    TIMES           shift and go to state 124
    DIVIDE          shift and go to state 125


state 144

    (76) assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression . SEMICOLON
    (94) expression -> expression . PLUS
    (95) expression -> expression . MINUS
    (96) expression -> expression . PLUS expression
    (97) expression -> expression . MINUS expression
    (98) expression -> expression . TIMES expression
    (99) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 203
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123
    TIMES           shift and go to state 124
    DIVIDE          shift and go to state 125


state 145

    (77) assignment_statement -> IDENTIFIER arrays PLUS PLUS . SEMICOLON

    SEMICOLON       shift and go to state 204


state 146

    (79) assignment_statement -> IDENTIFIER arrays MINUS MINUS . SEMICOLON

    SEMICOLON       shift and go to state 205


state 147

    (84) assignment_statement -> IDENTIFIER arrays ASSIGN expression . SEMICOLON
    (94) expression -> expression . PLUS
    (95) expression -> expression . MINUS
    (96) expression -> expression . PLUS expression
    (97) expression -> expression . MINUS expression
    (98) expression -> expression . TIMES expression
    (99) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 206
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123
    TIMES           shift and go to state 124
    DIVIDE          shift and go to state 125


state 148

    (85) assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE . items RBRACE SEMICOLON
    (106) items -> . item
    (107) items -> . item COMMA items
    (108) item -> . NUMBER
    (109) item -> . CHAR

    NUMBER          shift and go to state 209
    CHAR            shift and go to state 210

    items                          shift and go to state 207
    item                           shift and go to state 208

state 149

    (121) increment -> IDENTIFIER PLUS . PLUS

    PLUS            shift and go to state 85


state 150

    (122) increment -> IDENTIFIER MINUS . MINUS

    MINUS           shift and go to state 87


state 151

    (27) function_call -> IDENTIFIER LPAREN params RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 211


state 152

    (28) function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .

    ACCESS          reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    PASS            reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    RETURNTYPE      reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    PLUS            reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    MINUS           reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    SOP             reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    THIS            reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    SWITCH          reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    TRY             reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    STATIC          reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    CASE            reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 28 (function_call -> IDENTIFIER LPAREN RPAREN SEMICOLON .)


state 153

    (51) params -> param LOGICAL . params
    (50) params -> . param
    (51) params -> . param LOGICAL params
    (52) param -> . increment
    (53) param -> . expression
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (91) expression -> . IDENTIFIER
    (92) expression -> . NUMBER
    (93) expression -> . array_access
    (94) expression -> . expression PLUS
    (95) expression -> . expression MINUS
    (96) expression -> . expression PLUS expression
    (97) expression -> . expression MINUS expression
    (98) expression -> . expression TIMES expression
    (99) expression -> . expression DIVIDE expression
    (100) expression -> . STRING
    (101) expression -> . CHAR
    (102) expression -> . bool
    (90) array_access -> . IDENTIFIER arrays
    (63) bool -> . TRUE
    (64) bool -> . FALSE

    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    IDENTIFIER      shift and go to state 94
    NUMBER          shift and go to state 63
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    param                          shift and go to state 97
    params                         shift and go to state 212
    increment                      shift and go to state 98
    expression                     shift and go to state 99
    array_access                   shift and go to state 64
    bool                           shift and go to state 67

state 154

    (119) increment -> PLUS PLUS . IDENTIFIER

    IDENTIFIER      shift and go to state 213


state 155

    (120) increment -> MINUS MINUS . IDENTIFIER

    IDENTIFIER      shift and go to state 214


state 156

    (60) arrays -> LBRACKET RBRACKET arrays .

    PLUS            reduce using rule 60 (arrays -> LBRACKET RBRACKET arrays .)
    MINUS           reduce using rule 60 (arrays -> LBRACKET RBRACKET arrays .)
    ASSIGN          reduce using rule 60 (arrays -> LBRACKET RBRACKET arrays .)
    IDENTIFIER      reduce using rule 60 (arrays -> LBRACKET RBRACKET arrays .)
    SEMICOLON       reduce using rule 60 (arrays -> LBRACKET RBRACKET arrays .)
    TIMES           reduce using rule 60 (arrays -> LBRACKET RBRACKET arrays .)
    DIVIDE          reduce using rule 60 (arrays -> LBRACKET RBRACKET arrays .)
    RBRACKET        reduce using rule 60 (arrays -> LBRACKET RBRACKET arrays .)
    RPAREN          reduce using rule 60 (arrays -> LBRACKET RBRACKET arrays .)
    LOGICAL         reduce using rule 60 (arrays -> LBRACKET RBRACKET arrays .)


state 157

    (61) arrays -> LBRACKET expression RBRACKET . arrays
    (62) arrays -> LBRACKET expression RBRACKET .
    (59) arrays -> . LBRACKET RBRACKET
    (60) arrays -> . LBRACKET RBRACKET arrays
    (61) arrays -> . LBRACKET expression RBRACKET arrays
    (62) arrays -> . LBRACKET expression RBRACKET

    PLUS            reduce using rule 62 (arrays -> LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 62 (arrays -> LBRACKET expression RBRACKET .)
    ASSIGN          reduce using rule 62 (arrays -> LBRACKET expression RBRACKET .)
    IDENTIFIER      reduce using rule 62 (arrays -> LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 62 (arrays -> LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 62 (arrays -> LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 62 (arrays -> LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 62 (arrays -> LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 62 (arrays -> LBRACKET expression RBRACKET .)
    LOGICAL         reduce using rule 62 (arrays -> LBRACKET expression RBRACKET .)
    LBRACKET        shift and go to state 49

    arrays                         shift and go to state 215

state 158

    (65) assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression . SEMICOLON
    (94) expression -> expression . PLUS
    (95) expression -> expression . MINUS
    (96) expression -> expression . PLUS expression
    (97) expression -> expression . MINUS expression
    (98) expression -> expression . TIMES expression
    (99) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 216
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123
    TIMES           shift and go to state 124
    DIVIDE          shift and go to state 125


state 159

    (71) assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS . SEMICOLON

    SEMICOLON       shift and go to state 217


state 160

    (67) assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN . expression SEMICOLON
    (91) expression -> . IDENTIFIER
    (92) expression -> . NUMBER
    (93) expression -> . array_access
    (94) expression -> . expression PLUS
    (95) expression -> . expression MINUS
    (96) expression -> . expression PLUS expression
    (97) expression -> . expression MINUS expression
    (98) expression -> . expression TIMES expression
    (99) expression -> . expression DIVIDE expression
    (100) expression -> . STRING
    (101) expression -> . CHAR
    (102) expression -> . bool
    (90) array_access -> . IDENTIFIER arrays
    (63) bool -> . TRUE
    (64) bool -> . FALSE

    IDENTIFIER      shift and go to state 83
    NUMBER          shift and go to state 63
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 218
    array_access                   shift and go to state 64
    bool                           shift and go to state 67

state 161

    (68) assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN . expression SEMICOLON
    (91) expression -> . IDENTIFIER
    (92) expression -> . NUMBER
    (93) expression -> . array_access
    (94) expression -> . expression PLUS
    (95) expression -> . expression MINUS
    (96) expression -> . expression PLUS expression
    (97) expression -> . expression MINUS expression
    (98) expression -> . expression TIMES expression
    (99) expression -> . expression DIVIDE expression
    (100) expression -> . STRING
    (101) expression -> . CHAR
    (102) expression -> . bool
    (90) array_access -> . IDENTIFIER arrays
    (63) bool -> . TRUE
    (64) bool -> . FALSE

    IDENTIFIER      shift and go to state 83
    NUMBER          shift and go to state 63
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 219
    array_access                   shift and go to state 64
    bool                           shift and go to state 67

state 162

    (69) assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN . expression SEMICOLON
    (91) expression -> . IDENTIFIER
    (92) expression -> . NUMBER
    (93) expression -> . array_access
    (94) expression -> . expression PLUS
    (95) expression -> . expression MINUS
    (96) expression -> . expression PLUS expression
    (97) expression -> . expression MINUS expression
    (98) expression -> . expression TIMES expression
    (99) expression -> . expression DIVIDE expression
    (100) expression -> . STRING
    (101) expression -> . CHAR
    (102) expression -> . bool
    (90) array_access -> . IDENTIFIER arrays
    (63) bool -> . TRUE
    (64) bool -> . FALSE

    IDENTIFIER      shift and go to state 83
    NUMBER          shift and go to state 63
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 220
    array_access                   shift and go to state 64
    bool                           shift and go to state 67

state 163

    (70) assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN . expression SEMICOLON
    (91) expression -> . IDENTIFIER
    (92) expression -> . NUMBER
    (93) expression -> . array_access
    (94) expression -> . expression PLUS
    (95) expression -> . expression MINUS
    (96) expression -> . expression PLUS expression
    (97) expression -> . expression MINUS expression
    (98) expression -> . expression TIMES expression
    (99) expression -> . expression DIVIDE expression
    (100) expression -> . STRING
    (101) expression -> . CHAR
    (102) expression -> . bool
    (90) array_access -> . IDENTIFIER arrays
    (63) bool -> . TRUE
    (64) bool -> . FALSE

    IDENTIFIER      shift and go to state 83
    NUMBER          shift and go to state 63
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 221
    array_access                   shift and go to state 64
    bool                           shift and go to state 67

state 164

    (82) assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN . LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN . NEW RETURNTYPE arrays SEMICOLON

    LBRACE          shift and go to state 222
    NEW             shift and go to state 223


state 165

    (23) parameter -> RETURNTYPE . IDENTIFIER
    (24) parameter -> RETURNTYPE . LBRACKET RBRACKET IDENTIFIER

    IDENTIFIER      shift and go to state 224
    LBRACKET        shift and go to state 225


state 166

    (13) function -> RETURNTYPE IDENTIFIER LPAREN parameters . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 226


state 167

    (14) function -> RETURNTYPE IDENTIFIER LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 227


state 168

    (21) parameters -> parameter .
    (22) parameters -> parameter . COMMA parameters

    RPAREN          reduce using rule 21 (parameters -> parameter .)
    COMMA           shift and go to state 228


state 169

    (83) assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN . LBRACE items RBRACE SEMICOLON
    (87) assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN . NEW RETURNTYPE arrays SEMICOLON

    LBRACE          shift and go to state 229
    NEW             shift and go to state 230


state 170

    (80) assignment_statement -> PLUS PLUS IDENTIFIER arrays . SEMICOLON

    SEMICOLON       shift and go to state 231


state 171

    (81) assignment_statement -> MINUS MINUS IDENTIFIER arrays . SEMICOLON

    SEMICOLON       shift and go to state 232


state 172

    (88) print_statement -> SOP LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 233


state 173

    (89) print_statement -> SOP LPAREN RPAREN SEMICOLON .

    ACCESS          reduce using rule 89 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    PASS            reduce using rule 89 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 89 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    RETURNTYPE      reduce using rule 89 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 89 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    PLUS            reduce using rule 89 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    MINUS           reduce using rule 89 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    SOP             reduce using rule 89 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    THIS            reduce using rule 89 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    SWITCH          reduce using rule 89 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 89 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 89 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 89 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    TRY             reduce using rule 89 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    STATIC          reduce using rule 89 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 89 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 89 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 89 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    CASE            reduce using rule 89 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 89 (print_statement -> SOP LPAREN RPAREN SEMICOLON .)


state 174

    (6) this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 234


state 175

    (44) switch -> SWITCH LPAREN IDENTIFIER RPAREN . LBRACE cases RBRACE

    LBRACE          shift and go to state 235


state 176

    (96) expression -> expression PLUS expression .
    (94) expression -> expression . PLUS
    (95) expression -> expression . MINUS
    (96) expression -> expression . PLUS expression
    (97) expression -> expression . MINUS expression
    (98) expression -> expression . TIMES expression
    (99) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 96 (expression -> expression PLUS expression .)
    LOGICAL         reduce using rule 96 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 96 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 96 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123
    TIMES           shift and go to state 124
    DIVIDE          shift and go to state 125

  ! PLUS            [ reduce using rule 96 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 96 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 96 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 96 (expression -> expression PLUS expression .) ]


state 177

    (97) expression -> expression MINUS expression .
    (94) expression -> expression . PLUS
    (95) expression -> expression . MINUS
    (96) expression -> expression . PLUS expression
    (97) expression -> expression . MINUS expression
    (98) expression -> expression . TIMES expression
    (99) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 97 (expression -> expression MINUS expression .)
    LOGICAL         reduce using rule 97 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 97 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 97 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123
    TIMES           shift and go to state 124
    DIVIDE          shift and go to state 125

  ! PLUS            [ reduce using rule 97 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 97 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 97 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 97 (expression -> expression MINUS expression .) ]


state 178

    (98) expression -> expression TIMES expression .
    (94) expression -> expression . PLUS
    (95) expression -> expression . MINUS
    (96) expression -> expression . PLUS expression
    (97) expression -> expression . MINUS expression
    (98) expression -> expression . TIMES expression
    (99) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 98 (expression -> expression TIMES expression .)
    LOGICAL         reduce using rule 98 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 98 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 98 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123
    TIMES           shift and go to state 124
    DIVIDE          shift and go to state 125

  ! PLUS            [ reduce using rule 98 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 98 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 98 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 98 (expression -> expression TIMES expression .) ]


state 179

    (99) expression -> expression DIVIDE expression .
    (94) expression -> expression . PLUS
    (95) expression -> expression . MINUS
    (96) expression -> expression . PLUS expression
    (97) expression -> expression . MINUS expression
    (98) expression -> expression . TIMES expression
    (99) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 99 (expression -> expression DIVIDE expression .)
    LOGICAL         reduce using rule 99 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 99 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 99 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123
    TIMES           shift and go to state 124
    DIVIDE          shift and go to state 125

  ! PLUS            [ reduce using rule 99 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 99 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 99 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 99 (expression -> expression DIVIDE expression .) ]


state 180

    (49) while -> WHILE LPAREN params RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 236


state 181

    (118) for -> FOR LPAREN assignment_statement params . SEMICOLON increment RPAREN LBRACE statements RBRACE

    SEMICOLON       shift and go to state 237


state 182

    (65) assignment_statement -> RETURNTYPE IDENTIFIER . ASSIGN expression SEMICOLON
    (66) assignment_statement -> RETURNTYPE IDENTIFIER . SEMICOLON
    (67) assignment_statement -> RETURNTYPE IDENTIFIER . PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> RETURNTYPE IDENTIFIER . MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> RETURNTYPE IDENTIFIER . TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> RETURNTYPE IDENTIFIER . DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> RETURNTYPE IDENTIFIER . PLUS PLUS SEMICOLON
    (82) assignment_statement -> RETURNTYPE IDENTIFIER . arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> RETURNTYPE IDENTIFIER . arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (59) arrays -> . LBRACKET RBRACKET
    (60) arrays -> . LBRACKET RBRACKET arrays
    (61) arrays -> . LBRACKET expression RBRACKET arrays
    (62) arrays -> . LBRACKET expression RBRACKET

    ASSIGN          shift and go to state 104
    SEMICOLON       shift and go to state 105
    PLUS            shift and go to state 106
    MINUS           shift and go to state 107
    TIMES           shift and go to state 108
    DIVIDE          shift and go to state 109
    LBRACKET        shift and go to state 49

    arrays                         shift and go to state 110

state 183

    (123) try_catch -> TRY LBRACE statements RBRACE . CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> TRY LBRACE statements RBRACE . CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

    CATCH           shift and go to state 238


state 184

    (26) statements -> statement statements .

    RBRACE          reduce using rule 26 (statements -> statement statements .)
    CASE            reduce using rule 26 (statements -> statement statements .)
    DEFAULT         reduce using rule 26 (statements -> statement statements .)


state 185

    (17) function -> STATIC RETURNTYPE IDENTIFIER LPAREN . parameters RPAREN LBRACE statements RBRACE
    (18) function -> STATIC RETURNTYPE IDENTIFIER LPAREN . RPAREN LBRACE statements RBRACE
    (21) parameters -> . parameter
    (22) parameters -> . parameter COMMA parameters
    (23) parameter -> . RETURNTYPE IDENTIFIER
    (24) parameter -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER

    RPAREN          shift and go to state 240
    RETURNTYPE      shift and go to state 165

    parameters                     shift and go to state 239
    parameter                      shift and go to state 168

state 186

    (114) else -> ELSE LBRACE statements . RBRACE

    RBRACE          shift and go to state 241


state 187

    (115) else_if -> ELSE . if
    (116) else_if -> ELSE . if else_if
    (117) else_if -> ELSE . if else
    (114) else -> ELSE . LBRACE statements RBRACE
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    LBRACE          shift and go to state 133
    IF              shift and go to state 34

    if                             shift and go to state 134

state 188

    (116) else_if -> ELSE if else_if .

    ACCESS          reduce using rule 116 (else_if -> ELSE if else_if .)
    PASS            reduce using rule 116 (else_if -> ELSE if else_if .)
    BREAK           reduce using rule 116 (else_if -> ELSE if else_if .)
    RETURNTYPE      reduce using rule 116 (else_if -> ELSE if else_if .)
    IDENTIFIER      reduce using rule 116 (else_if -> ELSE if else_if .)
    PLUS            reduce using rule 116 (else_if -> ELSE if else_if .)
    MINUS           reduce using rule 116 (else_if -> ELSE if else_if .)
    SOP             reduce using rule 116 (else_if -> ELSE if else_if .)
    THIS            reduce using rule 116 (else_if -> ELSE if else_if .)
    SWITCH          reduce using rule 116 (else_if -> ELSE if else_if .)
    RETURN          reduce using rule 116 (else_if -> ELSE if else_if .)
    WHILE           reduce using rule 116 (else_if -> ELSE if else_if .)
    FOR             reduce using rule 116 (else_if -> ELSE if else_if .)
    TRY             reduce using rule 116 (else_if -> ELSE if else_if .)
    STATIC          reduce using rule 116 (else_if -> ELSE if else_if .)
    IF              reduce using rule 116 (else_if -> ELSE if else_if .)
    $end            reduce using rule 116 (else_if -> ELSE if else_if .)
    RBRACE          reduce using rule 116 (else_if -> ELSE if else_if .)
    CASE            reduce using rule 116 (else_if -> ELSE if else_if .)
    DEFAULT         reduce using rule 116 (else_if -> ELSE if else_if .)


state 189

    (117) else_if -> ELSE if else .

    ACCESS          reduce using rule 117 (else_if -> ELSE if else .)
    PASS            reduce using rule 117 (else_if -> ELSE if else .)
    BREAK           reduce using rule 117 (else_if -> ELSE if else .)
    RETURNTYPE      reduce using rule 117 (else_if -> ELSE if else .)
    IDENTIFIER      reduce using rule 117 (else_if -> ELSE if else .)
    PLUS            reduce using rule 117 (else_if -> ELSE if else .)
    MINUS           reduce using rule 117 (else_if -> ELSE if else .)
    SOP             reduce using rule 117 (else_if -> ELSE if else .)
    THIS            reduce using rule 117 (else_if -> ELSE if else .)
    SWITCH          reduce using rule 117 (else_if -> ELSE if else .)
    RETURN          reduce using rule 117 (else_if -> ELSE if else .)
    WHILE           reduce using rule 117 (else_if -> ELSE if else .)
    FOR             reduce using rule 117 (else_if -> ELSE if else .)
    TRY             reduce using rule 117 (else_if -> ELSE if else .)
    STATIC          reduce using rule 117 (else_if -> ELSE if else .)
    IF              reduce using rule 117 (else_if -> ELSE if else .)
    $end            reduce using rule 117 (else_if -> ELSE if else .)
    RBRACE          reduce using rule 117 (else_if -> ELSE if else .)
    CASE            reduce using rule 117 (else_if -> ELSE if else .)
    DEFAULT         reduce using rule 117 (else_if -> ELSE if else .)


state 190

    (113) if -> IF LPAREN params RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 242


state 191

    (11) constructor -> ACCESS . IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (12) constructor -> ACCESS . IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (39) statement -> ACCESS . assignment_statement
    (15) function -> ACCESS . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> ACCESS . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> ACCESS . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> ACCESS . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS

    IDENTIFIER      shift and go to state 243
    RETURNTYPE      shift and go to state 39
    STATIC          shift and go to state 40
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23

    assignment_statement           shift and go to state 38
    increment                      shift and go to state 24

state 192

    (5) class -> ACCESS CLASS IDENTIFIER LBRACE stats . RBRACE

    RBRACE          shift and go to state 244


state 193

    (7) stats -> stat .
    (8) stats -> stat . stats
    (7) stats -> . stat
    (8) stats -> . stat stats
    (9) stat -> . constructor
    (10) stat -> . statement
    (11) constructor -> . ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (12) constructor -> . ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (88) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (89) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (103) return -> . RETURN IDENTIFIER SEMICOLON
    (104) return -> . RETURN SEMICOLON
    (105) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (118) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (123) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (110) ifblock -> . if
    (111) ifblock -> . if else
    (112) ifblock -> . if else_if
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    RBRACE          reduce using rule 7 (stats -> stat .)
    ACCESS          shift and go to state 191
    PASS            shift and go to state 16
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 25
    THIS            shift and go to state 26
    SWITCH          shift and go to state 27
    RETURN          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    TRY             shift and go to state 31
    STATIC          shift and go to state 32
    IF              shift and go to state 34

    stat                           shift and go to state 193
    stats                          shift and go to state 245
    constructor                    shift and go to state 194
    statement                      shift and go to state 195
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    increment                      shift and go to state 24
    if                             shift and go to state 33

state 194

    (9) stat -> constructor .

    ACCESS          reduce using rule 9 (stat -> constructor .)
    PASS            reduce using rule 9 (stat -> constructor .)
    BREAK           reduce using rule 9 (stat -> constructor .)
    RETURNTYPE      reduce using rule 9 (stat -> constructor .)
    IDENTIFIER      reduce using rule 9 (stat -> constructor .)
    PLUS            reduce using rule 9 (stat -> constructor .)
    MINUS           reduce using rule 9 (stat -> constructor .)
    SOP             reduce using rule 9 (stat -> constructor .)
    THIS            reduce using rule 9 (stat -> constructor .)
    SWITCH          reduce using rule 9 (stat -> constructor .)
    RETURN          reduce using rule 9 (stat -> constructor .)
    WHILE           reduce using rule 9 (stat -> constructor .)
    FOR             reduce using rule 9 (stat -> constructor .)
    TRY             reduce using rule 9 (stat -> constructor .)
    STATIC          reduce using rule 9 (stat -> constructor .)
    IF              reduce using rule 9 (stat -> constructor .)
    RBRACE          reduce using rule 9 (stat -> constructor .)


state 195

    (10) stat -> statement .

    ACCESS          reduce using rule 10 (stat -> statement .)
    PASS            reduce using rule 10 (stat -> statement .)
    BREAK           reduce using rule 10 (stat -> statement .)
    RETURNTYPE      reduce using rule 10 (stat -> statement .)
    IDENTIFIER      reduce using rule 10 (stat -> statement .)
    PLUS            reduce using rule 10 (stat -> statement .)
    MINUS           reduce using rule 10 (stat -> statement .)
    SOP             reduce using rule 10 (stat -> statement .)
    THIS            reduce using rule 10 (stat -> statement .)
    SWITCH          reduce using rule 10 (stat -> statement .)
    RETURN          reduce using rule 10 (stat -> statement .)
    WHILE           reduce using rule 10 (stat -> statement .)
    FOR             reduce using rule 10 (stat -> statement .)
    TRY             reduce using rule 10 (stat -> statement .)
    STATIC          reduce using rule 10 (stat -> statement .)
    IF              reduce using rule 10 (stat -> statement .)
    RBRACE          reduce using rule 10 (stat -> statement .)


state 196

    (15) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 246


state 197

    (16) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 247


state 198

    (19) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN . parameters RPAREN LBRACE statements RBRACE
    (20) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN . RPAREN LBRACE statements RBRACE
    (21) parameters -> . parameter
    (22) parameters -> . parameter COMMA parameters
    (23) parameter -> . RETURNTYPE IDENTIFIER
    (24) parameter -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER

    RPAREN          shift and go to state 249
    RETURNTYPE      shift and go to state 165

    parameters                     shift and go to state 248
    parameter                      shift and go to state 168

state 199

    (55) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER . LPAREN RPAREN SEMICOLON
    (56) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER . LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER . LPAREN params RPAREN SEMICOLON
    (58) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER . LBRACKET NUMBER RBRACKET SEMICOLON

    LPAREN          shift and go to state 250
    LBRACKET        shift and go to state 251


state 200

    (73) assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 73 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 73 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 73 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 73 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 73 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 73 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 73 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 73 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 73 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 73 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 73 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 73 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 73 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 73 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 73 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    IF              reduce using rule 73 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    $end            reduce using rule 73 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 73 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 73 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 73 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 73 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 73 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 73 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 73 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 73 (assignment_statement -> IDENTIFIER PLUS ASSIGN expression SEMICOLON .)


state 201

    (74) assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 74 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 74 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 74 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 74 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 74 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 74 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 74 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 74 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 74 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 74 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 74 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 74 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 74 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 74 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 74 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    IF              reduce using rule 74 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    $end            reduce using rule 74 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 74 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 74 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 74 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 74 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 74 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 74 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 74 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 74 (assignment_statement -> IDENTIFIER MINUS ASSIGN expression SEMICOLON .)


state 202

    (75) assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 75 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 75 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 75 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 75 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 75 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 75 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 75 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 75 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 75 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 75 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 75 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 75 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 75 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 75 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 75 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    IF              reduce using rule 75 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    $end            reduce using rule 75 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 75 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 75 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 75 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 75 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 75 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 75 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 75 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 75 (assignment_statement -> IDENTIFIER TIMES ASSIGN expression SEMICOLON .)


state 203

    (76) assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 76 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 76 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 76 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 76 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 76 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 76 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 76 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 76 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 76 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 76 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 76 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 76 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 76 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 76 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 76 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    IF              reduce using rule 76 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    $end            reduce using rule 76 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 76 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 76 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 76 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 76 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 76 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 76 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 76 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 76 (assignment_statement -> IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)


state 204

    (77) assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .

    ACCESS          reduce using rule 77 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    PASS            reduce using rule 77 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    BREAK           reduce using rule 77 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    RETURNTYPE      reduce using rule 77 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    IDENTIFIER      reduce using rule 77 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    PLUS            reduce using rule 77 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    MINUS           reduce using rule 77 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    SOP             reduce using rule 77 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    THIS            reduce using rule 77 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    SWITCH          reduce using rule 77 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    RETURN          reduce using rule 77 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    WHILE           reduce using rule 77 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    FOR             reduce using rule 77 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    TRY             reduce using rule 77 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    STATIC          reduce using rule 77 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    IF              reduce using rule 77 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    $end            reduce using rule 77 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    NUMBER          reduce using rule 77 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    STRING          reduce using rule 77 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    CHAR            reduce using rule 77 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    TRUE            reduce using rule 77 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    FALSE           reduce using rule 77 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    RBRACE          reduce using rule 77 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    CASE            reduce using rule 77 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)
    DEFAULT         reduce using rule 77 (assignment_statement -> IDENTIFIER arrays PLUS PLUS SEMICOLON .)


state 205

    (79) assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .

    ACCESS          reduce using rule 79 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    PASS            reduce using rule 79 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    BREAK           reduce using rule 79 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    RETURNTYPE      reduce using rule 79 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    IDENTIFIER      reduce using rule 79 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    PLUS            reduce using rule 79 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    MINUS           reduce using rule 79 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    SOP             reduce using rule 79 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    THIS            reduce using rule 79 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    SWITCH          reduce using rule 79 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    RETURN          reduce using rule 79 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    WHILE           reduce using rule 79 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    FOR             reduce using rule 79 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    TRY             reduce using rule 79 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    STATIC          reduce using rule 79 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    IF              reduce using rule 79 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    $end            reduce using rule 79 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    NUMBER          reduce using rule 79 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    STRING          reduce using rule 79 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    CHAR            reduce using rule 79 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    TRUE            reduce using rule 79 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    FALSE           reduce using rule 79 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    RBRACE          reduce using rule 79 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    CASE            reduce using rule 79 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)
    DEFAULT         reduce using rule 79 (assignment_statement -> IDENTIFIER arrays MINUS MINUS SEMICOLON .)


state 206

    (84) assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 84 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 84 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 84 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 84 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 84 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 84 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 84 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 84 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 84 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 84 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 84 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 84 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 84 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 84 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 84 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    IF              reduce using rule 84 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    $end            reduce using rule 84 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 84 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 84 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 84 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 84 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 84 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 84 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 84 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 84 (assignment_statement -> IDENTIFIER arrays ASSIGN expression SEMICOLON .)


state 207

    (85) assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items . RBRACE SEMICOLON

    RBRACE          shift and go to state 252


state 208

    (106) items -> item .
    (107) items -> item . COMMA items

    RBRACE          reduce using rule 106 (items -> item .)
    COMMA           shift and go to state 253


state 209

    (108) item -> NUMBER .

    COMMA           reduce using rule 108 (item -> NUMBER .)
    RBRACE          reduce using rule 108 (item -> NUMBER .)


state 210

    (109) item -> CHAR .

    COMMA           reduce using rule 109 (item -> CHAR .)
    RBRACE          reduce using rule 109 (item -> CHAR .)


state 211

    (27) function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .

    ACCESS          reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    PASS            reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    BREAK           reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    RETURNTYPE      reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    PLUS            reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    MINUS           reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    SOP             reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    THIS            reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    SWITCH          reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    RETURN          reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    WHILE           reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    FOR             reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    TRY             reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    STATIC          reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    IF              reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    $end            reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    RBRACE          reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    CASE            reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 27 (function_call -> IDENTIFIER LPAREN params RPAREN SEMICOLON .)


state 212

    (51) params -> param LOGICAL params .

    RPAREN          reduce using rule 51 (params -> param LOGICAL params .)
    SEMICOLON       reduce using rule 51 (params -> param LOGICAL params .)


state 213

    (119) increment -> PLUS PLUS IDENTIFIER .

    LOGICAL         reduce using rule 119 (increment -> PLUS PLUS IDENTIFIER .)
    RPAREN          reduce using rule 119 (increment -> PLUS PLUS IDENTIFIER .)
    SEMICOLON       reduce using rule 119 (increment -> PLUS PLUS IDENTIFIER .)


state 214

    (120) increment -> MINUS MINUS IDENTIFIER .

    LOGICAL         reduce using rule 120 (increment -> MINUS MINUS IDENTIFIER .)
    RPAREN          reduce using rule 120 (increment -> MINUS MINUS IDENTIFIER .)
    SEMICOLON       reduce using rule 120 (increment -> MINUS MINUS IDENTIFIER .)


state 215

    (61) arrays -> LBRACKET expression RBRACKET arrays .

    PLUS            reduce using rule 61 (arrays -> LBRACKET expression RBRACKET arrays .)
    MINUS           reduce using rule 61 (arrays -> LBRACKET expression RBRACKET arrays .)
    ASSIGN          reduce using rule 61 (arrays -> LBRACKET expression RBRACKET arrays .)
    IDENTIFIER      reduce using rule 61 (arrays -> LBRACKET expression RBRACKET arrays .)
    SEMICOLON       reduce using rule 61 (arrays -> LBRACKET expression RBRACKET arrays .)
    TIMES           reduce using rule 61 (arrays -> LBRACKET expression RBRACKET arrays .)
    DIVIDE          reduce using rule 61 (arrays -> LBRACKET expression RBRACKET arrays .)
    RBRACKET        reduce using rule 61 (arrays -> LBRACKET expression RBRACKET arrays .)
    RPAREN          reduce using rule 61 (arrays -> LBRACKET expression RBRACKET arrays .)
    LOGICAL         reduce using rule 61 (arrays -> LBRACKET expression RBRACKET arrays .)


state 216

    (65) assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    IF              reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    $end            reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 65 (assignment_statement -> RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON .)


state 217

    (71) assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .

    ACCESS          reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    PASS            reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    BREAK           reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    RETURNTYPE      reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    IDENTIFIER      reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    PLUS            reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    MINUS           reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    SOP             reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    THIS            reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    SWITCH          reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    RETURN          reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    WHILE           reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    FOR             reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    TRY             reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    STATIC          reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    IF              reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    $end            reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    NUMBER          reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    STRING          reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    CHAR            reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    TRUE            reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    FALSE           reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    RBRACE          reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    CASE            reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)
    DEFAULT         reduce using rule 71 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON .)


state 218

    (67) assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression . SEMICOLON
    (94) expression -> expression . PLUS
    (95) expression -> expression . MINUS
    (96) expression -> expression . PLUS expression
    (97) expression -> expression . MINUS expression
    (98) expression -> expression . TIMES expression
    (99) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 254
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123
    TIMES           shift and go to state 124
    DIVIDE          shift and go to state 125


state 219

    (68) assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression . SEMICOLON
    (94) expression -> expression . PLUS
    (95) expression -> expression . MINUS
    (96) expression -> expression . PLUS expression
    (97) expression -> expression . MINUS expression
    (98) expression -> expression . TIMES expression
    (99) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 255
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123
    TIMES           shift and go to state 124
    DIVIDE          shift and go to state 125


state 220

    (69) assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression . SEMICOLON
    (94) expression -> expression . PLUS
    (95) expression -> expression . MINUS
    (96) expression -> expression . PLUS expression
    (97) expression -> expression . MINUS expression
    (98) expression -> expression . TIMES expression
    (99) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 256
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123
    TIMES           shift and go to state 124
    DIVIDE          shift and go to state 125


state 221

    (70) assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression . SEMICOLON
    (94) expression -> expression . PLUS
    (95) expression -> expression . MINUS
    (96) expression -> expression . PLUS expression
    (97) expression -> expression . MINUS expression
    (98) expression -> expression . TIMES expression
    (99) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 257
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123
    TIMES           shift and go to state 124
    DIVIDE          shift and go to state 125


state 222

    (82) assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE . items RBRACE SEMICOLON
    (106) items -> . item
    (107) items -> . item COMMA items
    (108) item -> . NUMBER
    (109) item -> . CHAR

    NUMBER          shift and go to state 209
    CHAR            shift and go to state 210

    items                          shift and go to state 258
    item                           shift and go to state 208

state 223

    (86) assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW . RETURNTYPE arrays SEMICOLON

    RETURNTYPE      shift and go to state 259


state 224

    (23) parameter -> RETURNTYPE IDENTIFIER .

    COMMA           reduce using rule 23 (parameter -> RETURNTYPE IDENTIFIER .)
    RPAREN          reduce using rule 23 (parameter -> RETURNTYPE IDENTIFIER .)


state 225

    (24) parameter -> RETURNTYPE LBRACKET . RBRACKET IDENTIFIER

    RBRACKET        shift and go to state 260


state 226

    (13) function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 261


state 227

    (14) function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (88) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (89) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (103) return -> . RETURN IDENTIFIER SEMICOLON
    (104) return -> . RETURN SEMICOLON
    (105) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (118) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (123) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (110) ifblock -> . if
    (111) ifblock -> . if else
    (112) ifblock -> . if else_if
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 131
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 25
    THIS            shift and go to state 26
    SWITCH          shift and go to state 27
    RETURN          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    TRY             shift and go to state 31
    STATIC          shift and go to state 32
    IF              shift and go to state 34

    statements                     shift and go to state 262
    statement                      shift and go to state 130
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    increment                      shift and go to state 24
    if                             shift and go to state 33

state 228

    (22) parameters -> parameter COMMA . parameters
    (21) parameters -> . parameter
    (22) parameters -> . parameter COMMA parameters
    (23) parameter -> . RETURNTYPE IDENTIFIER
    (24) parameter -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER

    RETURNTYPE      shift and go to state 165

    parameter                      shift and go to state 168
    parameters                     shift and go to state 263

state 229

    (83) assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE . items RBRACE SEMICOLON
    (106) items -> . item
    (107) items -> . item COMMA items
    (108) item -> . NUMBER
    (109) item -> . CHAR

    NUMBER          shift and go to state 209
    CHAR            shift and go to state 210

    items                          shift and go to state 264
    item                           shift and go to state 208

state 230

    (87) assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW . RETURNTYPE arrays SEMICOLON

    RETURNTYPE      shift and go to state 265


state 231

    (80) assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .

    ACCESS          reduce using rule 80 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    PASS            reduce using rule 80 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    BREAK           reduce using rule 80 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    RETURNTYPE      reduce using rule 80 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    IDENTIFIER      reduce using rule 80 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    PLUS            reduce using rule 80 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    MINUS           reduce using rule 80 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    SOP             reduce using rule 80 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    THIS            reduce using rule 80 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    SWITCH          reduce using rule 80 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    RETURN          reduce using rule 80 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    WHILE           reduce using rule 80 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    FOR             reduce using rule 80 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    TRY             reduce using rule 80 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    STATIC          reduce using rule 80 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    IF              reduce using rule 80 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    $end            reduce using rule 80 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    NUMBER          reduce using rule 80 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    STRING          reduce using rule 80 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    CHAR            reduce using rule 80 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    TRUE            reduce using rule 80 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    FALSE           reduce using rule 80 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    RBRACE          reduce using rule 80 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    CASE            reduce using rule 80 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)
    DEFAULT         reduce using rule 80 (assignment_statement -> PLUS PLUS IDENTIFIER arrays SEMICOLON .)


state 232

    (81) assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .

    ACCESS          reduce using rule 81 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    PASS            reduce using rule 81 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    BREAK           reduce using rule 81 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    RETURNTYPE      reduce using rule 81 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    IDENTIFIER      reduce using rule 81 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    PLUS            reduce using rule 81 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    MINUS           reduce using rule 81 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    SOP             reduce using rule 81 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    THIS            reduce using rule 81 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    SWITCH          reduce using rule 81 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    RETURN          reduce using rule 81 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    WHILE           reduce using rule 81 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    FOR             reduce using rule 81 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    TRY             reduce using rule 81 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    STATIC          reduce using rule 81 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    IF              reduce using rule 81 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    $end            reduce using rule 81 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    NUMBER          reduce using rule 81 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    STRING          reduce using rule 81 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    CHAR            reduce using rule 81 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    TRUE            reduce using rule 81 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    FALSE           reduce using rule 81 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    RBRACE          reduce using rule 81 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    CASE            reduce using rule 81 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)
    DEFAULT         reduce using rule 81 (assignment_statement -> MINUS MINUS IDENTIFIER arrays SEMICOLON .)


state 233

    (88) print_statement -> SOP LPAREN expression RPAREN SEMICOLON .

    ACCESS          reduce using rule 88 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    PASS            reduce using rule 88 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    BREAK           reduce using rule 88 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    RETURNTYPE      reduce using rule 88 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 88 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    PLUS            reduce using rule 88 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    MINUS           reduce using rule 88 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    SOP             reduce using rule 88 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    THIS            reduce using rule 88 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    SWITCH          reduce using rule 88 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 88 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 88 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 88 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    TRY             reduce using rule 88 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    STATIC          reduce using rule 88 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 88 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 88 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 88 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    CASE            reduce using rule 88 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 88 (print_statement -> SOP LPAREN expression RPAREN SEMICOLON .)


state 234

    (6) this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .

    ACCESS          reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    PASS            reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    BREAK           reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    RETURNTYPE      reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    PLUS            reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    MINUS           reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    SOP             reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    THIS            reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    SWITCH          reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    TRY             reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    STATIC          reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    IF              reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    $end            reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    CASE            reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)
    DEFAULT         reduce using rule 6 (this_assign -> THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON .)


state 235

    (44) switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE . cases RBRACE
    (45) cases -> . case
    (46) cases -> . case cases
    (47) case -> . CASE NUMBER COLON statements
    (48) case -> . DEFAULT COLON statements

    CASE            shift and go to state 268
    DEFAULT         shift and go to state 269

    cases                          shift and go to state 266
    case                           shift and go to state 267

state 236

    (49) while -> WHILE LPAREN params RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (88) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (89) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (103) return -> . RETURN IDENTIFIER SEMICOLON
    (104) return -> . RETURN SEMICOLON
    (105) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (118) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (123) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (110) ifblock -> . if
    (111) ifblock -> . if else
    (112) ifblock -> . if else_if
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 131
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 25
    THIS            shift and go to state 26
    SWITCH          shift and go to state 27
    RETURN          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    TRY             shift and go to state 31
    STATIC          shift and go to state 32
    IF              shift and go to state 34

    statements                     shift and go to state 270
    statement                      shift and go to state 130
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    increment                      shift and go to state 24
    if                             shift and go to state 33

state 237

    (118) for -> FOR LPAREN assignment_statement params SEMICOLON . increment RPAREN LBRACE statements RBRACE
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS

    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    IDENTIFIER      shift and go to state 272

    increment                      shift and go to state 271

state 238

    (123) try_catch -> TRY LBRACE statements RBRACE CATCH . LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> TRY LBRACE statements RBRACE CATCH . LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

    LPAREN          shift and go to state 273


state 239

    (17) function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 274


state 240

    (18) function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 275


state 241

    (114) else -> ELSE LBRACE statements RBRACE .

    ACCESS          reduce using rule 114 (else -> ELSE LBRACE statements RBRACE .)
    PASS            reduce using rule 114 (else -> ELSE LBRACE statements RBRACE .)
    BREAK           reduce using rule 114 (else -> ELSE LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 114 (else -> ELSE LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 114 (else -> ELSE LBRACE statements RBRACE .)
    PLUS            reduce using rule 114 (else -> ELSE LBRACE statements RBRACE .)
    MINUS           reduce using rule 114 (else -> ELSE LBRACE statements RBRACE .)
    SOP             reduce using rule 114 (else -> ELSE LBRACE statements RBRACE .)
    THIS            reduce using rule 114 (else -> ELSE LBRACE statements RBRACE .)
    SWITCH          reduce using rule 114 (else -> ELSE LBRACE statements RBRACE .)
    RETURN          reduce using rule 114 (else -> ELSE LBRACE statements RBRACE .)
    WHILE           reduce using rule 114 (else -> ELSE LBRACE statements RBRACE .)
    FOR             reduce using rule 114 (else -> ELSE LBRACE statements RBRACE .)
    TRY             reduce using rule 114 (else -> ELSE LBRACE statements RBRACE .)
    STATIC          reduce using rule 114 (else -> ELSE LBRACE statements RBRACE .)
    IF              reduce using rule 114 (else -> ELSE LBRACE statements RBRACE .)
    $end            reduce using rule 114 (else -> ELSE LBRACE statements RBRACE .)
    RBRACE          reduce using rule 114 (else -> ELSE LBRACE statements RBRACE .)
    CASE            reduce using rule 114 (else -> ELSE LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 114 (else -> ELSE LBRACE statements RBRACE .)


state 242

    (113) if -> IF LPAREN params RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (88) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (89) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (103) return -> . RETURN IDENTIFIER SEMICOLON
    (104) return -> . RETURN SEMICOLON
    (105) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (118) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (123) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (110) ifblock -> . if
    (111) ifblock -> . if else
    (112) ifblock -> . if else_if
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 131
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 25
    THIS            shift and go to state 26
    SWITCH          shift and go to state 27
    RETURN          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    TRY             shift and go to state 31
    STATIC          shift and go to state 32
    IF              shift and go to state 34

    statements                     shift and go to state 276
    statement                      shift and go to state 130
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    increment                      shift and go to state 24
    if                             shift and go to state 33

state 243

    (11) constructor -> ACCESS IDENTIFIER . LPAREN parameters RPAREN LBRACE statements RBRACE
    (12) constructor -> ACCESS IDENTIFIER . LPAREN RPAREN LBRACE statements RBRACE
    (72) assignment_statement -> IDENTIFIER . ASSIGN expression SEMICOLON
    (73) assignment_statement -> IDENTIFIER . PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> IDENTIFIER . MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> IDENTIFIER . TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> IDENTIFIER . DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> IDENTIFIER . arrays PLUS PLUS SEMICOLON
    (79) assignment_statement -> IDENTIFIER . arrays MINUS MINUS SEMICOLON
    (84) assignment_statement -> IDENTIFIER . arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> IDENTIFIER . arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (121) increment -> IDENTIFIER . PLUS PLUS
    (122) increment -> IDENTIFIER . MINUS MINUS
    (59) arrays -> . LBRACKET RBRACKET
    (60) arrays -> . LBRACKET RBRACKET arrays
    (61) arrays -> . LBRACKET expression RBRACKET arrays
    (62) arrays -> . LBRACKET expression RBRACKET

    LPAREN          shift and go to state 277
    ASSIGN          shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    LBRACKET        shift and go to state 49

    arrays                         shift and go to state 47

state 244

    (5) class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .

    ACCESS          reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    PASS            reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    BREAK           reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    RETURNTYPE      reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    IDENTIFIER      reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    PLUS            reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    MINUS           reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    SOP             reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    THIS            reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    SWITCH          reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    RETURN          reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    WHILE           reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    FOR             reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    TRY             reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    STATIC          reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    IF              reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)
    $end            reduce using rule 5 (class -> ACCESS CLASS IDENTIFIER LBRACE stats RBRACE .)


state 245

    (8) stats -> stat stats .

    RBRACE          reduce using rule 8 (stats -> stat stats .)


state 246

    (15) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 278


state 247

    (16) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (88) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (89) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (103) return -> . RETURN IDENTIFIER SEMICOLON
    (104) return -> . RETURN SEMICOLON
    (105) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (118) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (123) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (110) ifblock -> . if
    (111) ifblock -> . if else
    (112) ifblock -> . if else_if
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 131
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 25
    THIS            shift and go to state 26
    SWITCH          shift and go to state 27
    RETURN          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    TRY             shift and go to state 31
    STATIC          shift and go to state 32
    IF              shift and go to state 34

    statements                     shift and go to state 279
    statement                      shift and go to state 130
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    increment                      shift and go to state 24
    if                             shift and go to state 33

state 248

    (19) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 280


state 249

    (20) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 281


state 250

    (55) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN . RPAREN SEMICOLON
    (57) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN . params RPAREN SEMICOLON
    (50) params -> . param
    (51) params -> . param LOGICAL params
    (52) param -> . increment
    (53) param -> . expression
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (91) expression -> . IDENTIFIER
    (92) expression -> . NUMBER
    (93) expression -> . array_access
    (94) expression -> . expression PLUS
    (95) expression -> . expression MINUS
    (96) expression -> . expression PLUS expression
    (97) expression -> . expression MINUS expression
    (98) expression -> . expression TIMES expression
    (99) expression -> . expression DIVIDE expression
    (100) expression -> . STRING
    (101) expression -> . CHAR
    (102) expression -> . bool
    (90) array_access -> . IDENTIFIER arrays
    (63) bool -> . TRUE
    (64) bool -> . FALSE

    RPAREN          shift and go to state 282
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    IDENTIFIER      shift and go to state 94
    NUMBER          shift and go to state 63
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    params                         shift and go to state 283
    param                          shift and go to state 97
    increment                      shift and go to state 98
    expression                     shift and go to state 99
    array_access                   shift and go to state 64
    bool                           shift and go to state 67

state 251

    (56) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET . RBRACKET SEMICOLON
    (58) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET . NUMBER RBRACKET SEMICOLON

    RBRACKET        shift and go to state 284
    NUMBER          shift and go to state 285


state 252

    (85) assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 286


state 253

    (107) items -> item COMMA . items
    (106) items -> . item
    (107) items -> . item COMMA items
    (108) item -> . NUMBER
    (109) item -> . CHAR

    NUMBER          shift and go to state 209
    CHAR            shift and go to state 210

    item                           shift and go to state 208
    items                          shift and go to state 287

state 254

    (67) assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 67 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 67 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 67 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 67 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 67 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 67 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 67 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 67 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 67 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 67 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 67 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 67 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 67 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 67 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 67 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    IF              reduce using rule 67 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    $end            reduce using rule 67 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 67 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 67 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 67 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 67 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 67 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 67 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 67 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 67 (assignment_statement -> RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON .)


state 255

    (68) assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    IF              reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    $end            reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 68 (assignment_statement -> RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON .)


state 256

    (69) assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    IF              reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    $end            reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 69 (assignment_statement -> RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON .)


state 257

    (70) assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .

    ACCESS          reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    PASS            reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    RETURNTYPE      reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    PLUS            reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    SOP             reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    THIS            reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    SWITCH          reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    TRY             reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    IF              reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    $end            reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    CASE            reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)
    DEFAULT         reduce using rule 70 (assignment_statement -> RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON .)


state 258

    (82) assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items . RBRACE SEMICOLON

    RBRACE          shift and go to state 288


state 259

    (86) assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE . arrays SEMICOLON
    (59) arrays -> . LBRACKET RBRACKET
    (60) arrays -> . LBRACKET RBRACKET arrays
    (61) arrays -> . LBRACKET expression RBRACKET arrays
    (62) arrays -> . LBRACKET expression RBRACKET

    LBRACKET        shift and go to state 49

    arrays                         shift and go to state 289

state 260

    (24) parameter -> RETURNTYPE LBRACKET RBRACKET . IDENTIFIER

    IDENTIFIER      shift and go to state 290


state 261

    (13) function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (88) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (89) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (103) return -> . RETURN IDENTIFIER SEMICOLON
    (104) return -> . RETURN SEMICOLON
    (105) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (118) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (123) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (110) ifblock -> . if
    (111) ifblock -> . if else
    (112) ifblock -> . if else_if
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 131
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 25
    THIS            shift and go to state 26
    SWITCH          shift and go to state 27
    RETURN          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    TRY             shift and go to state 31
    STATIC          shift and go to state 32
    IF              shift and go to state 34

    statements                     shift and go to state 291
    statement                      shift and go to state 130
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    increment                      shift and go to state 24
    if                             shift and go to state 33

state 262

    (14) function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 292


state 263

    (22) parameters -> parameter COMMA parameters .

    RPAREN          reduce using rule 22 (parameters -> parameter COMMA parameters .)


state 264

    (83) assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items . RBRACE SEMICOLON

    RBRACE          shift and go to state 293


state 265

    (87) assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE . arrays SEMICOLON
    (59) arrays -> . LBRACKET RBRACKET
    (60) arrays -> . LBRACKET RBRACKET arrays
    (61) arrays -> . LBRACKET expression RBRACKET arrays
    (62) arrays -> . LBRACKET expression RBRACKET

    LBRACKET        shift and go to state 49

    arrays                         shift and go to state 294

state 266

    (44) switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases . RBRACE

    RBRACE          shift and go to state 295


state 267

    (45) cases -> case .
    (46) cases -> case . cases
    (45) cases -> . case
    (46) cases -> . case cases
    (47) case -> . CASE NUMBER COLON statements
    (48) case -> . DEFAULT COLON statements

    RBRACE          reduce using rule 45 (cases -> case .)
    CASE            shift and go to state 268
    DEFAULT         shift and go to state 269

    case                           shift and go to state 267
    cases                          shift and go to state 296

state 268

    (47) case -> CASE . NUMBER COLON statements

    NUMBER          shift and go to state 297


state 269

    (48) case -> DEFAULT . COLON statements

    COLON           shift and go to state 298


state 270

    (49) while -> WHILE LPAREN params RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 299


state 271

    (118) for -> FOR LPAREN assignment_statement params SEMICOLON increment . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 300


state 272

    (121) increment -> IDENTIFIER . PLUS PLUS
    (122) increment -> IDENTIFIER . MINUS MINUS

    PLUS            shift and go to state 149
    MINUS           shift and go to state 150


state 273

    (123) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN . IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN . IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

    IDENTIFIER      shift and go to state 301


state 274

    (17) function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 302


state 275

    (18) function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (88) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (89) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (103) return -> . RETURN IDENTIFIER SEMICOLON
    (104) return -> . RETURN SEMICOLON
    (105) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (118) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (123) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (110) ifblock -> . if
    (111) ifblock -> . if else
    (112) ifblock -> . if else_if
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 131
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 25
    THIS            shift and go to state 26
    SWITCH          shift and go to state 27
    RETURN          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    TRY             shift and go to state 31
    STATIC          shift and go to state 32
    IF              shift and go to state 34

    statements                     shift and go to state 303
    statement                      shift and go to state 130
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    increment                      shift and go to state 24
    if                             shift and go to state 33

state 276

    (113) if -> IF LPAREN params RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 304


state 277

    (11) constructor -> ACCESS IDENTIFIER LPAREN . parameters RPAREN LBRACE statements RBRACE
    (12) constructor -> ACCESS IDENTIFIER LPAREN . RPAREN LBRACE statements RBRACE
    (21) parameters -> . parameter
    (22) parameters -> . parameter COMMA parameters
    (23) parameter -> . RETURNTYPE IDENTIFIER
    (24) parameter -> . RETURNTYPE LBRACKET RBRACKET IDENTIFIER

    RPAREN          shift and go to state 306
    RETURNTYPE      shift and go to state 165

    parameters                     shift and go to state 305
    parameter                      shift and go to state 168

state 278

    (15) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (88) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (89) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (103) return -> . RETURN IDENTIFIER SEMICOLON
    (104) return -> . RETURN SEMICOLON
    (105) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (118) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (123) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (110) ifblock -> . if
    (111) ifblock -> . if else
    (112) ifblock -> . if else_if
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 131
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 25
    THIS            shift and go to state 26
    SWITCH          shift and go to state 27
    RETURN          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    TRY             shift and go to state 31
    STATIC          shift and go to state 32
    IF              shift and go to state 34

    statements                     shift and go to state 307
    statement                      shift and go to state 130
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    increment                      shift and go to state 24
    if                             shift and go to state 33

state 279

    (16) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 308


state 280

    (19) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 309


state 281

    (20) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (88) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (89) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (103) return -> . RETURN IDENTIFIER SEMICOLON
    (104) return -> . RETURN SEMICOLON
    (105) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (118) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (123) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (110) ifblock -> . if
    (111) ifblock -> . if else
    (112) ifblock -> . if else_if
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 131
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 25
    THIS            shift and go to state 26
    SWITCH          shift and go to state 27
    RETURN          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    TRY             shift and go to state 31
    STATIC          shift and go to state 32
    IF              shift and go to state 34

    statements                     shift and go to state 310
    statement                      shift and go to state 130
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    increment                      shift and go to state 24
    if                             shift and go to state 33

state 282

    (55) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 311


state 283

    (57) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params . RPAREN SEMICOLON

    RPAREN          shift and go to state 312


state 284

    (56) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 313


state 285

    (58) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 314


state 286

    (85) assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .

    ACCESS          reduce using rule 85 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    PASS            reduce using rule 85 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    BREAK           reduce using rule 85 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    RETURNTYPE      reduce using rule 85 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    IDENTIFIER      reduce using rule 85 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    PLUS            reduce using rule 85 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    MINUS           reduce using rule 85 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    SOP             reduce using rule 85 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    THIS            reduce using rule 85 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    SWITCH          reduce using rule 85 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    RETURN          reduce using rule 85 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    WHILE           reduce using rule 85 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    FOR             reduce using rule 85 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    TRY             reduce using rule 85 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    STATIC          reduce using rule 85 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    IF              reduce using rule 85 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    $end            reduce using rule 85 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    NUMBER          reduce using rule 85 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    STRING          reduce using rule 85 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    CHAR            reduce using rule 85 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    TRUE            reduce using rule 85 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    FALSE           reduce using rule 85 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    RBRACE          reduce using rule 85 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    CASE            reduce using rule 85 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    DEFAULT         reduce using rule 85 (assignment_statement -> IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)


state 287

    (107) items -> item COMMA items .

    RBRACE          reduce using rule 107 (items -> item COMMA items .)


state 288

    (82) assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 315


state 289

    (86) assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays . SEMICOLON

    SEMICOLON       shift and go to state 316


state 290

    (24) parameter -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER .

    COMMA           reduce using rule 24 (parameter -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER .)
    RPAREN          reduce using rule 24 (parameter -> RETURNTYPE LBRACKET RBRACKET IDENTIFIER .)


state 291

    (13) function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 317


state 292

    (14) function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 14 (function -> RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)


state 293

    (83) assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 318


state 294

    (87) assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays . SEMICOLON

    SEMICOLON       shift and go to state 319


state 295

    (44) switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .

    ACCESS          reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    PASS            reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    BREAK           reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    RETURNTYPE      reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    IDENTIFIER      reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    PLUS            reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    MINUS           reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    SOP             reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    THIS            reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    SWITCH          reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    RETURN          reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    WHILE           reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    FOR             reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    TRY             reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    STATIC          reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    IF              reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    $end            reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    RBRACE          reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    CASE            reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)
    DEFAULT         reduce using rule 44 (switch -> SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE .)


state 296

    (46) cases -> case cases .

    RBRACE          reduce using rule 46 (cases -> case cases .)


state 297

    (47) case -> CASE NUMBER . COLON statements

    COLON           shift and go to state 320


state 298

    (48) case -> DEFAULT COLON . statements
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (88) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (89) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (103) return -> . RETURN IDENTIFIER SEMICOLON
    (104) return -> . RETURN SEMICOLON
    (105) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (118) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (123) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (110) ifblock -> . if
    (111) ifblock -> . if else
    (112) ifblock -> . if else_if
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 131
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 25
    THIS            shift and go to state 26
    SWITCH          shift and go to state 27
    RETURN          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    TRY             shift and go to state 31
    STATIC          shift and go to state 32
    IF              shift and go to state 34

    statements                     shift and go to state 321
    statement                      shift and go to state 130
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    increment                      shift and go to state 24
    if                             shift and go to state 33

state 299

    (49) while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 49 (while -> WHILE LPAREN params RPAREN LBRACE statements RBRACE .)


state 300

    (118) for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 322


state 301

    (123) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER . IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER . IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

    IDENTIFIER      shift and go to state 323


state 302

    (17) function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (88) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (89) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (103) return -> . RETURN IDENTIFIER SEMICOLON
    (104) return -> . RETURN SEMICOLON
    (105) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (118) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (123) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (110) ifblock -> . if
    (111) ifblock -> . if else
    (112) ifblock -> . if else_if
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 131
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 25
    THIS            shift and go to state 26
    SWITCH          shift and go to state 27
    RETURN          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    TRY             shift and go to state 31
    STATIC          shift and go to state 32
    IF              shift and go to state 34

    statements                     shift and go to state 324
    statement                      shift and go to state 130
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    increment                      shift and go to state 24
    if                             shift and go to state 33

state 303

    (18) function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 325


state 304

    (113) if -> IF LPAREN params RPAREN LBRACE statements RBRACE .

    ELSE            reduce using rule 113 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    ACCESS          reduce using rule 113 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 113 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 113 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 113 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 113 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 113 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 113 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 113 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 113 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 113 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 113 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 113 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 113 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 113 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 113 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 113 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 113 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 113 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 113 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 113 (if -> IF LPAREN params RPAREN LBRACE statements RBRACE .)


state 305

    (11) constructor -> ACCESS IDENTIFIER LPAREN parameters . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 326


state 306

    (12) constructor -> ACCESS IDENTIFIER LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 327


state 307

    (15) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 328


state 308

    (16) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 16 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)


state 309

    (19) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (88) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (89) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (103) return -> . RETURN IDENTIFIER SEMICOLON
    (104) return -> . RETURN SEMICOLON
    (105) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (118) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (123) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (110) ifblock -> . if
    (111) ifblock -> . if else
    (112) ifblock -> . if else_if
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 131
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 25
    THIS            shift and go to state 26
    SWITCH          shift and go to state 27
    RETURN          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    TRY             shift and go to state 31
    STATIC          shift and go to state 32
    IF              shift and go to state 34

    statements                     shift and go to state 329
    statement                      shift and go to state 130
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    increment                      shift and go to state 24
    if                             shift and go to state 33

state 310

    (20) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 330


state 311

    (55) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .

    ACCESS          reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    PASS            reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    RETURNTYPE      reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    PLUS            reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    MINUS           reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    SOP             reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    THIS            reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    SWITCH          reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    TRY             reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    STATIC          reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    CASE            reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 55 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON .)


state 312

    (57) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 331


state 313

    (56) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .

    ACCESS          reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    PASS            reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    BREAK           reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    RETURNTYPE      reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    PLUS            reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    MINUS           reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SOP             reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    THIS            reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SWITCH          reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    RETURN          reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    WHILE           reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    FOR             reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    TRY             reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    STATIC          reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    IF              reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    $end            reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    CASE            reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    DEFAULT         reduce using rule 56 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON .)


state 314

    (58) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 332


state 315

    (82) assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .

    ACCESS          reduce using rule 82 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    PASS            reduce using rule 82 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    BREAK           reduce using rule 82 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    RETURNTYPE      reduce using rule 82 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    IDENTIFIER      reduce using rule 82 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    PLUS            reduce using rule 82 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    MINUS           reduce using rule 82 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    SOP             reduce using rule 82 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    THIS            reduce using rule 82 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    SWITCH          reduce using rule 82 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    RETURN          reduce using rule 82 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    WHILE           reduce using rule 82 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    FOR             reduce using rule 82 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    TRY             reduce using rule 82 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    STATIC          reduce using rule 82 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    IF              reduce using rule 82 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    $end            reduce using rule 82 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    NUMBER          reduce using rule 82 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    STRING          reduce using rule 82 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    CHAR            reduce using rule 82 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    TRUE            reduce using rule 82 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    FALSE           reduce using rule 82 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    RBRACE          reduce using rule 82 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    CASE            reduce using rule 82 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)
    DEFAULT         reduce using rule 82 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON .)


state 316

    (86) assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .

    ACCESS          reduce using rule 86 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    PASS            reduce using rule 86 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    BREAK           reduce using rule 86 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    RETURNTYPE      reduce using rule 86 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    IDENTIFIER      reduce using rule 86 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    PLUS            reduce using rule 86 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    MINUS           reduce using rule 86 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    SOP             reduce using rule 86 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    THIS            reduce using rule 86 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    SWITCH          reduce using rule 86 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    RETURN          reduce using rule 86 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    WHILE           reduce using rule 86 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    FOR             reduce using rule 86 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    TRY             reduce using rule 86 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    STATIC          reduce using rule 86 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    IF              reduce using rule 86 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    $end            reduce using rule 86 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    NUMBER          reduce using rule 86 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    STRING          reduce using rule 86 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    CHAR            reduce using rule 86 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    TRUE            reduce using rule 86 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    FALSE           reduce using rule 86 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    RBRACE          reduce using rule 86 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    CASE            reduce using rule 86 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    DEFAULT         reduce using rule 86 (assignment_statement -> RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON .)


state 317

    (13) function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 13 (function -> RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 318

    (83) assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .

    ACCESS          reduce using rule 83 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    PASS            reduce using rule 83 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    BREAK           reduce using rule 83 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    RETURNTYPE      reduce using rule 83 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    IDENTIFIER      reduce using rule 83 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    PLUS            reduce using rule 83 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    MINUS           reduce using rule 83 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    SOP             reduce using rule 83 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    THIS            reduce using rule 83 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    SWITCH          reduce using rule 83 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    RETURN          reduce using rule 83 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    WHILE           reduce using rule 83 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    FOR             reduce using rule 83 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    TRY             reduce using rule 83 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    STATIC          reduce using rule 83 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    IF              reduce using rule 83 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    $end            reduce using rule 83 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    NUMBER          reduce using rule 83 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    STRING          reduce using rule 83 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    CHAR            reduce using rule 83 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    TRUE            reduce using rule 83 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    FALSE           reduce using rule 83 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    RBRACE          reduce using rule 83 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    CASE            reduce using rule 83 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)
    DEFAULT         reduce using rule 83 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON .)


state 319

    (87) assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .

    ACCESS          reduce using rule 87 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    PASS            reduce using rule 87 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    BREAK           reduce using rule 87 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    RETURNTYPE      reduce using rule 87 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    IDENTIFIER      reduce using rule 87 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    PLUS            reduce using rule 87 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    MINUS           reduce using rule 87 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    SOP             reduce using rule 87 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    THIS            reduce using rule 87 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    SWITCH          reduce using rule 87 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    RETURN          reduce using rule 87 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    WHILE           reduce using rule 87 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    FOR             reduce using rule 87 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    TRY             reduce using rule 87 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    STATIC          reduce using rule 87 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    IF              reduce using rule 87 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    $end            reduce using rule 87 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    NUMBER          reduce using rule 87 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    STRING          reduce using rule 87 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    CHAR            reduce using rule 87 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    TRUE            reduce using rule 87 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    FALSE           reduce using rule 87 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    RBRACE          reduce using rule 87 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    CASE            reduce using rule 87 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)
    DEFAULT         reduce using rule 87 (assignment_statement -> RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON .)


state 320

    (47) case -> CASE NUMBER COLON . statements
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (88) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (89) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (103) return -> . RETURN IDENTIFIER SEMICOLON
    (104) return -> . RETURN SEMICOLON
    (105) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (118) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (123) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (110) ifblock -> . if
    (111) ifblock -> . if else
    (112) ifblock -> . if else_if
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 131
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 25
    THIS            shift and go to state 26
    SWITCH          shift and go to state 27
    RETURN          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    TRY             shift and go to state 31
    STATIC          shift and go to state 32
    IF              shift and go to state 34

    statements                     shift and go to state 333
    statement                      shift and go to state 130
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    increment                      shift and go to state 24
    if                             shift and go to state 33

state 321

    (48) case -> DEFAULT COLON statements .

    CASE            reduce using rule 48 (case -> DEFAULT COLON statements .)
    DEFAULT         reduce using rule 48 (case -> DEFAULT COLON statements .)
    RBRACE          reduce using rule 48 (case -> DEFAULT COLON statements .)


state 322

    (118) for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (88) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (89) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (103) return -> . RETURN IDENTIFIER SEMICOLON
    (104) return -> . RETURN SEMICOLON
    (105) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (118) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (123) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (110) ifblock -> . if
    (111) ifblock -> . if else
    (112) ifblock -> . if else_if
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 131
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 25
    THIS            shift and go to state 26
    SWITCH          shift and go to state 27
    RETURN          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    TRY             shift and go to state 31
    STATIC          shift and go to state 32
    IF              shift and go to state 34

    assignment_statement           shift and go to state 7
    increment                      shift and go to state 24
    statements                     shift and go to state 334
    statement                      shift and go to state 130
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    if                             shift and go to state 33

state 323

    (123) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER . RPAREN LBRACE statements RBRACE
    (124) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER . RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

    RPAREN          shift and go to state 335


state 324

    (17) function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 336


state 325

    (18) function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 18 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)


state 326

    (11) constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 337


state 327

    (12) constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (88) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (89) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (103) return -> . RETURN IDENTIFIER SEMICOLON
    (104) return -> . RETURN SEMICOLON
    (105) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (118) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (123) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (110) ifblock -> . if
    (111) ifblock -> . if else
    (112) ifblock -> . if else_if
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 131
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 25
    THIS            shift and go to state 26
    SWITCH          shift and go to state 27
    RETURN          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    TRY             shift and go to state 31
    STATIC          shift and go to state 32
    IF              shift and go to state 34

    statements                     shift and go to state 338
    statement                      shift and go to state 130
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    increment                      shift and go to state 24
    if                             shift and go to state 33

state 328

    (15) function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 15 (function -> ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 329

    (19) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 339


state 330

    (20) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 20 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)


state 331

    (57) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .

    ACCESS          reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    PASS            reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    BREAK           reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    RETURNTYPE      reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    PLUS            reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    MINUS           reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    SOP             reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    THIS            reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    SWITCH          reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    RETURN          reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    WHILE           reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    FOR             reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    TRY             reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    STATIC          reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    IF              reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    $end            reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    RBRACE          reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    CASE            reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 57 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON .)


state 332

    (58) class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .

    ACCESS          reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    PASS            reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    BREAK           reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    RETURNTYPE      reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    PLUS            reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    MINUS           reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    SOP             reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    THIS            reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    SWITCH          reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    RETURN          reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    WHILE           reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    FOR             reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    TRY             reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    STATIC          reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    IF              reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    $end            reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    CASE            reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)
    DEFAULT         reduce using rule 58 (class_statement -> IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON .)


state 333

    (47) case -> CASE NUMBER COLON statements .

    CASE            reduce using rule 47 (case -> CASE NUMBER COLON statements .)
    DEFAULT         reduce using rule 47 (case -> CASE NUMBER COLON statements .)
    RBRACE          reduce using rule 47 (case -> CASE NUMBER COLON statements .)


state 334

    (118) for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 340


state 335

    (123) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN . LBRACE statements RBRACE
    (124) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN . LBRACE statements RBRACE FINALLY LBRACE statements RBRACE

    LBRACE          shift and go to state 341


state 336

    (17) function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 17 (function -> STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 337

    (11) constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (88) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (89) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (103) return -> . RETURN IDENTIFIER SEMICOLON
    (104) return -> . RETURN SEMICOLON
    (105) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (118) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (123) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (110) ifblock -> . if
    (111) ifblock -> . if else
    (112) ifblock -> . if else_if
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 131
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 25
    THIS            shift and go to state 26
    SWITCH          shift and go to state 27
    RETURN          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    TRY             shift and go to state 31
    STATIC          shift and go to state 32
    IF              shift and go to state 34

    statements                     shift and go to state 342
    statement                      shift and go to state 130
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    increment                      shift and go to state 24
    if                             shift and go to state 33

state 338

    (12) constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 343


state 339

    (19) function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 19 (function -> ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 340

    (118) for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 118 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 118 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 118 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 118 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 118 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 118 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 118 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 118 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 118 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 118 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 118 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 118 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 118 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 118 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 118 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 118 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 118 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 118 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 118 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 118 (for -> FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE .)


state 341

    (123) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE . statements RBRACE
    (124) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE . statements RBRACE FINALLY LBRACE statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (88) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (89) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (103) return -> . RETURN IDENTIFIER SEMICOLON
    (104) return -> . RETURN SEMICOLON
    (105) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (118) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (123) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (110) ifblock -> . if
    (111) ifblock -> . if else
    (112) ifblock -> . if else_if
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 131
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 25
    THIS            shift and go to state 26
    SWITCH          shift and go to state 27
    RETURN          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    TRY             shift and go to state 31
    STATIC          shift and go to state 32
    IF              shift and go to state 34

    statements                     shift and go to state 344
    statement                      shift and go to state 130
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    increment                      shift and go to state 24
    if                             shift and go to state 33

state 342

    (11) constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 345


state 343

    (12) constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 12 (constructor -> ACCESS IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE .)


state 344

    (123) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements . RBRACE
    (124) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements . RBRACE FINALLY LBRACE statements RBRACE

    RBRACE          shift and go to state 346


state 345

    (11) constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .

    ACCESS          reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 11 (constructor -> ACCESS IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 346

    (123) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .
    (124) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE . FINALLY LBRACE statements RBRACE

    ACCESS          reduce using rule 123 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    PASS            reduce using rule 123 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 123 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 123 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 123 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 123 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 123 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    SOP             reduce using rule 123 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    THIS            reduce using rule 123 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    SWITCH          reduce using rule 123 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 123 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 123 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 123 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 123 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    STATIC          reduce using rule 123 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 123 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 123 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 123 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    CASE            reduce using rule 123 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 123 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE .)
    FINALLY         shift and go to state 347


state 347

    (124) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY . LBRACE statements RBRACE

    LBRACE          shift and go to state 348


state 348

    (124) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE . statements RBRACE
    (25) statements -> . statement
    (26) statements -> . statement statements
    (29) statement -> . assignment_statement
    (30) statement -> . class_statement
    (31) statement -> . print_statement
    (32) statement -> . this_assign
    (33) statement -> . switch
    (34) statement -> . return
    (35) statement -> . while
    (36) statement -> . for
    (37) statement -> . try_catch
    (38) statement -> . PASS SEMICOLON
    (39) statement -> . ACCESS assignment_statement
    (40) statement -> . function
    (41) statement -> . function_call
    (42) statement -> . ifblock
    (43) statement -> . BREAK SEMICOLON
    (65) assignment_statement -> . RETURNTYPE IDENTIFIER ASSIGN expression SEMICOLON
    (66) assignment_statement -> . RETURNTYPE IDENTIFIER SEMICOLON
    (67) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (68) assignment_statement -> . RETURNTYPE IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (69) assignment_statement -> . RETURNTYPE IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (70) assignment_statement -> . RETURNTYPE IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (71) assignment_statement -> . RETURNTYPE IDENTIFIER PLUS PLUS SEMICOLON
    (72) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (73) assignment_statement -> . IDENTIFIER PLUS ASSIGN expression SEMICOLON
    (74) assignment_statement -> . IDENTIFIER MINUS ASSIGN expression SEMICOLON
    (75) assignment_statement -> . IDENTIFIER TIMES ASSIGN expression SEMICOLON
    (76) assignment_statement -> . IDENTIFIER DIVIDE ASSIGN expression SEMICOLON
    (77) assignment_statement -> . IDENTIFIER arrays PLUS PLUS SEMICOLON
    (78) assignment_statement -> . increment SEMICOLON
    (79) assignment_statement -> . IDENTIFIER arrays MINUS MINUS SEMICOLON
    (80) assignment_statement -> . PLUS PLUS IDENTIFIER arrays SEMICOLON
    (81) assignment_statement -> . MINUS MINUS IDENTIFIER arrays SEMICOLON
    (82) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (83) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN LBRACE items RBRACE SEMICOLON
    (84) assignment_statement -> . IDENTIFIER arrays ASSIGN expression SEMICOLON
    (85) assignment_statement -> . IDENTIFIER arrays ASSIGN LBRACE items RBRACE SEMICOLON
    (86) assignment_statement -> . RETURNTYPE IDENTIFIER arrays ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (87) assignment_statement -> . RETURNTYPE arrays IDENTIFIER ASSIGN NEW RETURNTYPE arrays SEMICOLON
    (54) class_statement -> . IDENTIFIER IDENTIFIER SEMICOLON
    (55) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN RPAREN SEMICOLON
    (56) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (57) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LPAREN params RPAREN SEMICOLON
    (58) class_statement -> . IDENTIFIER IDENTIFIER ASSIGN NEW IDENTIFIER LBRACKET NUMBER RBRACKET SEMICOLON
    (88) print_statement -> . SOP LPAREN expression RPAREN SEMICOLON
    (89) print_statement -> . SOP LPAREN RPAREN SEMICOLON
    (6) this_assign -> . THIS IDENTIFIER ASSIGN IDENTIFIER SEMICOLON
    (44) switch -> . SWITCH LPAREN IDENTIFIER RPAREN LBRACE cases RBRACE
    (103) return -> . RETURN IDENTIFIER SEMICOLON
    (104) return -> . RETURN SEMICOLON
    (105) return -> . RETURN expression SEMICOLON
    (49) while -> . WHILE LPAREN params RPAREN LBRACE statements RBRACE
    (118) for -> . FOR LPAREN assignment_statement params SEMICOLON increment RPAREN LBRACE statements RBRACE
    (123) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE
    (124) try_catch -> . TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE
    (13) function -> . RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (14) function -> . RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (15) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) function -> . ACCESS RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (17) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (18) function -> . STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (19) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (20) function -> . ACCESS STATIC RETURNTYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN params RPAREN SEMICOLON
    (28) function_call -> . IDENTIFIER LPAREN RPAREN SEMICOLON
    (110) ifblock -> . if
    (111) ifblock -> . if else
    (112) ifblock -> . if else_if
    (119) increment -> . PLUS PLUS IDENTIFIER
    (120) increment -> . MINUS MINUS IDENTIFIER
    (121) increment -> . IDENTIFIER PLUS PLUS
    (122) increment -> . IDENTIFIER MINUS MINUS
    (113) if -> . IF LPAREN params RPAREN LBRACE statements RBRACE

    PASS            shift and go to state 16
    ACCESS          shift and go to state 131
    BREAK           shift and go to state 20
    RETURNTYPE      shift and go to state 21
    IDENTIFIER      shift and go to state 6
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    SOP             shift and go to state 25
    THIS            shift and go to state 26
    SWITCH          shift and go to state 27
    RETURN          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    TRY             shift and go to state 31
    STATIC          shift and go to state 32
    IF              shift and go to state 34

    statements                     shift and go to state 349
    statement                      shift and go to state 130
    assignment_statement           shift and go to state 7
    class_statement                shift and go to state 8
    print_statement                shift and go to state 9
    this_assign                    shift and go to state 10
    switch                         shift and go to state 11
    return                         shift and go to state 12
    while                          shift and go to state 13
    for                            shift and go to state 14
    try_catch                      shift and go to state 15
    function                       shift and go to state 17
    function_call                  shift and go to state 18
    ifblock                        shift and go to state 19
    increment                      shift and go to state 24
    if                             shift and go to state 33

state 349

    (124) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements . RBRACE

    RBRACE          shift and go to state 350


state 350

    (124) try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .

    ACCESS          reduce using rule 124 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    PASS            reduce using rule 124 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    BREAK           reduce using rule 124 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    RETURNTYPE      reduce using rule 124 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 124 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    PLUS            reduce using rule 124 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    MINUS           reduce using rule 124 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    SOP             reduce using rule 124 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    THIS            reduce using rule 124 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    SWITCH          reduce using rule 124 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    RETURN          reduce using rule 124 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    WHILE           reduce using rule 124 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    FOR             reduce using rule 124 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    TRY             reduce using rule 124 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    STATIC          reduce using rule 124 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    IF              reduce using rule 124 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    $end            reduce using rule 124 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    RBRACE          reduce using rule 124 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    CASE            reduce using rule 124 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)
    DEFAULT         reduce using rule 124 (try_catch -> TRY LBRACE statements RBRACE CATCH LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE statements RBRACE FINALLY LBRACE statements RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 60 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 94 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 94 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 176 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 176 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 176 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 176 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 177 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 177 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 177 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 177 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 178 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 178 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 178 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 178 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 179 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 179 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 179 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 179 resolved as shift
